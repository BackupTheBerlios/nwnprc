/*
 * SchoolMenu.java
 *
 * Created on March 28, 2003, 10:17 PM
 */

package CharacterCreator;

import java.util.Map;
import java.awt.event.*;
import java.io.*;
import javax.swing.JOptionPane;
import java.awt.*;
/**
 *
 * @author  James
 */
public class SchoolMenu extends javax.swing.JFrame {
    
    /** Creates new form SchoolMenu */
    public SchoolMenu() {
        menucreate = TLKFactory.getCreateMenu();
        TLKFAC = menucreate.getTLKFactory();        
        RESFAC = menucreate.getResourceFactory();        
        initComponents();
        
        Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
        if ( (screenSize.getWidth() > getContentPane().getWidth()) && (screenSize.getHeight() > getContentPane().getHeight())) {
            int intwidth = new Double(((screenSize.getWidth()-getContentPane().getWidth())/2)).intValue();
            int intheight = new Double(((screenSize.getHeight()-getContentPane().getHeight())/2)).intValue();            
            setLocation(intwidth, intheight);
        } else {
            setLocation(0,0);
        }        
        
        try
        {
            schoolmap = RESFAC.getResourceAs2DA("spellschools");
        }
        catch(IOException err)
        {
            JOptionPane.showMessageDialog(null, "Fatal Error - spellschools.2da not found. Your data files might be corrupt.", "Error", 0);
            System.exit(0);
        }        
        DescriptionText.setText(TLKFAC.getEntry(381));
        SCHOOL = 0;
        GeneralButton.setSelected(true);        
    }
    
    private void DoReset() {
        ConjurationButton.setSelected(false);
        TransmutationButton.setSelected(false);
        EnchantmentButton.setSelected(false);
        IllusionButton.setSelected(false);
        NecromancyButton.setSelected(false);
        GeneralButton.setSelected(false);
        AbjurationButton.setSelected(false);
        DivinationButton.setSelected(false);
        EvocationButton.setSelected(false);
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        java.awt.GridBagConstraints gridBagConstraints;

        OKButton = new javax.swing.JButton();
        CancelButton = new javax.swing.JButton();
        RecommendedButton = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        GeneralButton = new javax.swing.JToggleButton();
        AbjurationButton = new javax.swing.JToggleButton();
        EvocationButton = new javax.swing.JToggleButton();
        ConjurationButton = new javax.swing.JToggleButton();
        NecromancyButton = new javax.swing.JToggleButton();
        TransmutationButton = new javax.swing.JToggleButton();
        EnchantmentButton = new javax.swing.JToggleButton();
        DivinationButton = new javax.swing.JToggleButton();
        IllusionButton = new javax.swing.JToggleButton();
        DescriptionContainer = new javax.swing.JScrollPane();
        DescriptionPanel = new javax.swing.JPanel();
        DescriptionText = new javax.swing.JTextArea();

        getContentPane().setLayout(new java.awt.GridBagLayout());

		setTitle("Spell School Menu");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                exitForm(evt);
            }
        });

        OKButton.setText("OK");
        OKButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OKButtonActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 12;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.SOUTHWEST;
        getContentPane().add(OKButton, gridBagConstraints);

        CancelButton.setText("Cancel");
        CancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CancelButtonActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 12;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.SOUTHEAST;
        getContentPane().add(CancelButton, gridBagConstraints);

        RecommendedButton.setText("Recommended");
        RecommendedButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RecommendedButtonActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 12;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.SOUTHEAST;
        getContentPane().add(RecommendedButton, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        getContentPane().add(jPanel1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 11;
        getContentPane().add(jPanel2, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 0;
        getContentPane().add(jPanel3, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 13;
        getContentPane().add(jPanel4, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        getContentPane().add(jPanel5, gridBagConstraints);

        GeneralButton.setText("General");
        GeneralButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GeneralButtonActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        getContentPane().add(GeneralButton, gridBagConstraints);

        AbjurationButton.setText("Abjuration");
        AbjurationButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AbjurationButtonActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 30;
        getContentPane().add(AbjurationButton, gridBagConstraints);

        EvocationButton.setText("Evocation");
        EvocationButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EvocationButtonActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        getContentPane().add(EvocationButton, gridBagConstraints);

        ConjurationButton.setText("Conjuration");
        ConjurationButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ConjurationButtonActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        getContentPane().add(ConjurationButton, gridBagConstraints);

        NecromancyButton.setText("Necromancy");
        NecromancyButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NecromancyButtonActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 9;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        getContentPane().add(NecromancyButton, gridBagConstraints);

        TransmutationButton.setText("Transmutation");
        TransmutationButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TransmutationButtonActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        getContentPane().add(TransmutationButton, gridBagConstraints);

        EnchantmentButton.setText("Enchantment");
        EnchantmentButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EnchantmentButtonActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        getContentPane().add(EnchantmentButton, gridBagConstraints);

        DivinationButton.setText("Divination");
        DivinationButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DivinationButtonActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        getContentPane().add(DivinationButton, gridBagConstraints);

        IllusionButton.setText("Illusion");
        IllusionButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                IllusionButtonActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 9;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        getContentPane().add(IllusionButton, gridBagConstraints);

        DescriptionContainer.setHorizontalScrollBarPolicy(javax.swing.JScrollPane.HORIZONTAL_SCROLLBAR_NEVER);
        DescriptionContainer.setVerticalScrollBarPolicy(javax.swing.JScrollPane.VERTICAL_SCROLLBAR_ALWAYS);
        DescriptionContainer.setViewportBorder(new javax.swing.border.MatteBorder(new java.awt.Insets(10, 10, 10, 10), new java.awt.Color(204, 204, 204)));
        DescriptionContainer.setPreferredSize(new java.awt.Dimension(400, 100));
        DescriptionContainer.setAutoscrolls(true);
        DescriptionPanel.setLayout(new java.awt.GridBagLayout());

        DescriptionText.setBackground(new java.awt.Color(0, 0, 0));
        DescriptionText.setForeground(new java.awt.Color(255, 255, 153));
        DescriptionText.setLineWrap(true);
        DescriptionText.setWrapStyleWord(true);
        DescriptionText.setPreferredSize(new java.awt.Dimension(400, 800));
        DescriptionText.setAutoscrolls(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 13;
        gridBagConstraints.gridheight = 13;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        DescriptionPanel.add(DescriptionText, gridBagConstraints);

        DescriptionContainer.setViewportView(DescriptionPanel);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.gridheight = 12;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        getContentPane().add(DescriptionContainer, gridBagConstraints);

        pack();
    }//GEN-END:initComponents
    
    private void IllusionButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_IllusionButtonActionPerformed
        // Add your handling code here:
        DoReset();
        IllusionButton.setSelected(true);
        DescriptionText.setText(TLKFAC.getEntry(Integer.parseInt(schoolmap[6][5])));
        SCHOOL = 6;             
    }//GEN-LAST:event_IllusionButtonActionPerformed
    
    private void DivinationButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DivinationButtonActionPerformed
        // Add your handling code here:
        DoReset();
        DivinationButton.setSelected(true);
        DescriptionText.setText(TLKFAC.getEntry(Integer.parseInt(schoolmap[3][5])));
        SCHOOL = 3;             
    }//GEN-LAST:event_DivinationButtonActionPerformed
    
    private void EnchantmentButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EnchantmentButtonActionPerformed
        // Add your handling code here:
        DoReset();
        EnchantmentButton.setSelected(true);
        DescriptionText.setText(TLKFAC.getEntry(Integer.parseInt(schoolmap[4][5])));
        SCHOOL = 4;             
    }//GEN-LAST:event_EnchantmentButtonActionPerformed
    
    private void TransmutationButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TransmutationButtonActionPerformed
        // Add your handling code here:
        DoReset();
        TransmutationButton.setSelected(true);
        DescriptionText.setText(TLKFAC.getEntry(Integer.parseInt(schoolmap[8][5])));
        SCHOOL = 8;             
    }//GEN-LAST:event_TransmutationButtonActionPerformed
    
    private void NecromancyButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NecromancyButtonActionPerformed
        // Add your handling code here:
        DoReset();
        NecromancyButton.setSelected(true);
        DescriptionText.setText(TLKFAC.getEntry(Integer.parseInt(schoolmap[7][5])));
        SCHOOL = 7;             
    }//GEN-LAST:event_NecromancyButtonActionPerformed
    
    private void ConjurationButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ConjurationButtonActionPerformed
        // Add your handling code here:
        DoReset();
        ConjurationButton.setSelected(true);
        DescriptionText.setText(TLKFAC.getEntry(Integer.parseInt(schoolmap[2][5])));
        SCHOOL = 2;        
    }//GEN-LAST:event_ConjurationButtonActionPerformed
    
    private void EvocationButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EvocationButtonActionPerformed
        // Add your handling code here:
        DoReset();
        EvocationButton.setSelected(true);
        DescriptionText.setText(TLKFAC.getEntry(Integer.parseInt(schoolmap[5][5])));
        SCHOOL = 5;        
    }//GEN-LAST:event_EvocationButtonActionPerformed
    
    private void AbjurationButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AbjurationButtonActionPerformed
        // Add your handling code here:
        DoReset();
        AbjurationButton.setSelected(true);
        DescriptionText.setText(TLKFAC.getEntry(Integer.parseInt(schoolmap[1][5])));
        SCHOOL = 1;        
    }//GEN-LAST:event_AbjurationButtonActionPerformed
    
    private void GeneralButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GeneralButtonActionPerformed
        // Add your handling code here:
        DoReset();
        GeneralButton.setSelected(true);
        DescriptionText.setText(TLKFAC.getEntry(Integer.parseInt(schoolmap[0][5])));
        SCHOOL = 0;
    }//GEN-LAST:event_GeneralButtonActionPerformed
    
    private void RecommendedButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RecommendedButtonActionPerformed
        // Add your handling code here:
        DoReset();
        GeneralButton.setSelected(true);
        DescriptionText.setText(TLKFAC.getEntry(Integer.parseInt(schoolmap[0][5])));
        SCHOOL = 0;
    }//GEN-LAST:event_RecommendedButtonActionPerformed
    
    private void CancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CancelButtonActionPerformed
        // Add your handling code here:
        setVisible(false);
        dispose();         
    }//GEN-LAST:event_CancelButtonActionPerformed
    
    private void OKButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OKButtonActionPerformed
        // Add your handling code here:
        
        menucreate.MainCharData[16].put(new Integer(0),new Integer(SCHOOL));
        
        (new SpellMenu()).show();
        //What goes next
        setVisible(false);
        dispose();         
    }//GEN-LAST:event_OKButtonActionPerformed
    
    /** Exit the Application */
    private void exitForm(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_exitForm
        setVisible(false);
        dispose();         
    }//GEN-LAST:event_exitForm
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JToggleButton AbjurationButton;
    private javax.swing.JButton CancelButton;
    private javax.swing.JToggleButton ConjurationButton;
    private javax.swing.JScrollPane DescriptionContainer;
    private javax.swing.JPanel DescriptionPanel;
    private javax.swing.JTextArea DescriptionText;
    private javax.swing.JToggleButton DivinationButton;
    private javax.swing.JToggleButton EnchantmentButton;
    private javax.swing.JToggleButton EvocationButton;
    private javax.swing.JToggleButton GeneralButton;
    private javax.swing.JToggleButton IllusionButton;
    private javax.swing.JToggleButton NecromancyButton;
    private javax.swing.JButton OKButton;
    private javax.swing.JButton RecommendedButton;
    private javax.swing.JToggleButton TransmutationButton;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    // End of variables declaration//GEN-END:variables
    private String[][] schoolmap;
    private ResourceFactory RESFAC;
    public int SCHOOL;
    private CreateMenu menucreate;    
    private TLKFactory TLKFAC;    
}
