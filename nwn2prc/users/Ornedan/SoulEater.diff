Index: 2das/cls_feat_sleat.2da
===================================================================
RCS file: /cvsroot/nwnprc/nwnprc/2das/cls_feat_sleat.2da,v
retrieving revision 1.1
retrieving revision 1.2
diff -u -r1.1 -r1.2
--- 2das/cls_feat_sleat.2da	12 Jul 2005 00:13:43 -0000	1.1
+++ 2das/cls_feat_sleat.2da	4 Dec 2006 22:14:54 -0000	1.2
@@ -1,9 +1,8 @@
 2DA V2.0

-  FeatLabel                         FeatIndex List GrantedOnLevel OnMenu
-0 FEAT_ENERGY_DRAIN                 3995      3    1              1
-1 FEAT_SOUL_SHIFT                   3997      3    6              1
-2 FEAT_PRESTIGE_SHIFTER_TRUEFORM    2914      3    6              1
-3 FEAT_SOUL_BLAST                   3996      3    3              1
-4 FEAT_PRESTIGE_SHIFTER_QUICKSLOTS1 2915      3    6              1
-5 FEAT_PRESTIGE_SHIFTER_QUICKSLOTS2 2916      3    6              1
+     FeatLabel                      FeatIndex List GrantedOnLevel OnMenu
+0    FEAT_SLEAT_ENERGY_DRAIN        3995      3    1              1
+1    FEAT_SLEAT_SBLAST              3996      3    3              1
+2    FEAT_SLEAT_SRADIANCE           3997      3    6              1
+3    FEAT_PRESTIGE_SHIFTER_TRUEFORM 2914      3    6              1
+4    FEAT_SLEAT_SBLAST_X2           3998      3    10             1
Index: 2das/cls_pres_sleat.2da
===================================================================
RCS file: /cvsroot/nwnprc/nwnprc/2das/cls_pres_sleat.2da,v
retrieving revision 1.4
retrieving revision 1.5
diff -u -r1.4 -r1.5
--- 2das/cls_pres_sleat.2da	27 Apr 2006 21:59:06 -0000	1.4
+++ 2das/cls_pres_sleat.2da	4 Dec 2006 22:14:54 -0000	1.5
@@ -1,8 +1,10 @@
 2DA V2.0

-   LABEL       ReqType ReqParam1 ReqParam2
-0  Alertness   FEAT    0         ****
-1  Base_Attack BAB     5         ****
-2  Lore        SKILL   7         2
-5  ScriptVar   VAR     PRC_AllowSoulEater 0
-5  ScriptVar   VAR     PRC_PrereqSoulEater 0
\ No newline at end of file
+  LABEL         ReqType ReqParam1           ReqParam2
+0 Alertness     FEAT    0                   ****
+1 WFoc_Creature FEATOR  291                 ****
+2 WFoc_Unarmed  FEATOR  100                 ****
+3 Base_Attack   BAB     5                   ****
+4 Lore          SKILL   7                   2
+5 ScriptVar     VAR     PRC_AllowSoulEater  0
+6 ScriptVar     VAR     PRC_PrereqSoulEater 0
Index: 2das/feat.2da
===================================================================
RCS file: /cvsroot/nwnprc/nwnprc/2das/feat.2da,v
retrieving revision 1.713
retrieving revision 1.714
diff -u -r1.713 -r1.714
--- 2das/feat.2da	3 Dec 2006 17:48:30 -0000	1.713
+++ 2das/feat.2da	4 Dec 2006 22:14:54 -0000	1.714
@@ -3996,10 +3996,10 @@
 3992  FEAT_CLANGEDDINS_MIGHT                                    16826322 16826323    ife_wepfoc_Bax   ****           ****   ****   ****   ****   ****   ****   ****        ****        ****        0            0            0                ****     ****  1651    ****      0.2     99         ****       1          ****       ****       ****       ****       ****       ****     ****             ****      ****              FEAT_CLANGEDDINS_MIGHT                         6               ****        ****     ****          ****     ****        0          1
 3993  FEAT_ALAG_SILVERBEARD                                     16826324 16826325    id_earth         ****           ****   ****   ****   ****   ****   ****   ****        ****        ****        0            0            0                ****     ****  ****    ****      0.2     -1         ****       ****       ****       ****       ****       ****       ****       ****     ****             ****      ****              FEAT_ALAG_SILVERBEARD                          6               ****        ****     ****          ****     ****        0          1
 3994  FEAT_ALAG_ROCKBURST                                       16826326 16826327    is_hailofstone   ****           ****   ****   ****   ****   ****   ****   ****        ****        ****        0            0            0                ****     ****  1652    ****      0.2     99         ****       ****       ****       ****       ****       ****       ****       ****     ****             ****      ****              FEAT_ALAG_ROCKBURST                            4               1           ****     ****          ****     ****        0          1
-3995  FEAT_ENERGY_DRAIN                                         16832120 16832121    ief_leveldrn     ****           ****   ****   ****   ****   ****   ****   ****        ****        ****        0            0            0                ****     ****  2788    ****      1       -1         ****       ****       ****       ****       ****       ****       ****       ****     ****             ****      ****              FEAT_ENERGY_DRAIN                              5               1           ****     ****          ****     ****        0          1
-3996  FEAT_SOUL_BLAST                                           16832125 16832126    ife_x2immfire    ****           ****   ****   ****   ****   ****   ****   ****        ****        ****        0            0            0                2        ****  2789    ****      1       1          ****       ****       ****       ****       ****       ****       ****       ****     ****             ****      ****              FEAT_SOUL_BLAST                                5               1           ****     ****          ****     ****        0          1
-3997  FEAT_SOUL_SHIFT                                           16832123 16832124    ife_wildshape    ****           ****   ****   ****   ****   ****   ****   ****        ****        ****        0            0            0                10       ****  2787    ****      1       ****       ****       1          ****       ****       ****       ****       ****       ****     ****             ****      ****              FEAT_SOUL_SHIFT                                5               ****        ****     ****          ****     ****        0          1

+3995  SE_Energy_Drain                                           16832120 16832121    ief_leveldrn     ****           ****   ****   ****   ****   ****   ****   ****        ****        ****        0            0            0                ****     ****  2788    ****      1       -1         ****       ****       ****       ****       ****       ****       ****       ****     ****             ****      ****              FEAT_SLEAT_ENERGY_DRAIN                        5               1           ****     ****          ****     ****        0          1
+3996  SE_Soul_Blast                                             16832125 16832126    ife_x2immfire    ****           ****   ****   ****   ****   ****   ****   ****        ****        ****        0            0            0                2        ****  2789    3998      1       1          ****       ****       ****       ****       ****       ****       ****       ****     ****             ****      ****              FEAT_SLEAT_SBLAST                              5               1           ****     ****          ****     ****        0          1
+3997  SE_Soul_Radiance                                          16832123 16832124    ife_wildshape    ****           ****   ****   ****   ****   ****   ****   ****        ****        ****        0            0            0                10       ****  2787    ****      1       -1         ****       1          ****       ****       ****       ****       ****       ****     ****             ****      ****              FEAT_SLEAT_SRADIANCE                           5               ****        ****     ****          ****     ****        0          0
+3998  SE_Soul_Blast_X2                                          16832125 16832126    ife_x2immfire    ****           ****   ****   ****   ****   ****   ****   ****        ****        ****        0            0            0                2        ****  2789    ****      1       2          ****       ****       ****       ****       ****       ****       ****       ****     ****             ****      ****              FEAT_SLEAT_SBLAST_X2                           5               1           ****     ****          ****     ****        0          1

 4000  FEAT_HELLFIRE_GRASP                                       16823020 16823021    is_burnhands     ****           ****   ****   ****   ****   ****   ****   ****        ****        ****        0            0            0                ****     ****  3000    ****      0.5     -1         ****       ****       ****       ****       ****       ****       ****       ****     ****             ****      ****              FEAT_HELLFIRE_GRASP                            6               1           ****     ****          ****     ****        0          1
 4001  FEAT_FIRE_ADEPT                                           16823022 16823023    is_enebuff       ****           ****   ****   ****   ****   ****   ****   ****        ****        ****        0            0            0                ****     ****  ****    ****      0.5     ****       ****       ****       ****       ****       ****       ****       ****       ****     ****             ****      ****              FEAT_FIRE_ADEPT                                6               ****        ****     ****          ****     ****        0          1
Index: 2das/spells.2da
===================================================================
RCS file: /cvsroot/nwnprc/nwnprc/2das/spells.2da,v
retrieving revision 1.606
retrieving revision 1.607
diff -u -r1.606 -r1.607
--- 2das/spells.2da	3 Dec 2006 17:49:39 -0000	1.606
+++ 2das/spells.2da	4 Dec 2006 22:15:04 -0000	1.607
@@ -2788,9 +2788,9 @@
 2784  F_Scribe                                                  16826207 rune_face          E      P     **** ****      0x01       rune_face        **** ****   ****  ****    ****   ****     ****   ****     ****     ****            ****             ****            ****            ****             ****             self     0        ****            ****           ****            ****             **** ****             ****         ****          ****             ****            ****           ****         ****         ****         ****         ****         ****         ****     ****   ****     ****       ****             ****              ****       ****           2368      ****     ****     ****
 2785  Rune_Bers                                                 16826193 ife_x2kicrit       E      P     **** ****      0x09       rune_bers        **** ****   ****  ****    ****   ****     ****   ****     ****     ****            ****             ****            ****            ****             ****             self     0        ****            ****           ****            ****             **** ****             ****         ****          ****             ****            ****           ****         ****         ****         ****         ****         ****         ****     ****   ****     ****       ****             ****              ****       ****           2372      ****     ****     ****
 2786  Blight_Touch                                              16824947 ife_x2humanshp     ****   T     vs   ****      0x02       prc_blight_touch **** ****   ****  ****    ****   ****     ****   ****     ****     ****            ****             ****            ****            ****             ****             touch    0        ****            ****           ****            ****             **** ****             ****         ****          ****             ****            ****           ****         ****         ****         ****         ****         ****         ****     ****   ****     ****       ****             ****              ****       1              2253      ****     ****     0
-2787  SPELL_FEAT_SOULSHIFT                                      16832123 ife_wildshape      T      P     **** ****      0x01       soul_options     **** ****   ****  ****    ****   ****     1      0        ****     ****            ****             ****            ****            ****             ****             ****     0        ****            ****           ****            ****             0    ****             ****         ****          ****             ****            ****           0            ****         ****         ****         ****         ****         ****     ****   3        16833538   0                0                 ****       0              3997      ****     ****     0
-2788  SE_Energy_Drain                                           16832120 ief_leveldrn       N      T     **** ****      0x02       soul_edrain      **** ****   ****  ****    ****   ****     ****   ****     ****     ****            ****             ****            ****            ****             ****             touch    1000     ****            ****           ****            ****             **** ****             ****         ****          ****             ****            ****           ****         ****         ****         ****         ****         ****         3        ****   1        16833535   0                0                 ****       1              3995      ****     ****     0
-2789  SE_SOUL_BLAST                                             16832125 ife_x2immfire      V      L     -    ****      0x02       soul_blast       **** ****   ****  ****    ****   ****     1      1500     hand     ****            ****             ****            ****            ****             ****             touch    1000     ****            ****           ****            sim_shwngevil01  0    ****             linked       hand          ****             path            ****           ****         ****         ****         ****         ****         ****         2        ****   3        16833540   0                0                 ****       1              3996      ****     ****     1
+2787  SE_Soul_Radiance                                          16832123 ife_wildshape      G      P     **** ****      0x01       prc_sleat_sradia **** ****   ****  ****    ****   ****     ****   ****     ****     ****            ****             ****            ****            ****             ****             ****     ****     ****            ****           ****            ****             0    ****             ****         ****          ****             ****            ****           0            ****         ****         ****         ****         ****         ****     ****   3        16832124   0                0                 ****       0              3997      ****     ****     0
+2788  SE_Energy_Drain                                           16832120 ief_leveldrn       G      T     **** ****      0x02       prc_sleat_edrain **** ****   ****  ****    ****   ****     ****   ****     ****     ****            ****             ****            ****            ****             ****             touch    1000     ****            ****           ****            ****             **** ****             ****         ****          ****             ****            ****           0            ****         ****         ****         ****         ****         3        ****   1        16832121   0                0                 ****       1              3995      ****     ****     0
+2789  SE_Soul_Blast                                             16832125 ife_x2immfire      G      L     **** ****      0x32       prc_sleat_sblast **** ****   ****  ****    ****   ****     1      1500     hand     ****            VCO_MEHANEVIL02  vco_lgupevil01  sco_mehanevil03 ****             ****             touch    1000     ****            ****           ****            sim_shwngevil01  0    ****             ****         ****          ****             ****            ****           0            ****         ****         ****         ****         ****         2        ****   3        16832126   0                0                 ****       1              3996      ****     ****     0
 2790  BlightMind                                                16824995 is_DomMon          E      M     -    0x00      0x2a       prc_tlbl_dmblght **** ****   ****  ****    ****   ****     9      1500     head     ****            ****             vco_lgsprmind01 sco_lgsprmind01 vs_chant_ench_hm vs_chant_ench_hf out      1000     ****            ****           ****            ****             1    vpr_los          accelerating hand          spr_los          path            Mind_Affecting 1            ****         ****         ****         ****         ****         2        ****   1        6141       1                0                 ****       1              ****      ****     ****     1


Index: include/inc_soul_shift.nss
===================================================================
RCS file: include/inc_soul_shift.nss
diff -N include/inc_soul_shift.nss
--- include/inc_soul_shift.nss	24 Jan 2006 22:27:24 -0000	1.3
+++ /dev/null	1 Jan 1970 00:00:00 -0000
@@ -1,9 +0,0 @@
-// Soul Eater Shifting Include
-
-#include "prc_alterations"
-#include "pnp_shft_main"
-#include "nw_o0_itemmaker"
-#include "nw_i0_spells"
-#include "prc_inc_function"
-
-// uses pnp shifter instead
\ No newline at end of file
Index: include/inc_soul_shiftbup.nss
===================================================================
RCS file: include/inc_soul_shiftbup.nss
diff -N include/inc_soul_shiftbup.nss
--- include/inc_soul_shiftbup.nss	16 Jun 2006 09:51:17 -0000	1.5
+++ /dev/null	1 Jan 1970 00:00:00 -0000
@@ -1,2301 +0,0 @@
-// Soul Eater Shifting Include
-
-
-// Adds a creature to the list of valid GWS shift possibilities
-void RecognizeCreature( object oPC, string sTemplate, string sCreatureName );
-
-// Checks to see if the specified creature is a valid GWS shift choice
-int IsKnownCreature( object oPC, string sTemplate );
-
-// Shift based on position in the known array
-// oTemplate is either the epic or normal template
-void ShiftFromKnownArray(int nIndex,int iEpic, object oPC);
-
-// Creates a temporary creature for the shifter to shift into
-// Validates the shifter is able to become that creature based on level
-// Return values: TRUE or FALSE
-int SetShiftFromTemplateValidate(object oPC, string sTemplate, int iEpic);
-
-//is inventory full if yes then CanShift = false else CanShift = true
-int CanShift(object oPC);
-
-// Transforms the oPC into the oTarget using the epic rules
-// Assumes oTarget is already a valid target
-// Return values: TRUE or FALSE
-int SetShiftEpic(object oPC, object oTarget);
-
-// Transforms the oPC into the oTarget
-// Assumes oTarget is already a valid target
-// this is 3 stage
-// these 3 scripts replace the origanel setshift script
-// (setshift_03 is almost all of the origenal setshift script)
-void SetShift(object oPC, object oTarget);
-void SetShift_02(object oPC, object oTarget);
-
-// Transforms the oPC back to thier true form if they are shifted
-// Return values: TRUE or FALSE
-void SetShiftTrueForm(object oPC);
-
-//clears out all extra shifter creature items
-void ClearShifterItems(object oPC);
-
-//shift from quickslot info
-void QuickShift(object oPC, int iQuickSlot);
-
-//asign form to your quick slot
-void SetQuickSlot(object oPC, int iIndex, int iQuickSlot, int iEpic);
-
-// Determine if the oCreature has the ability to cast spells
-// Return values: TRUE or FALSE
-int GetCanFormCast(object oCreature);
-
-// Determines if the oCreature is harmless enough to have
-// special effects applied to the shifter
-// Return values: TRUE or FALSE
-int GetIsCreatureHarmless(object oCreature);
-
-// Transforms the oPC back to thier true form if they are shifted
-// Return values: TRUE or FALSE
-void SetShiftTrueForm(object oPC);
-
-// Extra item functions
-// Copys all the item properties from the target to the destination
-void CopyAllItemProperties(object oDestination,object oTarget);
-
-// Gets all the ability modifires from the creature objects inv
-// use IP_CONTS_ABILITY_*
-int GetAllItemsAbilityModifier(object oTarget, int nAbility);
-
-// Removes all the item properties from the item
-void RemoveAllItemProperties(object oItem);
-
-// Gets an IP_CONST_FEAT_* from FEAT_*
-// returns -1 if the feat is not available
-int GetIPFeatFromFeat(int nFeat);
-
-// Determines if the target creature has a certain type of spell
-// and sets the powers onto the object item
-void SetItemSpellPowers(object oItem, object oTarget);
-
-// Removes leftover aura effects
-void RemoveAuraEffect( object oPC );
-
-//delete form from spark
-void DeleteFromKnownArray(int nIndex, object oPC);
-
-// Determines the APPEARANCE_TYPE_* for the PC
-// based on the players RACIAL type
-int GetTrueForm(object oPC);
-
-
-#include "prc_alterations"
-#include "nw_o0_itemmaker"
-#include "nw_i0_spells"
-#include "prc_inc_function"
-
-
-
-
-void RecognizeCreature( object oPC, string sTemplate, string sCreatureName )
-{
-
-    // Only add new ones
-    if (IsKnownCreature(oPC,sTemplate))
-        return;
-
-    object oMimicForms = GetItemPossessedBy( oPC, "soul_prism" );
-    if ( !GetIsObjectValid(oMimicForms) )
-        oMimicForms = CreateItemOnObject( "soul_prism", oPC );
-
-    SetPlotFlag(oMimicForms, TRUE);
-    SetDroppableFlag(oMimicForms, FALSE);
-    SetItemCursedFlag(oMimicForms, FALSE);
-
-    int num_creatures = GetLocalInt( oMimicForms, "num_creatures" );
-
-    SetLocalArrayString( oMimicForms, "shift_choice", num_creatures, sTemplate );
-    SetLocalArrayString( oMimicForms, "shift_choice_name", num_creatures, sCreatureName );
-    SetLocalInt( oMimicForms, "num_creatures", num_creatures+1 );
-
-
-SendMessageToPC(oPC,"Num Creatures = "+IntToString(num_creatures+1));
-}
-
-
-
-
-int IsKnownCreature( object oPC, string sTemplate )
-{
-    object oMimicForms = GetItemPossessedBy( oPC, "soul_prism" );
-    int num_creatures = GetLocalInt( oMimicForms, "num_creatures" );
-    int i;
-    string cmp;
-
-    for ( i=0; i<num_creatures; i++ )
-    {
-        cmp = GetLocalArrayString( oMimicForms, "shift_choice", i );
-        if ( TestStringAgainstPattern( cmp, sTemplate ) )
-        {
-            return TRUE;
-        }
-    }
-    return FALSE;
-}
-
-
-
-
-
-// Shift based on position in the known array
-void ShiftFromKnownArray(int nIndex,int iEpic, object oPC)
-{
-    object oMimicForms = GetItemPossessedBy( oPC, "soul_prism" );
-
-    // Find the name
-    string sResRef = GetLocalArrayString( oMimicForms, "shift_choice", nIndex );
-    if (iEpic == FALSE)
-    {
-        // Force a normal shift
-        SetShiftFromTemplateValidate(oPC,sResRef,FALSE);
-    }
-    else // epic shift
-    {
-        SetShiftFromTemplateValidate(oPC,sResRef,TRUE);
-    }
-}
-
-
-
-
-
-// Creates a temporary creature for the shifter to shift into
-// Validates the shifter is able to become that creature based on level
-// Return values: TRUE or FALSE
-// the epic version of this script was rolled into this 1 with the
-// addition of the iEpic peramiter
-int SetShiftFromTemplateValidate(object oPC, string sTemplate, int iEpic)
-{
-    if (!CanShift(oPC))
-    {
-        return FALSE;
-    }
-    int bRetValue = FALSE;
-    int in_list = IsKnownCreature( oPC, sTemplate );
-
-
-    int i=0;
-    object oLimbo=GetObjectByTag("Limbo",i);
-    location lLimbo;
-    while (i < 100)
-    {
-        if (GetIsObjectValid(oLimbo))
-        {
-            if (GetName(oLimbo)=="Limbo")
-            {
-                i = 2000;
-                vector vLimbo = Vector(0.0f, 0.0f, 0.0f);
-                lLimbo = Location(oLimbo, vLimbo, 0.0f);
-            }
-        }
-        i++;
-        object oLimbo=GetObjectByTag("Limbo",i);
-    }
-    object oTarget;
-    if (i>=2000)
-    {
-        oTarget = CreateObject(OBJECT_TYPE_CREATURE,sTemplate,lLimbo);
-    }
-    else
-    {
-        oTarget = CreateObject(OBJECT_TYPE_CREATURE,sTemplate,GetLocation(oPC));
-    }
-    // Create the obj from the template
-//    object oTarget = CreateObject(OBJECT_TYPE_CREATURE,sTemplate,GetLocation(oPC));
-
-
-
-
-        //get the appearance before changing it
-        SetLocalInt(oTarget,"Appearance",GetAppearanceType(oTarget));
-        //set appearance to invis so it dont show up when scripts run thro
-        SetCreatureAppearanceType(oTarget,APPEARANCE_TYPE_INVISIBLE_HUMAN_MALE);
-        //set oTarget for deletion
-        SetLocalInt(oTarget,"pnp_shifter_deleteme",1);
-        //Shift the PC to it
-        bRetValue = TRUE;
-        if (iEpic==TRUE)
-            SetShiftEpic (oPC, oTarget);
-        else
-            SetShift(oPC,oTarget);
-
-    return bRetValue;
-}
-
-
-
-
-int CanShift(object oPC)
-{
-
-
-    int iOutcome = FALSE;
-
-    if (GetLocalInt(oPC, "shifting") == TRUE)
-    {
-        return iOutcome;
-    }
-
-    object oItem = CreateItemOnObject("pnp_shft_tstpkup", oPC);
-    if (GetItemPossessor(oItem) == oPC)
-    {
-        iOutcome = TRUE;
-    }
-    else
-    {
-        SendMessageToPC(oPC, "Your inventory is too full to allow you to unshift.");
-        SendMessageToPC(oPC, "Please make room enough for an armor-sized item and then try again.");
-    }
-
-    DestroyObject(oItem);
-
-    //there are issues with shifting will polymorphed
-    effect eEff = GetFirstEffect(oPC);
-    while (GetIsEffectValid(eEff))
-    {
-        int eType = GetEffectType(eEff);
-        if (eType == EFFECT_TYPE_POLYMORPH)
-        {
-            SendMessageToPC(oPC, "Shifting when polymorphed has been disabled.");
-            SendMessageToPC(oPC, "Please cancel your polymorph first.");
-            return FALSE;
-        }
-        eEff = GetNextEffect(oPC);
-    }
-    return iOutcome;
-}
-
-
-
-
-// Transforms the oPC into the oTarget using the epic rules
-// Assumes oTarget is already a valid target
-int SetShiftEpic(object oPC, object oTarget)
-{
-
-    SetLocalInt(oPC,"EpicShift",1); //this makes the setshift_3 script do the epic shifter stuff that used to be here
-
-    SetShift(oPC, oTarget);
-
-    return TRUE;
-}
-
-
-
-
-// Transforms the oPC into the oTarget
-// Assumes oTarget is already a valid target
-// starts here and goes to SetShift_02 then SetShift_03
-
-// stage 1:
-//   if the shifter if already shifted call unshift to run after this stage ends
-//   call next stage to start after this stage ends
-void SetShift(object oPC, object oTarget)
-{
-    SetLocalInt(oPC, "shifting", TRUE);
-
-    DelayCommand(0.1,SetShift_02(oPC, oTarget));
-    SetShiftTrueForm(oPC);
-
-}
-// stage 1 end:
-//   the shifter is unshifted if need be
-//   and the next stage is called
-
-// stage 2:
-//   this is most of what the old SetShift script did
-//   the changes are:
-//     no check for if shifted is needed and has been removed
-//     the epic ability item is done here (if epicshifter var is 1)
-//     oTarget is destryed in this script if its from the convo
-void SetShift_02(object oPC, object oTarget)
-{
-
-    //get all the creature items from the target
-    object oHide = GetItemInSlot(INVENTORY_SLOT_CARMOUR,oTarget);
-    object oWeapCR = GetItemInSlot(INVENTORY_SLOT_CWEAPON_R,oTarget);
-    object oWeapCL = GetItemInSlot(INVENTORY_SLOT_CWEAPON_L,oTarget);
-    object oWeapCB = GetItemInSlot(INVENTORY_SLOT_CWEAPON_B,oTarget);
-
-    //get all the creature items from the pc
-    object oHidePC = GetItemInSlot(INVENTORY_SLOT_CARMOUR,oPC);
-    object oWeapCRPC = GetItemInSlot(INVENTORY_SLOT_CWEAPON_R,oPC);
-    object oWeapCLPC = GetItemInSlot(INVENTORY_SLOT_CWEAPON_L,oPC);
-    object oWeapCBPC = GetItemInSlot(INVENTORY_SLOT_CWEAPON_B,oPC);
-
-
-    //creature item handling
-    if (!GetIsObjectValid(oHidePC)) //if you dont got a hide
-    {
-        oHidePC = CopyObject(oHide,GetLocation(oPC),oPC);  //copy the targets hide
-        if (!GetIsObjectValid(oHidePC))  //if the target dont have a hide
-        {
-            oHidePC = CreateItemOnObject("shifterhide",oPC);  //use a blank shifter hide
-        }
-        // Need to ID the stuff before we can put it on the PC
-        SetIdentified(oHidePC,TRUE);
-        DelayCommand(0.2,AssignCommand(oPC,ActionEquipItem(oHidePC,INVENTORY_SLOT_CARMOUR)));
-    }
-    else // if you do have a hide
-    {
-        ScrubPCSkin(oPC,oHidePC); //clean off all old props
-        CopyAllItemProperties(oHidePC,oHide); //copy all target props to our hide
-        DelayCommand(0.2,AssignCommand(oPC,ActionEquipItem(oHidePC,INVENTORY_SLOT_CARMOUR)));  //reequip the hide to get item props to update properly
-    }
-
-    //copy targets right creature weapon
-    if (GetIsObjectValid(oWeapCRPC)) //if we still have a creature weapon
-    {
-        //remove and destroy the weapon we have
-        AssignCommand(oPC,ActionUnequipItem(oWeapCRPC));
-
-    }
-    if (GetIsObjectValid(oWeapCR)) //if the target has a weapon
-    {
-        oWeapCRPC = CreateItemOnObject("pnp_shft_cweap", oPC); //create a shifter blank creature weapon
-        CopyAllItemProperties(oWeapCRPC,oWeapCR); //copy all target props over
-        SetIdentified(oWeapCRPC,TRUE); //id so we dont get any funny stuff when equiping
-        DelayCommand(0.2,AssignCommand(oPC,ActionEquipItem(oWeapCRPC,INVENTORY_SLOT_CWEAPON_R))); //reequip the item to get item props to update properly
-    }
-
-    //copy targets left creature weapon
-    if (GetIsObjectValid(oWeapCLPC)) //if we still have a creature weapon
-    {
-        //remove and destroy the weapon we have
-        AssignCommand(oPC,ActionUnequipItem(oWeapCLPC));
-    }
-    if (GetIsObjectValid(oWeapCL)) //if the target has a weapon
-    {
-        oWeapCLPC = CreateItemOnObject("pnp_shft_cweap", oPC); //create a shifter blank creature weapon
-        CopyAllItemProperties(oWeapCLPC,oWeapCL); //copy all target props over
-        SetIdentified(oWeapCLPC,TRUE); //id so we dont get any funny stuff when equiping
-        DelayCommand(0.2,AssignCommand(oPC,ActionEquipItem(oWeapCLPC,INVENTORY_SLOT_CWEAPON_L))); //reequip the item to get item props to update properly
-    }
-    //copy targets special creature weapons
-    if (GetIsObjectValid(oWeapCBPC)) //if we still have a creature weapon
-    {
-        //remove and destroy the weapon we have
-        AssignCommand(oPC,ActionUnequipItem(oWeapCBPC));
-    }
-    if (GetIsObjectValid(oWeapCB)) //if the target has a weapon
-    {
-        oWeapCBPC = CreateItemOnObject("pnp_shft_cweap", oPC); //create a shifter blank creature weapon
-        CopyAllItemProperties(oWeapCBPC,oWeapCB); //copy all target props over
-        SetIdentified(oWeapCBPC,TRUE); //id so we dont get any funny stuff when equiping
-        DelayCommand(0.2,AssignCommand(oPC,ActionEquipItem(oWeapCBPC,INVENTORY_SLOT_CWEAPON_B))); //reequip the item to get item props to update properly
-    }
-
-    // Get the Targets str, dex, and con
-    int nTStr = GetAbilityScore(oTarget,ABILITY_STRENGTH);
-    int nTDex = GetAbilityScore(oTarget,ABILITY_DEXTERITY);
-    int nTCon = GetAbilityScore(oTarget,ABILITY_CONSTITUTION);
-
-    // Get the PCs str, dex, and con from the clone
-    int nPCStr = GetLocalInt(oHidePC, "PRC_trueSTR");
-    int nPCDex = GetLocalInt(oHidePC, "PRC_trueDEX");
-    int nPCCon = GetLocalInt(oHidePC, "PRC_trueCON");
-
-    // Get the deltas
-    int nStrDelta = nTStr - nPCStr;
-    int nDexDelta = nTDex - nPCDex;
-    int nConDelta = nTCon - nPCCon;
-
-    int iRemainingSTR;
-    int iRemainingCON;
-    int iRemainingDEX;
-
-    // Cap max to +12 til they can fix it and -10 for the low value
-    // get remaining bonus/penelty for later
-    if (nStrDelta > 12)
-    {
-        iRemainingSTR = nStrDelta - 12;
-        nStrDelta = 12;
-    }
-    if (nStrDelta < -10)
-    {
-        iRemainingSTR = nStrDelta + 10;
-        nStrDelta = -10;
-    }
-    if (nDexDelta > 12)
-    {
-        iRemainingDEX = nDexDelta - 12;
-        nDexDelta = 12;
-    }
-    if (nDexDelta < -10)
-    {
-        iRemainingDEX = nDexDelta + 10;
-        nDexDelta = -10;
-    }
-    if (nConDelta > 12)
-    {
-        iRemainingCON = nConDelta - 12;
-        nConDelta = 12;
-    }
-    if (nConDelta < -10)
-    {
-        iRemainingCON = nConDelta + 10;
-        nConDelta = -10;
-    }
-
-    // Big problem with < 0 to abilities, if they have immunity to ability drain
-    // the - to the ability wont do anything
-
-    // Apply these boni to the creature hide
-    if (nStrDelta > 0)
-        AddItemProperty(DURATION_TYPE_PERMANENT,ItemPropertyAbilityBonus(IP_CONST_ABILITY_STR,nStrDelta),oHidePC);
-    else
-        AddItemProperty(DURATION_TYPE_PERMANENT,ItemPropertyDecreaseAbility(IP_CONST_ABILITY_STR,nStrDelta*-1),oHidePC);
-    if (nDexDelta > 0)
-        AddItemProperty(DURATION_TYPE_PERMANENT,ItemPropertyAbilityBonus(IP_CONST_ABILITY_DEX,nDexDelta),oHidePC);
-    else
-        AddItemProperty(DURATION_TYPE_PERMANENT,ItemPropertyDecreaseAbility(IP_CONST_ABILITY_DEX,nDexDelta*-1),oHidePC);
-    if (nConDelta > 0)
-        AddItemProperty(DURATION_TYPE_PERMANENT,ItemPropertyAbilityBonus(IP_CONST_ABILITY_CON,nConDelta),oHidePC);
-    else
-        AddItemProperty(DURATION_TYPE_PERMANENT,ItemPropertyDecreaseAbility(IP_CONST_ABILITY_CON,nConDelta*-1),oHidePC);
-
-    //add extra str bonuses to pc as attack bonues and damage bonus
-    int iExtSTRBon;
-    effect eAttackIncrease;
-    effect eDamageIncrease;
-    if (iRemainingSTR != 0)
-    {
-        int iDamageType = DAMAGE_TYPE_BLUDGEONING;
-        iExtSTRBon = FloatToInt(iRemainingSTR/2.0);
-
-        if (GetIsObjectValid(oWeapCR))
-        {
-            int iCR = GetBaseItemType(oWeapCR);
-            if ((iCR == BASE_ITEM_CSLASHWEAPON) || (iCR == BASE_ITEM_CSLSHPRCWEAP))
-                iDamageType = DAMAGE_TYPE_SLASHING;
-            else if (iCR == BASE_ITEM_CPIERCWEAPON)
-                iDamageType = DAMAGE_TYPE_PIERCING;
-        }
-        else if (GetIsObjectValid(oWeapCL))
-        {
-            int iCL = GetBaseItemType(oWeapCL);
-            if ((iCL == BASE_ITEM_CSLASHWEAPON) || (iCL == BASE_ITEM_CSLSHPRCWEAP))
-                iDamageType = DAMAGE_TYPE_SLASHING;
-            else if (iCL == BASE_ITEM_CPIERCWEAPON)
-                iDamageType = DAMAGE_TYPE_PIERCING;
-        }
-        else if (GetIsObjectValid(oWeapCB))
-        {
-            int iCB = GetBaseItemType(oWeapCB);
-            if ((iCB == BASE_ITEM_CSLASHWEAPON) || (iCB == BASE_ITEM_CSLSHPRCWEAP))
-                iDamageType = DAMAGE_TYPE_SLASHING;
-            else if (iCB == BASE_ITEM_CPIERCWEAPON)
-                iDamageType = DAMAGE_TYPE_PIERCING;
-        }
-
-        int iDamageB;
-        switch (iExtSTRBon)
-        {
-        case 0:
-            iDamageB = 0;
-            break;
-        case 1:
-        case -1:
-            iDamageB = DAMAGE_BONUS_1;
-            break;
-        case 2:
-        case -2:
-            iDamageB = DAMAGE_BONUS_2;
-            break;
-        case 3:
-        case -3:
-            iDamageB = DAMAGE_BONUS_3;
-            break;
-        case 4:
-        case -4:
-            iDamageB = DAMAGE_BONUS_4;
-            break;
-        case 5:
-        case -5:
-            iDamageB = DAMAGE_BONUS_5;
-            break;
-        case 6:
-        case -6:
-            iDamageB = DAMAGE_BONUS_6;
-            break;
-        case 7:
-        case -7:
-            iDamageB = DAMAGE_BONUS_7;
-            break;
-        case 8:
-        case -8:
-            iDamageB = DAMAGE_BONUS_8;
-            break;
-        case 9:
-        case -9:
-            iDamageB = DAMAGE_BONUS_9;
-            break;
-        case 10:
-        case -10:
-            iDamageB = DAMAGE_BONUS_10;
-            break;
-        case 11:
-        case -11:
-            iDamageB = DAMAGE_BONUS_11;
-            break;
-        case 12:
-        case -12:
-            iDamageB = DAMAGE_BONUS_12;
-            break;
-        case 13:
-        case -13:
-            iDamageB = DAMAGE_BONUS_13;
-            break;
-        case 14:
-        case -14:
-            iDamageB = DAMAGE_BONUS_14;
-            break;
-        case 15:
-        case -15:
-            iDamageB = DAMAGE_BONUS_15;
-            break;
-        case 16:
-        case -16:
-            iDamageB = DAMAGE_BONUS_16;
-            break;
-        case 17:
-        case -17:
-            iDamageB = DAMAGE_BONUS_17;
-            break;
-        case 18:
-        case -18:
-            iDamageB = DAMAGE_BONUS_18;
-            break;
-        case 19:
-        case -19:
-            iDamageB = DAMAGE_BONUS_19;
-            break;
-        default:
-            iDamageB = DAMAGE_BONUS_20;
-            break;
-        }
-
-        if (iRemainingSTR > 0)
-        {
-            eAttackIncrease = EffectAttackIncrease(iDamageB, ATTACK_BONUS_MISC);
-            eDamageIncrease = EffectDamageIncrease(iDamageB, iDamageType);
-        }
-        else if (iRemainingSTR < 0)
-        {
-            eAttackIncrease = EffectAttackDecrease(iDamageB, ATTACK_BONUS_MISC);
-            eDamageIncrease = EffectDamageDecrease(iDamageB, iDamageType);
-        }
-
-        ApplyEffectToObject(DURATION_TYPE_PERMANENT,SupernaturalEffect(eAttackIncrease),oPC);
-        ApplyEffectToObject(DURATION_TYPE_PERMANENT,SupernaturalEffect(eDamageIncrease),oPC);
-    }
-
-    //add extra con bonus as temp HP
-    if (iRemainingCON > 0)
-    {
-        int iExtCONBon = FloatToInt(iRemainingCON/2.0);
-        effect eTemporaryHitpoints = EffectTemporaryHitpoints(iExtCONBon * GetCharacterLevel(oPC));
-        ApplyEffectToObject(DURATION_TYPE_PERMANENT,SupernaturalEffect(eTemporaryHitpoints),oPC);
-    }
-
-    // Apply the natural AC bonus to the hide
-    // First get the AC from the target
-    int nTAC = GetAC(oTarget);
-    nTAC -= GetAbilityModifier(ABILITY_DEXTERITY, oTarget);
-    // All creatures have 10 base AC
-    nTAC -= 10;
-    int i;
-    for (i=0; i < NUM_INVENTORY_SLOTS; i++)
-    {
-        nTAC -= GetItemACValue(GetItemInSlot(i,oTarget));
-    }
-
-    if (nTAC > 0)
-    {
-        effect eAC = EffectACIncrease(nTAC,AC_NATURAL_BONUS);
-        ApplyEffectToObject(DURATION_TYPE_PERMANENT,SupernaturalEffect(eAC),oPC);
-    }
-
-    //add extra dex bonus as dodge ac
-    if (iRemainingDEX != 0)
-    {
-        int iExtDEXBon = FloatToInt(iRemainingDEX/2.0);
-        effect eACIncrease;
-        if (iRemainingDEX > 0)
-        {
-            object oPCArmour = GetItemInSlot(INVENTORY_SLOT_CHEST, oPC);
-            if (GetIsObjectValid(oPCArmour))
-            {
-                int iACArmour = GetItemACValue(oPCArmour);
-                int iMaxDexBon;
-                int iCurentDexBon;
-                iCurentDexBon = FloatToInt(((nPCDex + nStrDelta)-10.0)/2.0);
-                switch (iACArmour)
-                {
-                case 8:
-                case 7:
-                case 6:
-                    iMaxDexBon = 1;
-                    break;
-                case 5:
-                    iMaxDexBon = 2;
-                    break;
-                case 4:
-                case 3:
-                    iMaxDexBon = 4;
-                    break;
-                case 2:
-                    iMaxDexBon = 6;
-                    break;
-                case 1:
-                    iMaxDexBon = 8;
-                    break;
-                default:
-                    iMaxDexBon = 100;
-                    break;
-                }
-                if (iCurentDexBon > iMaxDexBon)
-                {
-                    iExtDEXBon = 0;
-                }
-                else
-                {
-                    if ((iExtDEXBon+iCurentDexBon) > iMaxDexBon)
-                    {
-                        iExtDEXBon = iMaxDexBon - iCurentDexBon;
-                    }
-                }
-            }
-            eACIncrease = EffectACIncrease(iExtDEXBon);
-        }
-        else if (iRemainingDEX < 0)
-        {
-            eACIncrease = EffectACDecrease(iExtDEXBon * -1);
-        }
-        ApplyEffectToObject(DURATION_TYPE_PERMANENT,SupernaturalEffect(eACIncrease),oPC);
-    }
-
-    // Apply any feats the target has to the hide as a bonus feat
-    for (i = 0; i< 500; i++)
-    {
-        if (GetHasFeat(i,oTarget))
-        {
-            int nIP =  GetIPFeatFromFeat(i);
-            if(nIP != -1)
-            {
-                itemproperty iProp = PRCItemPropertyBonusFeat(nIP);
-                //AddItemProperty(DURATION_TYPE_PERMANENT,iProp,oHidePC);
-                IPSafeAddItemProperty(oHidePC, iProp, 0.0f, X2_IP_ADDPROP_POLICY_KEEP_EXISTING, FALSE, FALSE);
-            }
-
-        }
-    }
-
-    // If they dont have the natural spell feat they can only cast spells in certain shapes
-    if (!GetHasFeat(FEAT_PRESTIGE_SHIFTER_NATURALSPELL,oPC))
-    {
-        if (!GetCanFormCast(oTarget))
-        {
-            // remove the ability from the PC to cast
-            effect eNoCast = EffectSpellFailure();
-            ApplyEffectToObject(DURATION_TYPE_PERMANENT,SupernaturalEffect(eNoCast),oPC);
-        }
-    }
-
-    // If the creature is "harmless" give it a perm invis for stealth
-    if(GetIsCreatureHarmless(oTarget))
-    {
-        effect eInvis = EffectInvisibility(INVISIBILITY_TYPE_NORMAL);
-        ApplyEffectToObject(DURATION_TYPE_PERMANENT,SupernaturalEffect(eInvis),oPC);
-    }
-
-
-    // Change the Appearance of the PC
-    ApplyEffectToObject(DURATION_TYPE_INSTANT, EffectVisualEffect(VFX_IMP_POLYMORPH), oPC);
-    //get the appearance of oTarget
-    int iAppearance = GetLocalInt(oTarget,"Appearance");
-    if (iAppearance>0)
-        SetCreatureAppearanceType(oPC,iAppearance);
-    else
-        SetCreatureAppearanceType(oPC,GetAppearanceType(oTarget));
-
-    // For spells to make sure they now treat you like the new race
-    SetLocalInt(oPC,"RACIAL_TYPE",MyPRCGetRacialType(oTarget)+1);
-
-    // PnP rules say the shifter would heal as if they rested
-    effect eHeal = EffectHeal(GetHitDice(oPC)*d4());
-    ApplyEffectToObject(DURATION_TYPE_INSTANT,eHeal,oPC);
-
-    //epic shift
-    if (GetLocalInt(oPC,"EpicShift"))
-    {
-        // Create some sort of usable item to represent monster spells
-        object oEpicPowersItem = GetItemPossessedBy(oPC,"EpicShifterPowers");
-        if (!GetIsObjectValid(oEpicPowersItem))
-            oEpicPowersItem = CreateItemOnObject("epicshifterpower",oPC);
-        SetItemSpellPowers(oEpicPowersItem,oTarget);
-    }
-
-    // Set a flag on the PC to tell us that they are shifted
-    SetLocalInt(oHidePC,"nPCShifted",TRUE);
-    //clear epic shift var
-    SetLocalInt(oPC,"EpicShift",0);
-
-    //remove oTarget if it is from the template
-    int iDeleteMe = GetLocalInt(oTarget,"pnp_shifter_deleteme");
-    if (iDeleteMe==1)
-    {
-        // Remove the temporary creature
-        AssignCommand(oTarget,SetIsDestroyable(TRUE,FALSE,FALSE));
-        SetPlotFlag(oTarget,FALSE);
-        SetImmortal(oTarget,FALSE);
-        DestroyObject(oTarget);
-    }
-
-    // Reset any PRC feats that might have been lost from the shift
-    DelayCommand(1.0, EvalPRCFeats(oPC));
-
-    DelayCommand(1.5, ClearShifterItems(oPC));
-
-    DelayCommand(3.0, DeleteLocalInt(oPC, "shifting"));
-    SendMessageToPC(oPC, "Finished shifting");
-}
-
-
-
-
-// Transforms the oPC back to thier true form if they are shifted
-void SetShiftTrueForm(object oPC)
-{
-    // Remove all the creature equipment and destroy it
-    object oHide = GetItemInSlot(INVENTORY_SLOT_CARMOUR,oPC);
-    object oWeapCR = GetItemInSlot(INVENTORY_SLOT_CWEAPON_R,oPC);
-    object oWeapCL = GetItemInSlot(INVENTORY_SLOT_CWEAPON_L,oPC);
-    object oWeapCB = GetItemInSlot(INVENTORY_SLOT_CWEAPON_B,oPC);
-
-    // Do not move or destroy the objects, it will crash the game
-    if (GetIsObjectValid(oHide))
-    {
-        // Remove all the abilities of the object
-        ScrubPCSkin(oPC,oHide);
-        DeletePRCLocalInts(oHide);
-
-//        RemoveAllItemProperties(oHide);
-    // Debug
-        //CopyItem(oHide,oPC,TRUE);
-    }
-
-    itemproperty ipUnarmed = ItemPropertyMonsterDamage(2);
-
-    if (GetIsObjectValid(oWeapCR))
-    {
-        //remove creature weapons
-        AssignCommand(oPC,ActionUnequipItem(oWeapCR));
-
-        // Remove all abilities of the object
-//        RemoveAllItemProperties(oWeapCR);
-//          AddItemProperty(DURATION_TYPE_PERMANENT, ipUnarmed, oWeapCR);
-    }
-    if (GetIsObjectValid(oWeapCL))
-    {
-        //remove creature weapons
-        AssignCommand(oPC,ActionUnequipItem(oWeapCL));
-
-        // Remove all the abilities of the object
-//        RemoveAllItemProperties(oWeapCL);
-    }
-    if (GetIsObjectValid(oWeapCB))
-    {
-        //remove creature weapons
-        AssignCommand(oPC,ActionUnequipItem(oWeapCB));
-
-        // Remove all abilities of the object
-//        RemoveAllItemProperties(oWeapCB);
-    }
-    // if the did an epic form remove the special powers
-    object oEpicPowersItem = GetItemPossessedBy(oPC,"EpicShifterPowers");
-    if (GetIsObjectValid(oEpicPowersItem))
-    {
-        RemoveAllItemProperties(oEpicPowersItem);
-        RemoveAuraEffect( oPC );
-    }
-
-
-    // Spell failure was done through an effect
-    // AC was done via an effect
-    // invis was done via an effect
-    // we will look for and remove them
-    effect eEff = GetFirstEffect(oPC);
-    while (GetIsEffectValid(eEff))
-    {
-        int eDurType = GetEffectDurationType(eEff);
-        int eSubType = GetEffectSubType(eEff);
-        int eType = GetEffectType(eEff);
-        int eID = GetEffectSpellId(eEff);
-        object eCreator = GetEffectCreator(eEff);
-        //all three effects are permanent and supernatural and are created by spell id -1 and by the PC.
-        if ((eDurType == DURATION_TYPE_PERMANENT) && (eSubType == SUBTYPE_SUPERNATURAL) && (eID == -1) && (eCreator == oPC))
-        {
-            switch (eType)
-            {
-                case EFFECT_TYPE_SPELL_FAILURE:
-                case EFFECT_TYPE_INVISIBILITY:
-                case EFFECT_TYPE_AC_INCREASE:
-                case EFFECT_TYPE_AC_DECREASE:
-                case EFFECT_TYPE_ATTACK_INCREASE:
-                case EFFECT_TYPE_ATTACK_DECREASE:
-                case EFFECT_TYPE_DAMAGE_INCREASE:
-                case EFFECT_TYPE_DAMAGE_DECREASE:
-                case EFFECT_TYPE_TEMPORARY_HITPOINTS:
-                    RemoveEffect(oPC,eEff);
-                    break;
-            }
-        }
-        if (eType == EFFECT_TYPE_POLYMORPH)
-        {
-            RemoveEffect(oPC,eEff);
-        }
-        eEff = GetNextEffect(oPC);
-    }
-
-    // Change the PC back to TRUE form
-    SetCreatureAppearanceType(oPC,GetTrueForm(oPC));
-    // Set race back to unused
-    SetLocalInt(oPC,"RACIAL_TYPE",0);
-
-    // Reset any PRC feats that might have been lost from the shift
-//  EvalPRCFeats(oPC);
-    SetLocalInt(oHide,"nPCShifted",FALSE);
-
-    //object oCont = GetItemPossessedBy(oPC, "pnp_shft_sprkbox");
-    //if (GetIsObjectValid(oCont))
-    //{
-    //  object oSpark = GetItemPossessedBy(oPC, "soul_prism");
-    //  DelayCommand(0.3, AssignCommand(oPC, ActionTakeItem(oSpark, oCont)));
-    //  DestroyObject(oCont, 0.7);
-    //}
-
-    DelayCommand(1.0, ClearShifterItems(oPC));
-}
-
-
-
-
-void ClearShifterItems(object oPC)
-{
-    object oCheck = GetFirstItemInInventory(oPC);
-    while (GetIsObjectValid(oCheck))
-    {
-        if (GetTag(oCheck) == "pnp_shft_cweap")
-        {
-            if ((oCheck != GetItemInSlot(INVENTORY_SLOT_CWEAPON_B, oPC)) &&
-                 (oCheck != GetItemInSlot(INVENTORY_SLOT_CWEAPON_L, oPC)) &&
-                (oCheck != GetItemInSlot(INVENTORY_SLOT_CWEAPON_R, oPC)))
-                AssignCommand(oPC, DestroyObject(oCheck));
-        }
-        oCheck = GetNextItemInInventory(oPC);
-    }
-
-
-}
-
-
-
-
-void QuickShift(object oPC, int iQuickSlot)
-{
-    object oMimicForms = GetItemPossessedBy( oPC, "soul_prism" );
-    int iMaxIndex = GetLocalInt(oMimicForms, "num_creatures");
-    int iIndex = GetLocalArrayInt(oMimicForms, "QuickSlotIndex", iQuickSlot);
-    int iEpic = GetLocalArrayInt(oMimicForms, "QuickSlotEpic", iQuickSlot);
-    if(!(iIndex>iMaxIndex))
-        ShiftFromKnownArray(iIndex, iEpic, oPC);
-}
-
-
-
-
-void SetQuickSlot(object oPC, int iIndex, int iQuickSlot, int iEpic)
-{
-    object oMimicForms = GetItemPossessedBy( oPC, "soul_prism" );
-    SetLocalArrayInt(oMimicForms,"QuickSlotIndex",iQuickSlot,iIndex);
-    SetLocalArrayInt(oMimicForms,"QuickSlotEpic",iQuickSlot,iEpic);
-}
-
-
-
-
-// Determine if the oCreature has the ability to cast spells
-// Return values: TRUE or FALSE
-int GetCanFormCast(object oCreature)
-{
-    int nTRacialType = MyPRCGetRacialType(oCreature);
-
-    // Need to have hands, and the ability to speak
-
-    switch (nTRacialType)
-    {
-    case RACIAL_TYPE_ABERRATION:
-    case RACIAL_TYPE_MAGICAL_BEAST:
-    case RACIAL_TYPE_VERMIN:
-    case RACIAL_TYPE_BEAST:
-    case RACIAL_TYPE_ANIMAL:
-    case RACIAL_TYPE_OOZE:
-//    case RACIAL_TYPE_PLANT:
-        // These forms can't cast spells
-        return FALSE;
-        break;
-    case RACIAL_TYPE_SHAPECHANGER:
-    case RACIAL_TYPE_ELEMENTAL:
-    case RACIAL_TYPE_DRAGON:
-    case RACIAL_TYPE_OUTSIDER:
-    case RACIAL_TYPE_UNDEAD:
-    case RACIAL_TYPE_CONSTRUCT:
-    case RACIAL_TYPE_GIANT:
-    case RACIAL_TYPE_HUMANOID_MONSTROUS:
-    case RACIAL_TYPE_DWARF:
-    case RACIAL_TYPE_ELF:
-    case RACIAL_TYPE_GNOME:
-    case RACIAL_TYPE_HALFELF:
-    case RACIAL_TYPE_HALFLING:
-    case RACIAL_TYPE_HALFORC:
-    case RACIAL_TYPE_HUMAN:
-    case RACIAL_TYPE_HUMANOID_ORC:
-    case RACIAL_TYPE_HUMANOID_REPTILIAN:
-    case RACIAL_TYPE_FEY:
-        break;
-    }
-
-    return TRUE;
-}
-
-
-
-
-// Determines if the oCreature is harmless enough to have
-// special effects applied to the shifter
-// Return values: TRUE or FALSE
-int GetIsCreatureHarmless(object oCreature)
-{
-    string sCreatureName = GetName(oCreature);
-
-    // looking for small < 1 CR creatures that nobody looks at twice
-
-    if ((sCreatureName == "Chicken") ||
-        (sCreatureName == "Falcon") ||
-        (sCreatureName == "Hawk") ||
-        (sCreatureName == "Raven") ||
-        (sCreatureName == "Bat") ||
-        (sCreatureName == "Dire Rat") ||
-        (sCreatureName == "Will-O'-Wisp") ||
-        (sCreatureName == "Rat") ||
-        (GetChallengeRating(oCreature) < 1.0 ))
-        return TRUE;
-    else
-        return FALSE;
-}
-
-
-
-/*
-// Transforms the oPC back to thier true form if they are shifted
-void SetShiftTrueForm(object oPC)
-{
-    // Remove all the creature equipment and destroy it
-    object oHide = GetItemInSlot(INVENTORY_SLOT_CARMOUR,oPC);
-    object oWeapCR = GetItemInSlot(INVENTORY_SLOT_CWEAPON_R,oPC);
-    object oWeapCL = GetItemInSlot(INVENTORY_SLOT_CWEAPON_L,oPC);
-    object oWeapCB = GetItemInSlot(INVENTORY_SLOT_CWEAPON_B,oPC);
-
-    // Do not move or destroy the objects, it will crash the game
-    if (GetIsObjectValid(oHide))
-    {
-        // Remove all the abilities of the object
-        ScrubPCSkin(oPC,oHide);
-        DeletePRCLocalInts(oHide);
-
-//        RemoveAllItemProperties(oHide);
-    // Debug
-        //CopyItem(oHide,oPC,TRUE);
-    }
-
-    itemproperty ipUnarmed = ItemPropertyMonsterDamage(2);
-
-    if (GetIsObjectValid(oWeapCR))
-    {
-        //remove creature weapons
-        AssignCommand(oPC,ActionUnequipItem(oWeapCR));
-
-        // Remove all abilities of the object
-//        RemoveAllItemProperties(oWeapCR);
-//          AddItemProperty(DURATION_TYPE_PERMANENT, ipUnarmed, oWeapCR);
-    }
-    if (GetIsObjectValid(oWeapCL))
-    {
-        //remove creature weapons
-        AssignCommand(oPC,ActionUnequipItem(oWeapCL));
-
-        // Remove all the abilities of the object
-//        RemoveAllItemProperties(oWeapCL);
-    }
-    if (GetIsObjectValid(oWeapCB))
-    {
-        //remove creature weapons
-        AssignCommand(oPC,ActionUnequipItem(oWeapCB));
-
-        // Remove all abilities of the object
-//        RemoveAllItemProperties(oWeapCB);
-    }
-    // if the did an epic form remove the special powers
-    object oEpicPowersItem = GetItemPossessedBy(oPC,"EpicShifterPowers");
-    if (GetIsObjectValid(oEpicPowersItem))
-    {
-        RemoveAllItemProperties(oEpicPowersItem);
-        RemoveAuraEffect( oPC );
-    }
-
-
-    // Spell failure was done through an effect
-    // AC was done via an effect
-    // invis was done via an effect
-    // we will look for and remove them
-    effect eEff = GetFirstEffect(oPC);
-    while (GetIsEffectValid(eEff))
-    {
-        int eDurType = GetEffectDurationType(eEff);
-        int eSubType = GetEffectSubType(eEff);
-        int eType = GetEffectType(eEff);
-        int eID = GetEffectSpellId(eEff);
-        object eCreator = GetEffectCreator(eEff);
-        //all three effects are permanent and supernatural and are created by spell id -1 and by the PC.
-        if ((eDurType == DURATION_TYPE_PERMANENT) && (eSubType == SUBTYPE_SUPERNATURAL) && (eID == -1) && (eCreator == oPC))
-        {
-            switch (eType)
-            {
-                case EFFECT_TYPE_SPELL_FAILURE:
-                case EFFECT_TYPE_INVISIBILITY:
-                case EFFECT_TYPE_AC_INCREASE:
-                case EFFECT_TYPE_AC_DECREASE:
-                case EFFECT_TYPE_ATTACK_INCREASE:
-                case EFFECT_TYPE_ATTACK_DECREASE:
-                case EFFECT_TYPE_DAMAGE_INCREASE:
-                case EFFECT_TYPE_DAMAGE_DECREASE:
-                case EFFECT_TYPE_TEMPORARY_HITPOINTS:
-                    RemoveEffect(oPC,eEff);
-                    break;
-            }
-        }
-        if (eType == EFFECT_TYPE_POLYMORPH)
-        {
-            RemoveEffect(oPC,eEff);
-        }
-        eEff = GetNextEffect(oPC);
-    }
-
-    // Change the PC back to TRUE form
-    SetCreatureAppearanceType(oPC,GetTrueForm(oPC));
-    // Set race back to unused
-    SetLocalInt(oPC,"RACIAL_TYPE",0);
-
-    // Reset any PRC feats that might have been lost from the shift
-//  EvalPRCFeats(oPC);
-    SetLocalInt(oHide,"nPCShifted",FALSE);
-
-    //object oCont = GetItemPossessedBy(oPC, "pnp_shft_sprkbox");
-    //if (GetIsObjectValid(oCont))
-    //{
-    //  object oSpark = GetItemPossessedBy(oPC, "soul_prism");
-    //  DelayCommand(0.3, AssignCommand(oPC, ActionTakeItem(oSpark, oCont)));
-    //  DestroyObject(oCont, 0.7);
-    //}
-
-    DelayCommand(1.0, ClearShifterItems(oPC));
-}
-*/
-
-
-
-void CopyAllItemProperties(object oDestination,object oTarget)
-{
-    itemproperty iProp = GetFirstItemProperty(oTarget);
-
-    while (GetIsItemPropertyValid(iProp))
-    {
-        AddItemProperty(GetItemPropertyDurationType(iProp), iProp, oDestination);
-        iProp = GetNextItemProperty(oTarget);
-    }
-}
-
-
-
-
-
-int GetAllItemsAbilityModifier(object oTarget, int nAbility)
-{
-    // Go through all the equipment and add it all up
-    int nRetValue = 0;
-    object oItem;
-    itemproperty iProp;
-    int i;
-
-    for (i=0; i < NUM_INVENTORY_SLOTS; i++)
-    {
-        oItem = GetItemInSlot(i,oTarget);
-
-        if (GetIsObjectValid(oItem))
-        {
-            iProp = GetFirstItemProperty(oItem);
-            while (GetIsItemPropertyValid(iProp))
-            {
-                //SendMessageToPC(oTarget,"In while loop for " + GetName(oItem));
-                if (ITEM_PROPERTY_ABILITY_BONUS == GetItemPropertyType(iProp))
-                {
-                    if (nAbility == GetItemPropertySubType(iProp))
-                    {
-                        nRetValue += GetItemPropertyCostTableValue(iProp);
-                    }
-                }
-                iProp = GetNextItemProperty(oItem);
-            }
-        }
-
-    }
-    return nRetValue;
-}
-
-void RemoveAllItemProperties(object oItem)
-{
-    itemproperty iProp = GetFirstItemProperty(oItem);
-
-    while (GetIsItemPropertyValid(iProp))
-    {
-
-//        SendMessageToPC(GetItemPossessor(oItem),"item prop type-" + IntToString(GetItemPropertyType(iProp)));
-
-        RemoveItemProperty(oItem,iProp);
-        iProp = GetNextItemProperty(oItem);
-
-    }
-    // for a skin and prcs to get their feats back
-    DeletePRCLocalInts(oItem);
-}
-
-// Gets an IP_CONST_FEAT_* from FEAT_*
-// -1 is an invalid IP_CONST_FEAT
-int GetIPFeatFromFeat(int nFeat)
-{
-    switch (nFeat)
-    {
-    case FEAT_ALERTNESS:
-        return IP_CONST_FEAT_ALERTNESS;
-    case FEAT_AMBIDEXTERITY:
-        return IP_CONST_FEAT_AMBIDEXTROUS;
-    case FEAT_ARMOR_PROFICIENCY_HEAVY:
-        return IP_CONST_FEAT_ARMOR_PROF_HEAVY;
-    case FEAT_ARMOR_PROFICIENCY_LIGHT:
-        return IP_CONST_FEAT_ARMOR_PROF_LIGHT;
-    case FEAT_ARMOR_PROFICIENCY_MEDIUM:
-        return IP_CONST_FEAT_ARMOR_PROF_MEDIUM;
-    case FEAT_CLEAVE:
-        return IP_CONST_FEAT_CLEAVE;
-    case FEAT_COMBAT_CASTING:
-        return IP_CONST_FEAT_COMBAT_CASTING;
-    case FEAT_DODGE:
-        return IP_CONST_FEAT_DODGE;
-    case FEAT_EXTRA_TURNING:
-        return IP_CONST_FEAT_EXTRA_TURNING;
-    case FEAT_IMPROVED_CRITICAL_UNARMED_STRIKE:
-        return IP_CONST_FEAT_IMPCRITUNARM;
-    case FEAT_IMPROVED_KNOCKDOWN:
-    case FEAT_KNOCKDOWN:
-        return IP_CONST_FEAT_KNOCKDOWN;
-    case FEAT_POINT_BLANK_SHOT:
-        return IP_CONST_FEAT_POINTBLANK;
-    case FEAT_POWER_ATTACK:
-    case FEAT_IMPROVED_POWER_ATTACK:
-        return IP_CONST_FEAT_POWERATTACK;
-    case FEAT_SPELL_FOCUS_ABJURATION:
-    case FEAT_EPIC_SPELL_FOCUS_ABJURATION:
-    case FEAT_GREATER_SPELL_FOCUS_ABJURATION:
-        return IP_CONST_FEAT_SPELLFOCUSABJ;
-    case FEAT_SPELL_FOCUS_CONJURATION:
-    case FEAT_EPIC_SPELL_FOCUS_CONJURATION:
-    case FEAT_GREATER_SPELL_FOCUS_CONJURATION:
-        return IP_CONST_FEAT_SPELLFOCUSCON;
-    case FEAT_SPELL_FOCUS_DIVINATION:
-    case FEAT_EPIC_SPELL_FOCUS_DIVINATION:
-    case FEAT_GREATER_SPELL_FOCUS_DIVINIATION:
-        return IP_CONST_FEAT_SPELLFOCUSDIV;
-    case FEAT_SPELL_FOCUS_ENCHANTMENT:
-    case FEAT_EPIC_SPELL_FOCUS_ENCHANTMENT:
-    case FEAT_GREATER_SPELL_FOCUS_ENCHANTMENT:
-        return IP_CONST_FEAT_SPELLFOCUSENC;
-    case FEAT_SPELL_FOCUS_EVOCATION:
-    case FEAT_EPIC_SPELL_FOCUS_EVOCATION:
-    case FEAT_GREATER_SPELL_FOCUS_EVOCATION:
-        return IP_CONST_FEAT_SPELLFOCUSEVO;
-    case FEAT_SPELL_FOCUS_ILLUSION:
-    case FEAT_EPIC_SPELL_FOCUS_ILLUSION:
-    case FEAT_GREATER_SPELL_FOCUS_ILLUSION:
-        return IP_CONST_FEAT_SPELLFOCUSILL;
-    case FEAT_SPELL_FOCUS_NECROMANCY:
-    case FEAT_EPIC_SPELL_FOCUS_NECROMANCY:
-    case FEAT_GREATER_SPELL_FOCUS_NECROMANCY:
-        return IP_CONST_FEAT_SPELLFOCUSNEC;
-    case FEAT_SPELL_PENETRATION:
-    case FEAT_EPIC_SPELL_PENETRATION:
-    case FEAT_GREATER_SPELL_PENETRATION:
-        return IP_CONST_FEAT_SPELLPENETRATION;
-    case FEAT_TWO_WEAPON_FIGHTING:
-    case FEAT_IMPROVED_TWO_WEAPON_FIGHTING:
-        return IP_CONST_FEAT_TWO_WEAPON_FIGHTING;
-    case FEAT_WEAPON_FINESSE:
-        return IP_CONST_FEAT_WEAPFINESSE;
-    case FEAT_WEAPON_PROFICIENCY_EXOTIC:
-        return IP_CONST_FEAT_WEAPON_PROF_EXOTIC;
-    case FEAT_WEAPON_PROFICIENCY_MARTIAL:
-        return IP_CONST_FEAT_WEAPON_PROF_MARTIAL;
-    case FEAT_WEAPON_PROFICIENCY_SIMPLE:
-        return IP_CONST_FEAT_WEAPON_PROF_SIMPLE;
-    case FEAT_IMPROVED_UNARMED_STRIKE:
-        return IP_CONST_FEAT_WEAPSPEUNARM;
-
-    // Some undefined ones
-    case FEAT_DISARM:
-        return 28;
-    case FEAT_HIDE_IN_PLAIN_SIGHT:
-        return 31;
-    case FEAT_MOBILITY:
-        return 27;
-    case FEAT_RAPID_SHOT:
-        return 30;
-    case FEAT_SHIELD_PROFICIENCY:
-        return 35;
-    case FEAT_SNEAK_ATTACK:
-        return 32;
-    case FEAT_USE_POISON:
-        return 36;
-    case FEAT_WHIRLWIND_ATTACK:
-        return 29;
-    case FEAT_WEAPON_PROFICIENCY_CREATURE:
-        return 38;
-        // whip disarm is 37
-    }
-    return (-1);
-}
-
-
-
-/*
-void RemoveAllItemProperties(object oItem)
-{
-    itemproperty iProp = GetFirstItemProperty(oItem);
-
-    while (GetIsItemPropertyValid(iProp))
-    {
-
-//        SendMessageToPC(GetItemPossessor(oItem),"item prop type-" + IntToString(GetItemPropertyType(iProp)));
-
-        RemoveItemProperty(oItem,iProp);
-        iProp = GetNextItemProperty(oItem);
-
-    }
-    // for a skin and prcs to get their feats back
-    DeletePRCLocalInts(oItem);
-}
-*/
-
-
-/*
-// Gets an IP_CONST_FEAT_* from FEAT_*
-// -1 is an invalid IP_CONST_FEAT
-int GetIPFeatFromFeat(int nFeat)
-{
-    switch (nFeat)
-    {
-    case FEAT_ALERTNESS:
-        return IP_CONST_FEAT_ALERTNESS;
-    case FEAT_AMBIDEXTERITY:
-        return IP_CONST_FEAT_AMBIDEXTROUS;
-    case FEAT_ARMOR_PROFICIENCY_HEAVY:
-        return IP_CONST_FEAT_ARMOR_PROF_HEAVY;
-    case FEAT_ARMOR_PROFICIENCY_LIGHT:
-        return IP_CONST_FEAT_ARMOR_PROF_LIGHT;
-    case FEAT_ARMOR_PROFICIENCY_MEDIUM:
-        return IP_CONST_FEAT_ARMOR_PROF_MEDIUM;
-    case FEAT_CLEAVE:
-        return IP_CONST_FEAT_CLEAVE;
-    case FEAT_COMBAT_CASTING:
-        return IP_CONST_FEAT_COMBAT_CASTING;
-    case FEAT_DODGE:
-        return IP_CONST_FEAT_DODGE;
-    case FEAT_EXTRA_TURNING:
-        return IP_CONST_FEAT_EXTRA_TURNING;
-    case FEAT_IMPROVED_CRITICAL_UNARMED_STRIKE:
-        return IP_CONST_FEAT_IMPCRITUNARM;
-    case FEAT_IMPROVED_KNOCKDOWN:
-    case FEAT_KNOCKDOWN:
-        return IP_CONST_FEAT_KNOCKDOWN;
-    case FEAT_POINT_BLANK_SHOT:
-        return IP_CONST_FEAT_POINTBLANK;
-    case FEAT_POWER_ATTACK:
-    case FEAT_IMPROVED_POWER_ATTACK:
-        return IP_CONST_FEAT_POWERATTACK;
-    case FEAT_SPELL_FOCUS_ABJURATION:
-    case FEAT_EPIC_SPELL_FOCUS_ABJURATION:
-    case FEAT_GREATER_SPELL_FOCUS_ABJURATION:
-        return IP_CONST_FEAT_SPELLFOCUSABJ;
-    case FEAT_SPELL_FOCUS_CONJURATION:
-    case FEAT_EPIC_SPELL_FOCUS_CONJURATION:
-    case FEAT_GREATER_SPELL_FOCUS_CONJURATION:
-        return IP_CONST_FEAT_SPELLFOCUSCON;
-    case FEAT_SPELL_FOCUS_DIVINATION:
-    case FEAT_EPIC_SPELL_FOCUS_DIVINATION:
-    case FEAT_GREATER_SPELL_FOCUS_DIVINIATION:
-        return IP_CONST_FEAT_SPELLFOCUSDIV;
-    case FEAT_SPELL_FOCUS_ENCHANTMENT:
-    case FEAT_EPIC_SPELL_FOCUS_ENCHANTMENT:
-    case FEAT_GREATER_SPELL_FOCUS_ENCHANTMENT:
-        return IP_CONST_FEAT_SPELLFOCUSENC;
-    case FEAT_SPELL_FOCUS_EVOCATION:
-    case FEAT_EPIC_SPELL_FOCUS_EVOCATION:
-    case FEAT_GREATER_SPELL_FOCUS_EVOCATION:
-        return IP_CONST_FEAT_SPELLFOCUSEVO;
-    case FEAT_SPELL_FOCUS_ILLUSION:
-    case FEAT_EPIC_SPELL_FOCUS_ILLUSION:
-    case FEAT_GREATER_SPELL_FOCUS_ILLUSION:
-        return IP_CONST_FEAT_SPELLFOCUSILL;
-    case FEAT_SPELL_FOCUS_NECROMANCY:
-    case FEAT_EPIC_SPELL_FOCUS_NECROMANCY:
-    case FEAT_GREATER_SPELL_FOCUS_NECROMANCY:
-        return IP_CONST_FEAT_SPELLFOCUSNEC;
-    case FEAT_SPELL_PENETRATION:
-    case FEAT_EPIC_SPELL_PENETRATION:
-    case FEAT_GREATER_SPELL_PENETRATION:
-        return IP_CONST_FEAT_SPELLPENETRATION;
-    case FEAT_TWO_WEAPON_FIGHTING:
-    case FEAT_IMPROVED_TWO_WEAPON_FIGHTING:
-        return IP_CONST_FEAT_TWO_WEAPON_FIGHTING;
-    case FEAT_WEAPON_FINESSE:
-        return IP_CONST_FEAT_WEAPFINESSE;
-    case FEAT_WEAPON_PROFICIENCY_EXOTIC:
-        return IP_CONST_FEAT_WEAPON_PROF_EXOTIC;
-    case FEAT_WEAPON_PROFICIENCY_MARTIAL:
-        return IP_CONST_FEAT_WEAPON_PROF_MARTIAL;
-    case FEAT_WEAPON_PROFICIENCY_SIMPLE:
-        return IP_CONST_FEAT_WEAPON_PROF_SIMPLE;
-    case FEAT_IMPROVED_UNARMED_STRIKE:
-        return IP_CONST_FEAT_WEAPSPEUNARM;
-
-    // Some undefined ones
-    case FEAT_DISARM:
-        return 28;
-    case FEAT_HIDE_IN_PLAIN_SIGHT:
-        return 31;
-    case FEAT_MOBILITY:
-        return 27;
-    case FEAT_RAPID_SHOT:
-        return 30;
-    case FEAT_SHIELD_PROFICIENCY:
-        return 35;
-    case FEAT_SNEAK_ATTACK:
-        return 32;
-    case FEAT_USE_POISON:
-        return 36;
-    case FEAT_WHIRLWIND_ATTACK:
-        return 29;
-    case FEAT_WEAPON_PROFICIENCY_CREATURE:
-        return 38;
-        // whip disarm is 37
-    }
-    return (-1);
-}
-*/
-
-
-
-// Determines if the target creature has a certain type of spell
-// and sets the powers onto the object item
-void SetItemSpellPowers(object oItem, object oCreature)
-{
-    itemproperty iProp;
-    int total_props = 0; //max of 8 properties on one item
-
-    //first, auras--only want to allow one aura power to transfer
-    if ( GetHasSpell(SPELLABILITY_AURA_BLINDING, oCreature) && (total_props <= 7) )
-    {
-        iProp = ItemPropertyCastSpell(750,IP_CONST_CASTSPELL_NUMUSES_UNLIMITED_USE);
-        AddItemProperty(DURATION_TYPE_PERMANENT,iProp,oItem);
-        total_props++;
-    }
-    if ( GetHasSpell(SPELLABILITY_AURA_COLD, oCreature) && (total_props <= 7) )
-    {
-        iProp = ItemPropertyCastSpell(751,IP_CONST_CASTSPELL_NUMUSES_UNLIMITED_USE);
-        AddItemProperty(DURATION_TYPE_PERMANENT,iProp,oItem);
-        total_props++;
-    }
-    if ( GetHasSpell(SPELLABILITY_AURA_ELECTRICITY, oCreature) && (total_props <= 7) )
-    {
-        iProp = ItemPropertyCastSpell(752,IP_CONST_CASTSPELL_NUMUSES_UNLIMITED_USE);
-        AddItemProperty(DURATION_TYPE_PERMANENT,iProp,oItem);
-        total_props++;
-    }
-    if ( GetHasSpell(SPELLABILITY_AURA_FEAR, oCreature) && (total_props <= 7) )
-    {
-        iProp = ItemPropertyCastSpell(753,IP_CONST_CASTSPELL_NUMUSES_UNLIMITED_USE);
-        AddItemProperty(DURATION_TYPE_PERMANENT,iProp,oItem);
-        total_props++;
-    }
-    if ( GetHasSpell(SPELLABILITY_AURA_FIRE, oCreature) && (total_props <= 7) )
-    {
-        iProp = ItemPropertyCastSpell(754,IP_CONST_CASTSPELL_NUMUSES_UNLIMITED_USE);
-        AddItemProperty(DURATION_TYPE_PERMANENT,iProp,oItem);
-        total_props++;
-    }
-    if ( GetHasSpell(SPELLABILITY_AURA_MENACE, oCreature) && (total_props <= 7) )
-    {
-        iProp = ItemPropertyCastSpell(755,IP_CONST_CASTSPELL_NUMUSES_UNLIMITED_USE);
-        AddItemProperty(DURATION_TYPE_PERMANENT,iProp,oItem);
-        total_props++;
-    }
-    if ( GetHasSpell(SPELLABILITY_AURA_PROTECTION, oCreature) && (total_props <= 7) )
-    {
-        iProp = ItemPropertyCastSpell(756,IP_CONST_CASTSPELL_NUMUSES_UNLIMITED_USE);
-        AddItemProperty(DURATION_TYPE_PERMANENT,iProp,oItem);
-        total_props++;
-    }
-    if ( GetHasSpell(SPELLABILITY_AURA_STUN, oCreature) && (total_props <= 7) )
-    {
-        iProp = ItemPropertyCastSpell(757,IP_CONST_CASTSPELL_NUMUSES_UNLIMITED_USE);
-        AddItemProperty(DURATION_TYPE_PERMANENT,iProp,oItem);
-        total_props++;
-    }
-    if ( GetHasSpell(SPELLABILITY_AURA_UNEARTHLY_VISAGE, oCreature) && (total_props <= 7) )
-    {
-        iProp = ItemPropertyCastSpell(758,IP_CONST_CASTSPELL_NUMUSES_UNLIMITED_USE);
-        AddItemProperty(DURATION_TYPE_PERMANENT,iProp,oItem);
-        total_props++;
-    }
-    if ( GetHasSpell(SPELLABILITY_AURA_UNNATURAL, oCreature) && (total_props <= 7) )
-    {
-        iProp = ItemPropertyCastSpell(759,IP_CONST_CASTSPELL_NUMUSES_UNLIMITED_USE);
-        AddItemProperty(DURATION_TYPE_PERMANENT,iProp,oItem);
-        total_props++;
-    }
-    //now, bolts
-    if ( GetHasSpell(SPELLABILITY_BOLT_ABILITY_DRAIN_CHARISMA, oCreature) && (total_props <= 7) )
-    {
-        iProp = ItemPropertyCastSpell(760,IP_CONST_CASTSPELL_NUMUSES_3_USES_PER_DAY);
-        AddItemProperty(DURATION_TYPE_PERMANENT,iProp,oItem);
-        total_props++;
-    }
-    if ( GetHasSpell(SPELLABILITY_BOLT_ABILITY_DRAIN_CONSTITUTION, oCreature) && (total_props <= 7) )
-    {
-        iProp = ItemPropertyCastSpell(761,IP_CONST_CASTSPELL_NUMUSES_3_USES_PER_DAY);
-        AddItemProperty(DURATION_TYPE_PERMANENT,iProp,oItem);
-        total_props++;
-    }
-    if ( GetHasSpell(SPELLABILITY_BOLT_ABILITY_DRAIN_DEXTERITY, oCreature) && (total_props <= 7) )
-    {
-        iProp = ItemPropertyCastSpell(762,IP_CONST_CASTSPELL_NUMUSES_3_USES_PER_DAY);
-        AddItemProperty(DURATION_TYPE_PERMANENT,iProp,oItem);
-        total_props++;
-    }
-    if ( GetHasSpell(SPELLABILITY_BOLT_ABILITY_DRAIN_INTELLIGENCE, oCreature) && (total_props <= 7) )
-    {
-        iProp = ItemPropertyCastSpell(763,IP_CONST_CASTSPELL_NUMUSES_3_USES_PER_DAY);
-        AddItemProperty(DURATION_TYPE_PERMANENT,iProp,oItem);
-        total_props++;
-    }
-    if ( GetHasSpell(SPELLABILITY_BOLT_ABILITY_DRAIN_STRENGTH, oCreature) && (total_props <= 7) )
-    {
-        iProp = ItemPropertyCastSpell(764,IP_CONST_CASTSPELL_NUMUSES_3_USES_PER_DAY);
-        AddItemProperty(DURATION_TYPE_PERMANENT,iProp,oItem);
-        total_props++;
-    }
-    if ( GetHasSpell(SPELLABILITY_BOLT_ABILITY_DRAIN_WISDOM, oCreature) && (total_props <= 7) )
-    {
-        iProp = ItemPropertyCastSpell(765,IP_CONST_CASTSPELL_NUMUSES_3_USES_PER_DAY);
-        AddItemProperty(DURATION_TYPE_PERMANENT,iProp,oItem);
-        total_props++;
-    }
-    if ( GetHasSpell(SPELLABILITY_BOLT_ACID, oCreature) && (total_props <= 7) )
-    {
-        iProp = ItemPropertyCastSpell(766,IP_CONST_CASTSPELL_NUMUSES_3_USES_PER_DAY);
-        AddItemProperty(DURATION_TYPE_PERMANENT,iProp,oItem);
-        total_props++;
-    }
-    if ( GetHasSpell(SPELLABILITY_BOLT_CHARM, oCreature) && (total_props <= 7) )
-    {
-        iProp = ItemPropertyCastSpell(767,IP_CONST_CASTSPELL_NUMUSES_3_USES_PER_DAY);
-        AddItemProperty(DURATION_TYPE_PERMANENT,iProp,oItem);
-        total_props++;
-    }
-    if ( GetHasSpell(SPELLABILITY_BOLT_COLD, oCreature) && (total_props <= 7) )
-    {
-        iProp = ItemPropertyCastSpell(768,IP_CONST_CASTSPELL_NUMUSES_3_USES_PER_DAY);
-        AddItemProperty(DURATION_TYPE_PERMANENT,iProp,oItem);
-        total_props++;
-    }
-    if ( GetHasSpell(SPELLABILITY_BOLT_CONFUSE, oCreature) && (total_props <= 7) )
-    {
-        iProp = ItemPropertyCastSpell(769,IP_CONST_CASTSPELL_NUMUSES_3_USES_PER_DAY);
-        AddItemProperty(DURATION_TYPE_PERMANENT,iProp,oItem);
-        total_props++;
-    }
-    if ( GetHasSpell(SPELLABILITY_BOLT_DAZE, oCreature) && (total_props <= 7) )
-    {
-        iProp = ItemPropertyCastSpell(770,IP_CONST_CASTSPELL_NUMUSES_3_USES_PER_DAY);
-        AddItemProperty(DURATION_TYPE_PERMANENT,iProp,oItem);
-        total_props++;
-    }
-    if ( GetHasSpell(SPELLABILITY_BOLT_DEATH, oCreature) && (total_props <= 7) )
-    {
-        iProp = ItemPropertyCastSpell(771,IP_CONST_CASTSPELL_NUMUSES_3_USES_PER_DAY);
-        AddItemProperty(DURATION_TYPE_PERMANENT,iProp,oItem);
-        total_props++;
-    }
-    if ( GetHasSpell(SPELLABILITY_BOLT_DISEASE, oCreature) && (total_props <= 7) )
-    {
-        iProp = ItemPropertyCastSpell(772,IP_CONST_CASTSPELL_NUMUSES_3_USES_PER_DAY);
-        AddItemProperty(DURATION_TYPE_PERMANENT,iProp,oItem);
-        total_props++;
-    }
-    if ( GetHasSpell(SPELLABILITY_BOLT_DOMINATE, oCreature) && (total_props <= 7) )
-    {
-        iProp = ItemPropertyCastSpell(773,IP_CONST_CASTSPELL_NUMUSES_3_USES_PER_DAY);
-        AddItemProperty(DURATION_TYPE_PERMANENT,iProp,oItem);
-        total_props++;
-    }
-    if ( GetHasSpell(SPELLABILITY_BOLT_FIRE, oCreature) && (total_props <= 7) )
-    {
-        iProp = ItemPropertyCastSpell(774,IP_CONST_CASTSPELL_NUMUSES_3_USES_PER_DAY);
-        AddItemProperty(DURATION_TYPE_PERMANENT,iProp,oItem);
-        total_props++;
-    }
-    if ( GetHasSpell(SPELLABILITY_BOLT_KNOCKDOWN, oCreature) && (total_props <= 7) )
-    {
-        iProp = ItemPropertyCastSpell(775,IP_CONST_CASTSPELL_NUMUSES_3_USES_PER_DAY);
-        AddItemProperty(DURATION_TYPE_PERMANENT,iProp,oItem);
-        total_props++;
-    }
-    if ( GetHasSpell(SPELLABILITY_BOLT_LEVEL_DRAIN, oCreature) && (total_props <= 7) )
-    {
-        iProp = ItemPropertyCastSpell(776,IP_CONST_CASTSPELL_NUMUSES_3_USES_PER_DAY);
-        AddItemProperty(DURATION_TYPE_PERMANENT,iProp,oItem);
-        total_props++;
-    }
-    if ( GetHasSpell(SPELLABILITY_BOLT_LIGHTNING, oCreature) && (total_props <= 7) )
-    {
-        iProp = ItemPropertyCastSpell(777,IP_CONST_CASTSPELL_NUMUSES_3_USES_PER_DAY);
-        AddItemProperty(DURATION_TYPE_PERMANENT,iProp,oItem);
-        total_props++;
-    }
-    if ( GetHasSpell(SPELLABILITY_BOLT_PARALYZE, oCreature) && (total_props <= 7) )
-    {
-        iProp = ItemPropertyCastSpell(778,IP_CONST_CASTSPELL_NUMUSES_3_USES_PER_DAY);
-        AddItemProperty(DURATION_TYPE_PERMANENT,iProp,oItem);
-        total_props++;
-    }
-    if ( GetHasSpell(SPELLABILITY_BOLT_POISON, oCreature) && (total_props <= 7) )
-    {
-        iProp = ItemPropertyCastSpell(779,IP_CONST_CASTSPELL_NUMUSES_3_USES_PER_DAY);
-        AddItemProperty(DURATION_TYPE_PERMANENT,iProp,oItem);
-        total_props++;
-    }
-    if ( GetHasSpell(SPELLABILITY_BOLT_SHARDS, oCreature) && (total_props <= 7) )
-    {
-        iProp = ItemPropertyCastSpell(780,IP_CONST_CASTSPELL_NUMUSES_3_USES_PER_DAY);
-        AddItemProperty(DURATION_TYPE_PERMANENT,iProp,oItem);
-        total_props++;
-    }
-    if ( GetHasSpell(SPELLABILITY_BOLT_SLOW, oCreature) && (total_props <= 7) )
-    {
-        iProp = ItemPropertyCastSpell(781,IP_CONST_CASTSPELL_NUMUSES_3_USES_PER_DAY);
-        AddItemProperty(DURATION_TYPE_PERMANENT,iProp,oItem);
-        total_props++;
-    }
-    if ( GetHasSpell(SPELLABILITY_BOLT_STUN, oCreature) && (total_props <= 7) )
-    {
-        iProp = ItemPropertyCastSpell(782,IP_CONST_CASTSPELL_NUMUSES_3_USES_PER_DAY);
-        AddItemProperty(DURATION_TYPE_PERMANENT,iProp,oItem);
-        total_props++;
-    }
-    if ( GetHasSpell(SPELLABILITY_BOLT_WEB, oCreature) && (total_props <= 7) )
-    {
-        iProp = ItemPropertyCastSpell(783,IP_CONST_CASTSPELL_NUMUSES_3_USES_PER_DAY);
-        AddItemProperty(DURATION_TYPE_PERMANENT,iProp,oItem);
-        total_props++;
-    }
-    //now, cones
-    if ( GetHasSpell(SPELLABILITY_CONE_ACID, oCreature) && (total_props <= 7) )
-    {
-        iProp = ItemPropertyCastSpell(784,IP_CONST_CASTSPELL_NUMUSES_2_USES_PER_DAY);
-        AddItemProperty(DURATION_TYPE_PERMANENT,iProp,oItem);
-        total_props++;
-    }
-    if ( GetHasSpell(SPELLABILITY_CONE_COLD, oCreature) && (total_props <= 7) )
-    {
-        iProp = ItemPropertyCastSpell(785,IP_CONST_CASTSPELL_NUMUSES_2_USES_PER_DAY);
-        AddItemProperty(DURATION_TYPE_PERMANENT,iProp,oItem);
-        total_props++;
-    }
-    if ( GetHasSpell(SPELLABILITY_CONE_DISEASE, oCreature) && (total_props <= 7) )
-    {
-        iProp = ItemPropertyCastSpell(786,IP_CONST_CASTSPELL_NUMUSES_2_USES_PER_DAY);
-        AddItemProperty(DURATION_TYPE_PERMANENT,iProp,oItem);
-        total_props++;
-    }
-    if ( GetHasSpell(SPELLABILITY_CONE_FIRE, oCreature) && (total_props <= 7) )
-    {
-        iProp = ItemPropertyCastSpell(787,IP_CONST_CASTSPELL_NUMUSES_2_USES_PER_DAY);
-        AddItemProperty(DURATION_TYPE_PERMANENT,iProp,oItem);
-        total_props++;
-    }
-    if ( GetHasSpell(SPELLABILITY_CONE_LIGHTNING, oCreature) && (total_props <= 7) )
-    {
-        iProp = ItemPropertyCastSpell(788,IP_CONST_CASTSPELL_NUMUSES_2_USES_PER_DAY);
-        AddItemProperty(DURATION_TYPE_PERMANENT,iProp,oItem);
-        total_props++;
-    }
-    if ( GetHasSpell(SPELLABILITY_CONE_POISON, oCreature) && (total_props <= 7) )
-    {
-        iProp = ItemPropertyCastSpell(789,IP_CONST_CASTSPELL_NUMUSES_2_USES_PER_DAY);
-        AddItemProperty(DURATION_TYPE_PERMANENT,iProp,oItem);
-        total_props++;
-    }
-    if ( GetHasSpell(SPELLABILITY_CONE_SONIC, oCreature) && (total_props <= 7) )
-    {
-        iProp = ItemPropertyCastSpell(790,IP_CONST_CASTSPELL_NUMUSES_2_USES_PER_DAY);
-        AddItemProperty(DURATION_TYPE_PERMANENT,iProp,oItem);
-        total_props++;
-    }
-    //various petrify attacks
-    if ( GetHasSpell(SPELLABILITY_BREATH_PETRIFY, oCreature) && (total_props <= 7) )
-    {
-        iProp = ItemPropertyCastSpell(791,IP_CONST_CASTSPELL_NUMUSES_UNLIMITED_USE);
-        AddItemProperty(DURATION_TYPE_PERMANENT,iProp,oItem);
-        total_props++;
-    }
-    if ( GetHasSpell(SPELLABILITY_GAZE_PETRIFY, oCreature) && (total_props <= 7) )
-    {
-        iProp = ItemPropertyCastSpell(792,IP_CONST_CASTSPELL_NUMUSES_UNLIMITED_USE);
-        AddItemProperty(DURATION_TYPE_PERMANENT,iProp,oItem);
-        total_props++;
-    }
-    if ( GetHasSpell(SPELLABILITY_TOUCH_PETRIFY, oCreature) && (total_props <= 7) )
-    {
-        iProp = ItemPropertyCastSpell(793,IP_CONST_CASTSPELL_NUMUSES_UNLIMITED_USE);
-        AddItemProperty(DURATION_TYPE_PERMANENT,iProp,oItem);
-        total_props++;
-    }
-    //dragon stuff (fear aura, breaths)
-    if ( GetHasSpell(SPELLABILITY_DRAGON_FEAR, oCreature) && (total_props <= 7) )
-    {
-        iProp = ItemPropertyCastSpell(796,IP_CONST_CASTSPELL_NUMUSES_UNLIMITED_USE);
-        AddItemProperty(DURATION_TYPE_PERMANENT,iProp,oItem);
-        total_props++;
-    }
-    if ( GetHasSpell(SPELLABILITY_DRAGON_BREATH_ACID, oCreature) && (total_props <= 7) )
-    {
-        iProp = ItemPropertyCastSpell(400,IP_CONST_CASTSPELL_NUMUSES_3_USES_PER_DAY);
-        AddItemProperty(DURATION_TYPE_PERMANENT,iProp,oItem);
-        total_props++;
-    }
-    if ( GetHasSpell(SPELLABILITY_DRAGON_BREATH_COLD, oCreature) && (total_props <= 7) )
-    {
-        iProp = ItemPropertyCastSpell(401,IP_CONST_CASTSPELL_NUMUSES_3_USES_PER_DAY);
-        AddItemProperty(DURATION_TYPE_PERMANENT,iProp,oItem);
-        total_props++;
-    }
-    if ( GetHasSpell(SPELLABILITY_DRAGON_BREATH_FEAR, oCreature) && (total_props <= 7) )
-    {
-        iProp = ItemPropertyCastSpell(402,IP_CONST_CASTSPELL_NUMUSES_3_USES_PER_DAY);
-        AddItemProperty(DURATION_TYPE_PERMANENT,iProp,oItem);
-        total_props++;
-    }
-    if ( GetHasSpell(SPELLABILITY_DRAGON_BREATH_FIRE, oCreature) && (total_props <= 7) )
-    {
-        iProp = ItemPropertyCastSpell(403,IP_CONST_CASTSPELL_NUMUSES_3_USES_PER_DAY);
-        AddItemProperty(DURATION_TYPE_PERMANENT,iProp,oItem);
-        total_props++;
-    }
-    if ( GetHasSpell(SPELLABILITY_DRAGON_BREATH_GAS, oCreature) && (total_props <= 7) )
-    {
-        iProp = ItemPropertyCastSpell(404,IP_CONST_CASTSPELL_NUMUSES_3_USES_PER_DAY);
-        AddItemProperty(DURATION_TYPE_PERMANENT,iProp,oItem);
-        total_props++;
-    }
-    if ( GetHasSpell(SPELLABILITY_DRAGON_BREATH_LIGHTNING, oCreature) && (total_props <= 7) )
-    {
-        iProp = ItemPropertyCastSpell(405,IP_CONST_CASTSPELL_NUMUSES_3_USES_PER_DAY);
-        AddItemProperty(DURATION_TYPE_PERMANENT,iProp,oItem);
-        total_props++;
-    }
-    if ( GetHasSpell(698, oCreature) && (total_props <= 7) ) //NEGATIVE
-    {
-        iProp = ItemPropertyCastSpell(794,IP_CONST_CASTSPELL_NUMUSES_5_USES_PER_DAY);
-        AddItemProperty(DURATION_TYPE_PERMANENT,iProp,oItem);
-        total_props++;
-    }
-    if ( GetHasSpell(SPELLABILITY_DRAGON_BREATH_PARALYZE, oCreature) && (total_props <= 7) )
-    {
-        iProp = ItemPropertyCastSpell(406,IP_CONST_CASTSPELL_NUMUSES_3_USES_PER_DAY);
-        AddItemProperty(DURATION_TYPE_PERMANENT,iProp,oItem);
-        total_props++;
-    }
-    if ( GetHasSpell(SPELLABILITY_DRAGON_BREATH_SLEEP, oCreature) && (total_props <= 7) )
-    {
-        iProp = ItemPropertyCastSpell(407,IP_CONST_CASTSPELL_NUMUSES_3_USES_PER_DAY);
-        AddItemProperty(DURATION_TYPE_PERMANENT,iProp,oItem);
-        total_props++;
-    }
-    if ( GetHasSpell(SPELLABILITY_DRAGON_BREATH_SLOW, oCreature) && (total_props <= 7) )
-    {
-        iProp = ItemPropertyCastSpell(408,IP_CONST_CASTSPELL_NUMUSES_3_USES_PER_DAY);
-        AddItemProperty(DURATION_TYPE_PERMANENT,iProp,oItem);
-        total_props++;
-    }
-    if ( GetHasSpell(SPELLABILITY_DRAGON_BREATH_WEAKEN, oCreature) && (total_props <= 7) )
-    {
-        iProp = ItemPropertyCastSpell(409,IP_CONST_CASTSPELL_NUMUSES_3_USES_PER_DAY);
-        AddItemProperty(DURATION_TYPE_PERMANENT,iProp,oItem);
-        total_props++;
-    }
-    if ( GetHasSpell(771, oCreature) && (total_props <= 7) ) //PRISMATIC
-    {
-        iProp = ItemPropertyCastSpell(795,IP_CONST_CASTSPELL_NUMUSES_UNLIMITED_USE);
-        AddItemProperty(DURATION_TYPE_PERMANENT,iProp,oItem);
-        total_props++;
-    }
-    //gaze attacks
-    if ( GetHasSpell(SPELLABILITY_GAZE_CHARM, oCreature) && (total_props <= 7) )
-    {
-        iProp = ItemPropertyCastSpell(797,IP_CONST_CASTSPELL_NUMUSES_UNLIMITED_USE);
-        AddItemProperty(DURATION_TYPE_PERMANENT,iProp,oItem);
-        total_props++;
-    }
-    if ( GetHasSpell(SPELLABILITY_GAZE_CONFUSION, oCreature) && (total_props <= 7) )
-    {
-        iProp = ItemPropertyCastSpell(798,IP_CONST_CASTSPELL_NUMUSES_UNLIMITED_USE);
-        AddItemProperty(DURATION_TYPE_PERMANENT,iProp,oItem);
-        total_props++;
-    }
-    if ( GetHasSpell(SPELLABILITY_GAZE_DAZE, oCreature) && (total_props <= 7) )
-    {
-        iProp = ItemPropertyCastSpell(799,IP_CONST_CASTSPELL_NUMUSES_UNLIMITED_USE);
-        AddItemProperty(DURATION_TYPE_PERMANENT,iProp,oItem);
-        total_props++;
-    }
-    if ( GetHasSpell(SPELLABILITY_GAZE_DEATH, oCreature) && (total_props <= 7) )
-    {
-        iProp = ItemPropertyCastSpell(800,IP_CONST_CASTSPELL_NUMUSES_UNLIMITED_USE);
-        AddItemProperty(DURATION_TYPE_PERMANENT,iProp,oItem);
-        total_props++;
-    }
-    if ( GetHasSpell(SPELLABILITY_GAZE_DESTROY_CHAOS, oCreature) && (total_props <= 7) )
-    {
-        iProp = ItemPropertyCastSpell(801,IP_CONST_CASTSPELL_NUMUSES_UNLIMITED_USE);
-        AddItemProperty(DURATION_TYPE_PERMANENT,iProp,oItem);
-        total_props++;
-    }
-    if ( GetHasSpell(SPELLABILITY_GAZE_DESTROY_EVIL, oCreature) && (total_props <= 7) )
-    {
-        iProp = ItemPropertyCastSpell(802,IP_CONST_CASTSPELL_NUMUSES_UNLIMITED_USE);
-        AddItemProperty(DURATION_TYPE_PERMANENT,iProp,oItem);
-        total_props++;
-    }
-    if ( GetHasSpell(SPELLABILITY_GAZE_DESTROY_GOOD, oCreature) && (total_props <= 7) )
-    {
-        iProp = ItemPropertyCastSpell(803,IP_CONST_CASTSPELL_NUMUSES_UNLIMITED_USE);
-        AddItemProperty(DURATION_TYPE_PERMANENT,iProp,oItem);
-        total_props++;
-    }
-    if ( GetHasSpell(SPELLABILITY_GAZE_DESTROY_LAW, oCreature) && (total_props <= 7) )
-    {
-        iProp = ItemPropertyCastSpell(804,IP_CONST_CASTSPELL_NUMUSES_UNLIMITED_USE);
-        AddItemProperty(DURATION_TYPE_PERMANENT,iProp,oItem);
-        total_props++;
-    }
-    if ( GetHasSpell(SPELLABILITY_GAZE_DOMINATE, oCreature) && (total_props <= 7) )
-    {
-        iProp = ItemPropertyCastSpell(805,IP_CONST_CASTSPELL_NUMUSES_1_USE_PER_DAY);
-        AddItemProperty(DURATION_TYPE_PERMANENT,iProp,oItem);
-        total_props++;
-    }
-    if ( GetHasSpell(SPELLABILITY_GAZE_DOOM, oCreature) && (total_props <= 7) )
-    {
-        iProp = ItemPropertyCastSpell(806,IP_CONST_CASTSPELL_NUMUSES_UNLIMITED_USE);
-        AddItemProperty(DURATION_TYPE_PERMANENT,iProp,oItem);
-        total_props++;
-    }
-    if ( GetHasSpell(SPELLABILITY_GAZE_FEAR, oCreature) && (total_props <= 7) )
-    {
-        iProp = ItemPropertyCastSpell(807,IP_CONST_CASTSPELL_NUMUSES_UNLIMITED_USE);
-        AddItemProperty(DURATION_TYPE_PERMANENT,iProp,oItem);
-        total_props++;
-    }
-    if ( GetHasSpell(SPELLABILITY_GAZE_PARALYSIS, oCreature) && (total_props <= 7) )
-    {
-        iProp = ItemPropertyCastSpell(808,IP_CONST_CASTSPELL_NUMUSES_UNLIMITED_USE);
-        AddItemProperty(DURATION_TYPE_PERMANENT,iProp,oItem);
-        total_props++;
-    }
-    if ( GetHasSpell(SPELLABILITY_GAZE_STUNNED, oCreature) && (total_props <= 7) )
-    {
-        iProp = ItemPropertyCastSpell(809,IP_CONST_CASTSPELL_NUMUSES_UNLIMITED_USE);
-        AddItemProperty(DURATION_TYPE_PERMANENT,iProp,oItem);
-        total_props++;
-    }
-    //miscellaneous abilities
-    if ( GetHasSpell(SPELLABILITY_GOLEM_BREATH_GAS, oCreature) && (total_props <= 7) )
-    {
-        iProp = ItemPropertyCastSpell(810,IP_CONST_CASTSPELL_NUMUSES_3_USES_PER_DAY);
-        AddItemProperty(DURATION_TYPE_PERMANENT,iProp,oItem);
-        total_props++;
-    }
-    if ( GetHasSpell(SPELLABILITY_HELL_HOUND_FIREBREATH, oCreature) && (total_props <= 7) )
-    {
-        iProp = ItemPropertyCastSpell(811,IP_CONST_CASTSPELL_NUMUSES_3_USES_PER_DAY);
-        AddItemProperty(DURATION_TYPE_PERMANENT,iProp,oItem);
-        total_props++;
-    }
-    if ( GetHasSpell(SPELLABILITY_KRENSHAR_SCARE, oCreature) && (total_props <= 7) )
-    {
-        iProp = ItemPropertyCastSpell(812,IP_CONST_CASTSPELL_NUMUSES_3_USES_PER_DAY);
-        AddItemProperty(DURATION_TYPE_PERMANENT,iProp,oItem);
-        total_props++;
-    }
-    //howls
-    if ( GetHasSpell(SPELLABILITY_HOWL_CONFUSE, oCreature) && (total_props <= 7) )
-    {
-        iProp = ItemPropertyCastSpell(813,IP_CONST_CASTSPELL_NUMUSES_2_USES_PER_DAY);
-        AddItemProperty(DURATION_TYPE_PERMANENT,iProp,oItem);
-        total_props++;
-    }
-    if ( GetHasSpell(SPELLABILITY_HOWL_DAZE, oCreature) && (total_props <= 7) )
-    {
-        iProp = ItemPropertyCastSpell(814,IP_CONST_CASTSPELL_NUMUSES_2_USES_PER_DAY);
-        AddItemProperty(DURATION_TYPE_PERMANENT,iProp,oItem);
-        total_props++;
-    }
-    if ( GetHasSpell(SPELLABILITY_HOWL_DEATH, oCreature) && (total_props <= 7) )
-    {
-        iProp = ItemPropertyCastSpell(815,IP_CONST_CASTSPELL_NUMUSES_2_USES_PER_DAY);
-        AddItemProperty(DURATION_TYPE_PERMANENT,iProp,oItem);
-        total_props++;
-    }
-    if ( GetHasSpell(SPELLABILITY_HOWL_DOOM, oCreature) && (total_props <= 7) )
-    {
-        iProp = ItemPropertyCastSpell(816,IP_CONST_CASTSPELL_NUMUSES_2_USES_PER_DAY);
-        AddItemProperty(DURATION_TYPE_PERMANENT,iProp,oItem);
-        total_props++;
-    }
-    if ( GetHasSpell(SPELLABILITY_HOWL_FEAR, oCreature) && (total_props <= 7) )
-    {
-        iProp = ItemPropertyCastSpell(817,IP_CONST_CASTSPELL_NUMUSES_2_USES_PER_DAY);
-        AddItemProperty(DURATION_TYPE_PERMANENT,iProp,oItem);
-        total_props++;
-    }
-    if ( GetHasSpell(SPELLABILITY_HOWL_PARALYSIS, oCreature) && (total_props <= 7) )
-    {
-        iProp = ItemPropertyCastSpell(818,IP_CONST_CASTSPELL_NUMUSES_2_USES_PER_DAY);
-        AddItemProperty(DURATION_TYPE_PERMANENT,iProp,oItem);
-        total_props++;
-    }
-    if ( GetHasSpell(SPELLABILITY_HOWL_SONIC, oCreature) && (total_props <= 7) )
-    {
-        iProp = ItemPropertyCastSpell(819,IP_CONST_CASTSPELL_NUMUSES_2_USES_PER_DAY);
-        AddItemProperty(DURATION_TYPE_PERMANENT,iProp,oItem);
-        total_props++;
-    }
-    if ( GetHasSpell(SPELLABILITY_HOWL_STUN, oCreature) && (total_props <= 7) )
-    {
-        iProp = ItemPropertyCastSpell(820,IP_CONST_CASTSPELL_NUMUSES_2_USES_PER_DAY);
-        AddItemProperty(DURATION_TYPE_PERMANENT,iProp,oItem);
-        total_props++;
-    }
-    //pulses
-    if ( GetHasSpell(SPELLABILITY_PULSE_ABILITY_DRAIN_CHARISMA, oCreature) && (total_props <= 7) )
-    {
-        iProp = ItemPropertyCastSpell(821,IP_CONST_CASTSPELL_NUMUSES_1_USE_PER_DAY);
-        AddItemProperty(DURATION_TYPE_PERMANENT,iProp,oItem);
-        total_props++;
-    }
-    if ( GetHasSpell(SPELLABILITY_PULSE_ABILITY_DRAIN_CONSTITUTION, oCreature) && (total_props <= 7) )
-    {
-        iProp = ItemPropertyCastSpell(822,IP_CONST_CASTSPELL_NUMUSES_1_USE_PER_DAY);
-        AddItemProperty(DURATION_TYPE_PERMANENT,iProp,oItem);
-        total_props++;
-    }
-    if ( GetHasSpell(SPELLABILITY_PULSE_ABILITY_DRAIN_DEXTERITY, oCreature) && (total_props <= 7) )
-    {
-        iProp = ItemPropertyCastSpell(823,IP_CONST_CASTSPELL_NUMUSES_1_USE_PER_DAY);
-        AddItemProperty(DURATION_TYPE_PERMANENT,iProp,oItem);
-        total_props++;
-    }
-    if ( GetHasSpell(SPELLABILITY_PULSE_ABILITY_DRAIN_INTELLIGENCE, oCreature) && (total_props <= 7) )
-    {
-        iProp = ItemPropertyCastSpell(824,IP_CONST_CASTSPELL_NUMUSES_1_USE_PER_DAY);
-        AddItemProperty(DURATION_TYPE_PERMANENT,iProp,oItem);
-        total_props++;
-    }
-    if ( GetHasSpell(SPELLABILITY_PULSE_ABILITY_DRAIN_STRENGTH, oCreature) && (total_props <= 7) )
-    {
-        iProp = ItemPropertyCastSpell(825,IP_CONST_CASTSPELL_NUMUSES_1_USE_PER_DAY);
-        AddItemProperty(DURATION_TYPE_PERMANENT,iProp,oItem);
-        total_props++;
-    }
-    if ( GetHasSpell(SPELLABILITY_PULSE_ABILITY_DRAIN_WISDOM, oCreature) && (total_props <= 7) )
-    {
-        iProp = ItemPropertyCastSpell(826,IP_CONST_CASTSPELL_NUMUSES_1_USE_PER_DAY);
-        AddItemProperty(DURATION_TYPE_PERMANENT,iProp,oItem);
-        total_props++;
-    }
-    if ( GetHasSpell(SPELLABILITY_PULSE_COLD, oCreature) && (total_props <= 7) )
-    {
-        iProp = ItemPropertyCastSpell(827,IP_CONST_CASTSPELL_NUMUSES_1_USE_PER_DAY);
-        AddItemProperty(DURATION_TYPE_PERMANENT,iProp,oItem);
-        total_props++;
-    }
-    if ( GetHasSpell(SPELLABILITY_PULSE_DEATH, oCreature) && (total_props <= 7) )
-    {
-        iProp = ItemPropertyCastSpell(828,IP_CONST_CASTSPELL_NUMUSES_1_USE_PER_DAY);
-        AddItemProperty(DURATION_TYPE_PERMANENT,iProp,oItem);
-        total_props++;
-    }
-    if ( GetHasSpell(SPELLABILITY_PULSE_DISEASE, oCreature) && (total_props <= 7) )
-    {
-        iProp = ItemPropertyCastSpell(829,IP_CONST_CASTSPELL_NUMUSES_1_USE_PER_DAY);
-        AddItemProperty(DURATION_TYPE_PERMANENT,iProp,oItem);
-        total_props++;
-    }
-    if ( GetHasSpell(SPELLABILITY_PULSE_DROWN, oCreature) && (total_props <= 7) )
-    {
-        iProp = ItemPropertyCastSpell(830,IP_CONST_CASTSPELL_NUMUSES_1_USE_PER_DAY);
-        AddItemProperty(DURATION_TYPE_PERMANENT,iProp,oItem);
-        total_props++;
-    }
-    if ( GetHasSpell(SPELLABILITY_PULSE_FIRE, oCreature) && (total_props <= 7) )
-    {
-        iProp = ItemPropertyCastSpell(831,IP_CONST_CASTSPELL_NUMUSES_1_USE_PER_DAY);
-        AddItemProperty(DURATION_TYPE_PERMANENT,iProp,oItem);
-        total_props++;
-    }
-    if ( GetHasSpell(SPELLABILITY_PULSE_HOLY, oCreature) && (total_props <= 7) )
-    {
-        iProp = ItemPropertyCastSpell(832,IP_CONST_CASTSPELL_NUMUSES_1_USE_PER_DAY);
-        AddItemProperty(DURATION_TYPE_PERMANENT,iProp,oItem);
-        total_props++;
-    }
-    if ( GetHasSpell(SPELLABILITY_PULSE_LEVEL_DRAIN, oCreature) && (total_props <= 7) )
-    {
-        iProp = ItemPropertyCastSpell(833,IP_CONST_CASTSPELL_NUMUSES_1_USE_PER_DAY);
-        AddItemProperty(DURATION_TYPE_PERMANENT,iProp,oItem);
-        total_props++;
-    }
-    if ( GetHasSpell(SPELLABILITY_PULSE_LIGHTNING, oCreature) && (total_props <= 7) )
-    {
-        iProp = ItemPropertyCastSpell(834,IP_CONST_CASTSPELL_NUMUSES_1_USE_PER_DAY);
-        AddItemProperty(DURATION_TYPE_PERMANENT,iProp,oItem);
-        total_props++;
-    }
-    if ( GetHasSpell(SPELLABILITY_PULSE_NEGATIVE, oCreature) && (total_props <= 7) )
-    {
-        iProp = ItemPropertyCastSpell(835,IP_CONST_CASTSPELL_NUMUSES_1_USE_PER_DAY);
-        AddItemProperty(DURATION_TYPE_PERMANENT,iProp,oItem);
-        total_props++;
-    }
-    if ( GetHasSpell(SPELLABILITY_PULSE_POISON, oCreature) && (total_props <= 7) )
-    {
-        iProp = ItemPropertyCastSpell(836,IP_CONST_CASTSPELL_NUMUSES_1_USE_PER_DAY);
-        AddItemProperty(DURATION_TYPE_PERMANENT,iProp,oItem);
-        total_props++;
-    }
-    if ( GetHasSpell(SPELLABILITY_PULSE_SPORES, oCreature) && (total_props <= 7) )
-    {
-        iProp = ItemPropertyCastSpell(837,IP_CONST_CASTSPELL_NUMUSES_1_USE_PER_DAY);
-        AddItemProperty(DURATION_TYPE_PERMANENT,iProp,oItem);
-        total_props++;
-    }
-    if ( GetHasSpell(SPELLABILITY_PULSE_WHIRLWIND, oCreature) && (total_props <= 7) )
-    {
-        iProp = ItemPropertyCastSpell(838,IP_CONST_CASTSPELL_NUMUSES_1_USE_PER_DAY);
-        AddItemProperty(DURATION_TYPE_PERMANENT,iProp,oItem);
-        total_props++;
-    }
-    //monster summon abilities
-    if ( GetHasSpell(SPELLABILITY_SUMMON_SLAAD, oCreature) && (total_props <= 7) )
-    {
-        iProp = ItemPropertyCastSpell(839,IP_CONST_CASTSPELL_NUMUSES_1_USE_PER_DAY);
-        AddItemProperty(DURATION_TYPE_PERMANENT,iProp,oItem);
-        total_props++;
-    }
-    if ( GetHasSpell(SPELLABILITY_SUMMON_TANARRI, oCreature) && (total_props <= 7) )
-    {
-        iProp = ItemPropertyCastSpell(840,IP_CONST_CASTSPELL_NUMUSES_1_USE_PER_DAY);
-        AddItemProperty(DURATION_TYPE_PERMANENT,iProp,oItem);
-        total_props++;
-    }
-    //abilities without const refs
-    if ( GetHasSpell(552, oCreature) && (total_props <= 7) ) //PSIONIC CHARM
-    {
-        iProp = ItemPropertyCastSpell(841,IP_CONST_CASTSPELL_NUMUSES_2_USES_PER_DAY);
-        AddItemProperty(DURATION_TYPE_PERMANENT,iProp,oItem);
-        total_props++;
-    }
-    if ( GetHasSpell(551, oCreature) && (total_props <= 7) ) //PSIONIC MINDBLAST
-    {
-        iProp = ItemPropertyCastSpell(842,IP_CONST_CASTSPELL_NUMUSES_UNLIMITED_USE);
-        AddItemProperty(DURATION_TYPE_PERMANENT,iProp,oItem);
-        total_props++;
-    }
-    if ( GetHasSpell(713, oCreature) && (total_props <= 7) ) //MINDBLAST 10M
-    {
-        iProp = ItemPropertyCastSpell(843,IP_CONST_CASTSPELL_NUMUSES_UNLIMITED_USE);
-        AddItemProperty(DURATION_TYPE_PERMANENT,iProp,oItem);
-        total_props++;
-    }
-    if ( GetHasSpell(741, oCreature) && (total_props <= 7) ) //PSIONIC BARRIER
-    {
-        iProp = ItemPropertyCastSpell(844,IP_CONST_CASTSPELL_NUMUSES_1_USE_PER_DAY);
-        AddItemProperty(DURATION_TYPE_PERMANENT,iProp,oItem);
-        total_props++;
-    }
-    if ( GetHasSpell(763, oCreature) && (total_props <= 7) ) //PSIONIC CONCUSSION
-    {
-        iProp = ItemPropertyCastSpell(845,IP_CONST_CASTSPELL_NUMUSES_3_USES_PER_DAY);
-        AddItemProperty(DURATION_TYPE_PERMANENT,iProp,oItem);
-        total_props++;
-    }
-    if ( GetHasSpell(731, oCreature) && (total_props <= 7) ) //BEBILITH WEB
-    {
-        iProp = ItemPropertyCastSpell(846,IP_CONST_CASTSPELL_NUMUSES_5_USES_PER_DAY);
-        AddItemProperty(DURATION_TYPE_PERMANENT,iProp,oItem);
-        total_props++;
-    }
-    if ( GetHasSpell(736, oCreature) && (total_props <= 7) ) //BEHOLDER EYES
-    {
-        iProp = ItemPropertyCastSpell(847,IP_CONST_CASTSPELL_NUMUSES_UNLIMITED_USE);
-        AddItemProperty(DURATION_TYPE_PERMANENT,iProp,oItem);
-        total_props++;
-    }
-    if ( GetHasSpell(770, oCreature) && (total_props <= 7) ) //CHAOS SPITTLE
-    {
-        iProp = ItemPropertyCastSpell(848,IP_CONST_CASTSPELL_NUMUSES_UNLIMITED_USE);
-        AddItemProperty(DURATION_TYPE_PERMANENT,iProp,oItem);
-        total_props++;
-    }
-    if ( GetHasSpell(757, oCreature) && (total_props <= 7) ) //SHADOWBLEND
-    {
-        iProp = ItemPropertyCastSpell(849,IP_CONST_CASTSPELL_NUMUSES_1_USE_PER_DAY);
-        AddItemProperty(DURATION_TYPE_PERMANENT,iProp,oItem);
-        total_props++;
-    }
-    if ( GetHasSpell(774, oCreature) && (total_props <= 7) ) //DEFLECTING FORCE
-    {
-        iProp = ItemPropertyCastSpell(850,IP_CONST_CASTSPELL_NUMUSES_1_USE_PER_DAY);
-        AddItemProperty(DURATION_TYPE_PERMANENT,iProp,oItem);
-        total_props++;
-    }
-    //some spell-like abilities
-    if ((GetHasSpell(SPELL_DARKNESS,oCreature) ||
-        GetHasSpell(SPELLABILITY_AS_DARKNESS,oCreature)) &&
-        total_props <= 7)
-    {
-        iProp = ItemPropertyCastSpell(IP_CONST_CASTSPELL_DARKNESS_3,IP_CONST_CASTSPELL_NUMUSES_1_USE_PER_DAY);
-        AddItemProperty(DURATION_TYPE_PERMANENT,iProp,oItem);
-        total_props++;
-    }
-    if (GetHasSpell(SPELL_DISPLACEMENT,oCreature) && total_props <= 7)
-    {
-        iProp = ItemPropertyCastSpell(IP_CONST_CASTSPELL_DISPLACEMENT_9,IP_CONST_CASTSPELL_NUMUSES_1_USE_PER_DAY);
-        AddItemProperty(DURATION_TYPE_PERMANENT,iProp,oItem);
-        total_props++;
-    }
-    if ((GetHasSpell(SPELLABILITY_AS_INVISIBILITY,oCreature) ||
-        GetHasSpell(SPELL_INVISIBILITY,oCreature)) &&
-        total_props <= 7)
-    {
-        iProp = ItemPropertyCastSpell(IP_CONST_CASTSPELL_INVISIBILITY_3,IP_CONST_CASTSPELL_NUMUSES_5_USES_PER_DAY);
-        AddItemProperty(DURATION_TYPE_PERMANENT,iProp,oItem);
-        total_props++;
-    }
-    if (GetHasSpell(SPELL_WEB,oCreature) && total_props <= 7)
-    {
-        iProp = ItemPropertyCastSpell(IP_CONST_CASTSPELL_WEB_3,IP_CONST_CASTSPELL_NUMUSES_1_USE_PER_DAY);
-        AddItemProperty(DURATION_TYPE_PERMANENT,iProp,oItem);
-        total_props++;
-    }
-// Shifter should not get spells, even at epic levels
-/*    if (GetHasSpell(SPELL_MAGIC_MISSILE,oCreature) && total_props <= 7)
-    {
-        iProp = ItemPropertyCastSpell(IP_CONST_CASTSPELL_MAGIC_MISSILE_5,IP_CONST_CASTSPELL_NUMUSES_3_USES_PER_DAY);
-        AddItemProperty(DURATION_TYPE_PERMANENT,iProp,oItem);
-        total_props++;
-    }*/
-/*    if (GetHasSpell(SPELL_FIREBALL,oCreature) && total_props <= 7)
-    {
-        iProp = ItemPropertyCastSpell(IP_CONST_CASTSPELL_FIREBALL_10,IP_CONST_CASTSPELL_NUMUSES_4_USES_PER_DAY);
-        AddItemProperty(DURATION_TYPE_PERMANENT,iProp,oItem);
-        total_props++;
-    }*/
-/*    if (GetHasSpell(SPELL_CONE_OF_COLD,oCreature) && total_props <= 7)
-    {
-        iProp = ItemPropertyCastSpell(IP_CONST_CASTSPELL_CONE_OF_COLD_9,IP_CONST_CASTSPELL_NUMUSES_2_USES_PER_DAY);
-        AddItemProperty(DURATION_TYPE_PERMANENT,iProp,oItem);
-        total_props++;
-    }*/
-/*    if (GetHasSpell(SPELL_LIGHTNING_BOLT,oCreature) && total_props <= 7)
-    {
-        iProp = ItemPropertyCastSpell(IP_CONST_CASTSPELL_LIGHTNING_BOLT_10,IP_CONST_CASTSPELL_NUMUSES_2_USES_PER_DAY);
-        AddItemProperty(DURATION_TYPE_PERMANENT,iProp,oItem);
-        total_props++;
-    }*/
-/*    if (GetHasSpell(SPELL_CURE_CRITICAL_WOUNDS,oCreature) && total_props <= 7)
-    {
-        iProp = ItemPropertyCastSpell(IP_CONST_CASTSPELL_CURE_CRITICAL_WOUNDS_12,IP_CONST_CASTSPELL_NUMUSES_3_USES_PER_DAY);
-        AddItemProperty(DURATION_TYPE_PERMANENT,iProp,oItem);
-        total_props++;
-    }*/
-/*    if (GetHasSpell(SPELL_HEAL,oCreature) && total_props <= 7)
-    {
-        iProp = ItemPropertyCastSpell(IP_CONST_CASTSPELL_HEAL_11,IP_CONST_CASTSPELL_NUMUSES_1_USE_PER_DAY);
-        AddItemProperty(DURATION_TYPE_PERMANENT,iProp,oItem);
-        total_props++;
-    }*/
-/*    if (GetHasSpell(SPELL_FINGER_OF_DEATH,oCreature) && total_props <= 7)
-    {
-        iProp = ItemPropertyCastSpell(IP_CONST_CASTSPELL_FINGER_OF_DEATH_13,IP_CONST_CASTSPELL_NUMUSES_3_USES_PER_DAY);
-        AddItemProperty(DURATION_TYPE_PERMANENT,iProp,oItem);
-        total_props++;
-    }*/
-/*    if (GetHasSpell(SPELL_FIRE_STORM,oCreature) && total_props <= 7)
-    {
-        iProp = ItemPropertyCastSpell(IP_CONST_CASTSPELL_FIRE_STORM_13,IP_CONST_CASTSPELL_NUMUSES_2_USES_PER_DAY);
-        AddItemProperty(DURATION_TYPE_PERMANENT,iProp,oItem);
-        total_props++;
-    }*/
-/*    if (GetHasSpell(SPELL_HAMMER_OF_THE_GODS,oCreature) && total_props <= 7)
-    {
-        iProp = ItemPropertyCastSpell(IP_CONST_CASTSPELL_HAMMER_OF_THE_GODS_12,IP_CONST_CASTSPELL_NUMUSES_3_USES_PER_DAY);
-        AddItemProperty(DURATION_TYPE_PERMANENT,iProp,oItem);
-        total_props++;
-    }*/
-/*    if (GetHasSpell(SPELL_GREATER_DISPELLING,oCreature) && total_props <= 7)
-    {
-        iProp = ItemPropertyCastSpell(IP_CONST_CASTSPELL_GREATER_DISPELLING_7,IP_CONST_CASTSPELL_NUMUSES_2_USES_PER_DAY);
-        AddItemProperty(DURATION_TYPE_PERMANENT,iProp,oItem);
-        total_props++;
-    }*/
-/*    if (GetHasSpell(SPELL_DISPEL_MAGIC,oCreature) && total_props <= 7)
-    {
-        iProp = ItemPropertyCastSpell(IP_CONST_CASTSPELL_DISPEL_MAGIC_10,IP_CONST_CASTSPELL_NUMUSES_3_USES_PER_DAY);
-        AddItemProperty(DURATION_TYPE_PERMANENT,iProp,oItem);
-        total_props++;
-    }*/
-/*    if (GetHasSpell(SPELL_HARM,oCreature) && total_props <= 7)
-    {
-        iProp = ItemPropertyCastSpell(IP_CONST_CASTSPELL_HARM_11,IP_CONST_CASTSPELL_NUMUSES_3_USES_PER_DAY);
-        AddItemProperty(DURATION_TYPE_PERMANENT,iProp,oItem);
-        total_props++;
-    }*/
-}
-
-
-
-
-// Remove "dangling" aura effects on trueform shift
-// Now only removes things it should remove (i.e., auras)
-void RemoveAuraEffect( object oPC )
-{
-    if ( GetHasSpellEffect(SPELLABILITY_AURA_BLINDING, oPC) )
-        RemoveSpellEffects( SPELLABILITY_AURA_BLINDING, oPC, oPC );
-    if ( GetHasSpellEffect(SPELLABILITY_AURA_COLD, oPC) )
-        RemoveSpellEffects( SPELLABILITY_AURA_COLD, oPC, oPC );
-    if ( GetHasSpellEffect(SPELLABILITY_AURA_ELECTRICITY, oPC) )
-        RemoveSpellEffects( SPELLABILITY_AURA_ELECTRICITY, oPC, oPC );
-    if ( GetHasSpellEffect(SPELLABILITY_AURA_FEAR, oPC) )
-        RemoveSpellEffects( SPELLABILITY_AURA_FEAR, oPC, oPC );
-    if ( GetHasSpellEffect(SPELLABILITY_AURA_FIRE, oPC) )
-        RemoveSpellEffects( SPELLABILITY_AURA_FIRE, oPC, oPC );
-    if ( GetHasSpellEffect(SPELLABILITY_AURA_MENACE, oPC) )
-        RemoveSpellEffects( SPELLABILITY_AURA_MENACE, oPC, oPC );
-    if ( GetHasSpellEffect(SPELLABILITY_AURA_PROTECTION, oPC) )
-        RemoveSpellEffects( SPELLABILITY_AURA_PROTECTION, oPC, oPC );
-    if ( GetHasSpellEffect(SPELLABILITY_AURA_STUN, oPC) )
-        RemoveSpellEffects( SPELLABILITY_AURA_STUN, oPC, oPC );
-    if ( GetHasSpellEffect(SPELLABILITY_AURA_UNEARTHLY_VISAGE, oPC) )
-        RemoveSpellEffects( SPELLABILITY_AURA_UNEARTHLY_VISAGE, oPC, oPC );
-    if ( GetHasSpellEffect(SPELLABILITY_AURA_UNNATURAL, oPC) )
-        RemoveSpellEffects( SPELLABILITY_AURA_UNNATURAL, oPC, oPC );
-    if ( GetHasSpellEffect(SPELLABILITY_DRAGON_FEAR, oPC) )
-        RemoveSpellEffects( SPELLABILITY_DRAGON_FEAR, oPC, oPC );
-}
-
-
-
-
-void DeleteFromKnownArray(int nIndex, object oPC)
-{
-    object oMimicForms = GetItemPossessedBy( oPC, "soul_prism" );
-    int num_creatures = GetLocalInt( oMimicForms, "num_creatures" );
-    int i;
-
-    for ( i=nIndex; i<(num_creatures-1); i++ )
-    {
-        SetLocalArrayString( oMimicForms, "shift_choice", i,GetLocalArrayString( oMimicForms, "shift_choice", i+1 ));
-        SetLocalArrayString( oMimicForms, "shift_choice_name", i,GetLocalArrayString( oMimicForms, "shift_choice_name", i+1 ));
-    }
-    SetLocalInt( oMimicForms, "num_creatures", num_creatures-1 );
-}
-
-
-
-
-int GetTrueForm(object oPC)
-{
-    int nRace = GetRacialType(OBJECT_SELF);
-    int nPCForm;
-    nPCForm = StringToInt(Get2DACache("racialtypes", "Appearance", nRace));
-//      switch (nRace)
-//      {
-//      case RACIAL_TYPE_DWARF:
-//          nPCForm = APPEARANCE_TYPE_DWARF;
-//          break;
-//      case RACIAL_TYPE_ELF:
-//          nPCForm = APPEARANCE_TYPE_ELF;
-//          break;
-//      case RACIAL_TYPE_GNOME:
-//          nPCForm = APPEARANCE_TYPE_GNOME;
-//          break;
-//      case RACIAL_TYPE_HALFELF:
-//          nPCForm = APPEARANCE_TYPE_HALF_ELF;
-//          break;
-//      case RACIAL_TYPE_HALFLING:
-//          nPCForm = APPEARANCE_TYPE_HALFLING;
-//          break;
-//      case RACIAL_TYPE_HALFORC:
-//          nPCForm = APPEARANCE_TYPE_HALF_ORC;
-//          break;
-//      case RACIAL_TYPE_HUMAN:
-//          nPCForm = APPEARANCE_TYPE_HUMAN;
-//          break;
-//      }
-//  }
-    return nPCForm;
-}
-
-
-
-
-
Index: include/prc_add_spell_dc.nss
===================================================================
RCS file: /cvsroot/nwnprc/nwnprc/include/prc_add_spell_dc.nss,v
retrieving revision 1.43
retrieving revision 1.44
diff -u -r1.43 -r1.44
--- include/prc_add_spell_dc.nss	4 Dec 2006 18:11:20 -0000	1.43
+++ include/prc_add_spell_dc.nss	4 Dec 2006 22:15:44 -0000	1.44
@@ -359,6 +359,12 @@
     return nAdjust;
 }

+// Soul Eater's 10th level Soul Power ability. If they've drained in the last 24h, they get +2 to DCs
+int SoulEaterSoulPower(object oCaster)
+{
+    return (GetLocalInt(oCaster, "PRC_SoulEater_HasDrained") && GetLevelByClass(CLASS_TYPE_SOUL_EATER, oCaster) >= 10) ? 2 : 0;
+}
+

 int PRCGetSaveDC(object oTarget, object oCaster, int nSpellID = -1)
 {
@@ -531,6 +537,7 @@
     nDC += BloodMagusBloodComponent(oCaster);
     nDC += RunecasterRunePowerDC(oCaster);
     nDC += UnheavenedAdjustment(oTarget, oCaster);
+    nDC += SoulEaterSoulPower(oCaster);
     nDC += GetLocalInt(oCaster, PRC_DC_ADJUSTMENT);//this is for builder use
     return nDC;

Index: include/prc_feat_const.nss
===================================================================
RCS file: /cvsroot/nwnprc/nwnprc/include/prc_feat_const.nss,v
retrieving revision 1.197
retrieving revision 1.198
diff -u -r1.197 -r1.198
--- include/prc_feat_const.nss	10 Oct 2006 15:44:16 -0000	1.197
+++ include/prc_feat_const.nss	4 Dec 2006 22:15:44 -0000	1.198
@@ -1510,6 +1510,11 @@
 const int FEAT_ALAG_SILVERBEARD                  = 3993;
 const int FEAT_ALAG_ROCKBURST                    = 3994;

+// Soul Eater
+const int FEAT_SLEAT_ENERGY_DRAIN                = 3995;
+const int FEAT_SLEAT_SBLAST                      = 3996;
+const int FEAT_SLEAT_SRADIANCE                   = 3997;
+
 // Combat Medic
 const int FEAT_HEALING_KICKER_1                  = 3540;
 const int FEAT_HEALING_KICKER_2                  = 3541;
@@ -2166,7 +2171,7 @@
  const int FEAT_EF_SPEED                       = 4395;
  const int FEAT_EF_EXTRA_STUNNING              = 4396;
  const int FEAT_EF_FIST_OF_ENERGY_BURST        = 4397;
-
+
 /*//////////////////////////////////////////////////
 //////////////// TRUENAMING ////////////////////////
 //////////////////////////////////////////////////*/
Index: include/prc_inc_switch.nss
===================================================================
RCS file: /cvsroot/nwnprc/nwnprc/include/prc_inc_switch.nss,v
retrieving revision 1.160
retrieving revision 1.161
diff -u -r1.160 -r1.161
--- include/prc_inc_switch.nss	14 Nov 2006 23:07:15 -0000	1.160
+++ include/prc_inc_switch.nss	4 Dec 2006 22:15:44 -0000	1.161
@@ -444,6 +444,14 @@
  */
 const string PRC_CWSAMURAI_NO_HEIRLOOM_DAISHO = "PRC_CWSAMURAI_NO_HEIRLOOM_DAISHO";

+/**
+ * Determines the number of wight henchmen a Soul Eater can have via their Soul Slave
+ * class ability.
+ * Default: 4
+ * Special: Due to it not being possible to differentiate between a set 0 and an unset 0,
+ *          to prevent any wight henchmen, set the switch to -1. (0 counts as the default)
+ */
+const string PRC_SOUL_EATER_MAX_SLAVES       = "PRC_SOUL_EATER_MAX_SLAVES";


 /******************************************************************************\
Index: include/psi_inc_psifunc.nss
===================================================================
RCS file: /cvsroot/nwnprc/nwnprc/include/psi_inc_psifunc.nss,v
retrieving revision 1.68
retrieving revision 1.69
diff -u -r1.68 -r1.69
--- include/psi_inc_psifunc.nss	22 Aug 2006 13:02:11 -0000	1.68
+++ include/psi_inc_psifunc.nss	4 Dec 2006 22:15:44 -0000	1.69
@@ -415,6 +415,10 @@
         }
     }

+    /// Other DC adjustments
+    nDC += (GetLocalInt(oManifester, "PRC_SoulEater_HasDrained") && GetLevelByClass(CLASS_TYPE_SOUL_EATER, oManifester) >= 10) ? 2 : 0;
+
+
     return nDC;
 }

Index: others/soul_box.uti
===================================================================
RCS file: others/soul_box.uti
diff -N others/soul_box.uti
Binary files /tmp/cvs.bdICyb and /dev/null differ
Index: others/soul_options.dlg
===================================================================
RCS file: others/soul_options.dlg
diff -N others/soul_options.dlg
Binary files /tmp/cvs.vfqebC and /dev/null differ
Index: others/soul_prism.uti
===================================================================
RCS file: others/soul_prism.uti
diff -N others/soul_prism.uti
Binary files /tmp/cvs.ckA0N2 and /dev/null differ
Index: scripts/prc_domain_skin.nss
===================================================================
RCS file: /cvsroot/nwnprc/nwnprc/scripts/prc_domain_skin.nss,v
retrieving revision 1.12
retrieving revision 1.13
diff -u -r1.12 -r1.13
--- scripts/prc_domain_skin.nss	15 Oct 2006 20:35:56 -0000	1.12
+++ scripts/prc_domain_skin.nss	4 Dec 2006 22:18:14 -0000	1.13
@@ -79,10 +79,10 @@
     	SetCompositeBonus(oSkin, "SpellDomainPowerSpell", 2, ITEM_PROPERTY_SKILL_BONUS, SKILL_SPELLCRAFT);
     }
     // Electrical resist 5
-    if (GetHasFeat(FEAT_DOMAIN_POWER_STORM, oPC))         IPSafeAddItemProperty(oSkin, PRCItemPropertyBonusFeat(IP_CONST_FEAT_STORM_DOMAIN      ), 0.0f, X2_IP_ADDPROP_POLICY_KEEP_EXISTING, FALSE, FALSE);
+    if (GetHasFeat(FEAT_DOMAIN_POWER_STORM, oPC))
     {
 	if(GetLocalInt(oSkin, "StormDomainPower")) return;
-
+
 	RemoveSpecificProperty(oSkin, ITEM_PROPERTY_DAMAGE_RESISTANCE, IP_CONST_DAMAGETYPE_ELECTRICAL, IP_CONST_DAMAGERESIST_5);
 	AddItemProperty(DURATION_TYPE_PERMANENT,ItemPropertyDamageResistance(IP_CONST_DAMAGETYPE_ELECTRICAL, IP_CONST_DAMAGERESIST_5),oSkin);
 	SetLocalInt(oSkin, "StormDomainPower",TRUE);
Index: scripts/prc_sleat_edrain.nss
===================================================================
RCS file: scripts/prc_sleat_edrain.nss
diff -N scripts/prc_sleat_edrain.nss
--- /dev/null	1 Jan 1970 00:00:00 -0000
+++ scripts/prc_sleat_edrain.nss	4 Dec 2006 22:15:45 -0000	1.1
@@ -0,0 +1,244 @@
+//::///////////////////////////////////////////////
+//:: Soul Eater: Energy Drain
+//:: prc_sleat_edrain
+//:://////////////////////////////////////////////
+/** @file
+    Implements all of the Soul Eater's Energy Drain
+    -related abilities.
+
+    Energy Drain (Su): A soul eater gains the ability to drain energy, bestowing
+     negative levels upon it's victims. Beginning at 1st level, the touch of a
+     soul eater bestows one negative level on it's target. At 7th level, the
+     soul eater bestows two negative levels with a touch.
+
+    Soul Strength (Su): When a 2nd-level soul eater uses it's energy drain
+     ability, it gains a +4 bonus to Strenth for 24 hours.
+
+    Soul Enhancement (Su): When a 4th-level soul eater uses it's energy drain
+     ability, it gains a +2 enhancement bonus on all saving throws and skill
+     checks for 24 hours.
+
+    Soul Endurance (Su): When a 5nd-level soul eater uses it's energy drain
+     ability, it gains a +4 bonus to Constitution for 24 hours.
+
+    Soul Radiance (Su): If a 6th-level soul eater completely drains a creature
+     of energy, it may adopt the creature's soul radiance, taking the victim's
+     form, appearance, and abilities for 24 hours.
+
+    Soul Agility (Su): When a 8th-level soul eater uses it's energy drain
+     ability, it gains a +4 bonus to Dexterity for 24 hours.
+
+    Soul Slave (Su): If a 9th-level soul eater completely drains a creature of
+     energy, the victim becomes a wight under the command of the soul eater.
+
+    Soul Power (Su): After a 10th-level soul eater has drained energy, all
+     spell-like and supernatural abilities gain a +2 profane bonus to their
+     saving throw DC for 24 hours. Further, it may use it's Soul Blast ability
+     up to two times instead of one during that 24-hour period.
+
+    @date   Modified - 04.12.2006
+*/
+//:://////////////////////////////////////////////
+//:://////////////////////////////////////////////
+
+#include "prc_alterations"
+#include "prc_inc_shifting"
+
+
+//////////////////////////////////////////////////
+/*             Function prototypes              */
+//////////////////////////////////////////////////
+
+void DoEnergyDrain(object oEater, object oTarget, int nDamage);
+void DoDeathDependent(object oEater, object oTarget, string sResRef, string sName);
+void LevelUpWight(int nTargetLevel, object oCreature);
+void IncrementMarker(object oEater);
+void DecrementMarker(object oEater);
+
+
+//////////////////////////////////////////////////
+/*             Function definitions             */
+//////////////////////////////////////////////////
+
+void main()
+{
+    object oEater  = OBJECT_SELF;
+    object oTarget = PRCGetSpellTargetObject();
+    effect eImpact = EffectVisualEffect(VFX_IMP_REDUCE_ABILITY_SCORE);
+    int nDrain     = GetLevelByClass(CLASS_TYPE_SOUL_EATER, oEater) < 7 ? 1 : 2;
+
+    // Sanity check - can't affect self or dead stuff. Also, check PvP limits
+    if(oTarget == oEater  ||
+       GetIsDead(oTarget) ||
+       !spellsIsTarget(oTarget, SPELL_TARGET_STANDARDHOSTILE, oEater)
+       )
+        return;
+
+    // Let the target's AI know about hostile action
+    SignalEvent(oTarget, EventSpellCastAt(oEater, GetSpellId(), TRUE));
+
+    // Melee touch attack to actually do anything
+    if(PRCDoMeleeTouchAttack(oTarget, TRUE, oEater))
+    {
+        ApplyEffectToObject(DURATION_TYPE_INSTANT, eImpact, oTarget);
+        DoEnergyDrain(oEater, oTarget, nDrain);
+    }
+}
+
+void DoEnergyDrain(object oEater, object oTarget,int nDamage)
+{
+    // Immunity prevents anything from actually happening
+    if(!GetIsImmune(oTarget, IMMUNITY_TYPE_NEGATIVE_LEVEL))
+    {
+        // Apply the actual drain
+        effect eDrain = SupernaturalEffect(EffectNegativeLevel(nDamage));
+        ApplyEffectToObject(DURATION_TYPE_PERMANENT, eDrain, oTarget);
+
+        // Update marker
+        IncrementMarker(oEater);
+        DelayCommand(HoursToSeconds(24), DecrementMarker(oEater));
+
+
+        /// Soul X side effects
+        // Clear out old effects
+        RemoveSpellEffects(GetSpellId(), oEater, oEater);
+
+        // Generate new effects
+        int nClassLevel    = GetLevelByClass(CLASS_TYPE_SOUL_EATER, oEater);
+        effect eSideEffect = EffectVisualEffect(VFX_DUR_CESSATE_POSITIVE);
+
+        // Soul Strength
+        if(nClassLevel >= 2)
+        {
+            eSideEffect = EffectLinkEffects(eSideEffect, EffectAbilityIncrease(ABILITY_STRENGTH, 4));
+        }
+
+        // Soul Enchancement
+        if(nClassLevel >= 4)
+        {
+            eSideEffect = EffectLinkEffects(eSideEffect, EffectSavingThrowIncrease(SAVING_THROW_TYPE_ALL, 2));
+            eSideEffect = EffectLinkEffects(eSideEffect, EffectSkillIncrease(SKILL_ALL_SKILLS, 2));
+        }
+
+        // Soul Endurance
+        if(nClassLevel >= 5)
+        {
+            eSideEffect = EffectLinkEffects(eSideEffect, EffectAbilityIncrease(ABILITY_CONSTITUTION, 4));
+        }
+
+        // Soul Agililty
+        if(nClassLevel >= 8)
+        {
+            eSideEffect = EffectLinkEffects(eSideEffect, EffectAbilityIncrease(ABILITY_DEXTERITY, 4));
+        }
+
+        // Apply the gathered side effects. All the abilities are supernatural and last 24h
+        ApplyEffectToObject(DURATION_TYPE_TEMPORARY,
+                            SupernaturalEffect(eSideEffect),
+                            oEater,
+                            HoursToSeconds(24)
+                            );
+
+
+        // Soul Power
+        // Rebalanced to give +2 to all DCs and just double Soul Blast uses, due to it not being sanely
+        // possible to find out all use-limited abilities one may have
+        if(nClassLevel >= 10)
+        {
+            // +2 DCs
+            // Handled based on "PRC_SoulEater_HasDrained" and class level in the relevant places
+
+            // 2x special abilities uses
+            //IncrementRemainingFeatUses(oEater, FEAT_SLEAT_SBLAST); // Handled via 2da instead
+        }
+
+
+
+        // Soul Radiance and Soul Slave work only if the target was killed.
+        // And death by level loss only gets calculated once the script has terminated.
+        // Therefore, delay by 0.0
+        DelayCommand(0.0f, DoDeathDependent(oEater, oTarget, GetResRef(oTarget), GetName(oTarget)));
+    }
+    else
+        FloatingTextStrRefOnCreature(16832115, oEater, FALSE); // "Target is immune to negative levels"
+}
+
+void DoDeathDependent(object oEater, object oTarget, string sResRef, string sName)
+{
+    // For anything to happen here, the target needs to be dead. And if it is, due to having only been delayed by 0
+    // we know that the only reason for it's death can have been level drain
+    if(GetIsDead(oTarget))
+    {
+        // Soul Radiance
+        if(GetLevelByClass(CLASS_TYPE_SOUL_EATER, oEater) >= 6)
+        {
+            // If the user has toggled Soul Radiance active, use the shifting code to turn into the target
+            if(GetLocalInt(oEater, "PRC_SoulEater_SoulRadianceActive"))
+            {
+                StoreCurrentAppearanceAsTrueAppearance(oEater, TRUE);
+                ShiftIntoCreature(oEater, SHIFTER_TYPE_SOULEATER, oTarget, TRUE); // Gain special abilities
+            }
+        }
+
+
+        // Soul Slave
+        if(GetLevelByClass(CLASS_TYPE_SOUL_EATER, oEater) >= 9)
+        {
+            int nMaxHenchmen = GetMaxHenchmen();
+            int nNumSlaves   = 0;
+            int nMaxSlaves   = GetPRCSwitch(PRC_SOUL_EATER_MAX_SLAVES);
+            effect eSummon   = EffectVisualEffect(VFX_FNF_SUMMON_UNDEAD);
+
+            // Special switch values handling
+            if(nMaxSlaves == 0 ) nMaxSlaves = 4;
+            if(nMaxSlaves == -1) nMaxSlaves = 0;
+
+            // Determine current number of slaves
+            int i = 1;
+            object oHench;
+            do {
+                oHench = GetAssociate(ASSOCIATE_TYPE_HENCHMAN, oEater, i++);
+                if(GetResRef(oHench) == "soul_wight_test")
+                    nNumSlaves++;
+            } while(GetIsObjectValid(oHench));
+
+            // If we can add more wights, do so. Spawn the wight with some VFX at the corpse's location
+            if(nNumSlaves < nMaxSlaves)
+            {
+                location lSpawn = GetLocation(oTarget);
+
+                ApplyEffectAtLocation(DURATION_TYPE_INSTANT, eSummon, lSpawn);
+
+                object oSlave = CreateObject(OBJECT_TYPE_CREATURE, "soul_wight_test", lSpawn);
+                if(GetIsObjectValid(oSlave))
+                {
+                    SetMaxHenchmen(max(nMaxHenchmen, i)); // Temporarily set the number of max henchmen high enough that we can add another
+                    AddHenchman(oEater, oSlave);
+                    SetMaxHenchmen(nMaxHenchmen);
+
+                    // Level up the wight a bit to make it usefull. Needs to be delayed a bit to let the object creation routines happen first
+                    DelayCommand(3.0f, LevelUpWight(GetHitDice(oEater) - 3, oSlave));
+                }
+                else if(DEBUG)
+                    DoDebug("prc_sleat_edrain: ERROR: Failed to create wight at location " + DebugLocation2Str(lSpawn));
+            }
+        }
+    }
+}
+
+void LevelUpWight(int nTargetLevel, object oCreature)
+{
+    int n;
+    for(n = 1; n < nTargetLevel; n++)
+        LevelUpHenchman(oCreature, CLASS_TYPE_INVALID, TRUE);
+}
+
+void IncrementMarker(object oEater)
+{
+    SetLocalInt(oEater, "PRC_SoulEater_HasDrained", GetLocalInt(oEater, "PRC_SoulEater_HasDrained") + 1);
+}
+
+void DecrementMarker(object oEater)
+{
+    SetLocalInt(oEater, "PRC_SoulEater_HasDrained", GetLocalInt(oEater, "PRC_SoulEater_HasDrained") - 1);
+}
Index: scripts/prc_sleat_sblast.nss
===================================================================
RCS file: scripts/prc_sleat_sblast.nss
diff -N scripts/prc_sleat_sblast.nss
--- /dev/null	1 Jan 1970 00:00:00 -0000
+++ scripts/prc_sleat_sblast.nss	4 Dec 2006 22:15:45 -0000	1.1
@@ -0,0 +1,63 @@
+//::///////////////////////////////////////////////
+//:: Soul Eater: Soul Blast
+//:: prc_sleat_sblast
+//:://////////////////////////////////////////////
+/** @file
+    Soul Blast (Su): A 3rd-level may project a 100-foot ray of force that deals
+     1d6 points of damage per soul eater level against one target. The target is
+     allowed a Reflex saving throw to avoid the damage (DC 10 + class level
+     + Cha bonus). This supernatural ability can be used once per day, and only
+     on a day when the soul eater has drained levels.
+
+    @date   Modified - 04.12.2006
+*/
+//:://////////////////////////////////////////////
+//:://////////////////////////////////////////////
+
+#include "prc_alterations"
+#include "prc_class_const"
+
+
+void main()
+{
+    object oEater   = OBJECT_SELF;
+    object oTarget  = PRCGetSpellTargetObject();
+    int nClassLevel = GetLevelByClass(CLASS_TYPE_SOUL_EATER, oEater);
+    int nDC         = 10 + nClassLevel + GetAbilityModifier(ABILITY_CHARISMA, oEater);
+        nDC        += nClassLevel >= 10 ? 2 : 0; // Soul Power. We don't need to check whether the SE has drained today here, since if it hasn't, the Soul Blast won't happen anyway
+
+    // PvP targeting limitations
+    if(spellsIsTarget(oTarget, SPELL_TARGET_STANDARDHOSTILE, oEater))
+    {
+        // Make sure the SE has drained today
+        if(GetLocalInt(oEater, "PRC_SoulEater_HasDrained"))
+        {
+            // Let AI know about hostilities
+            SignalEvent(oTarget, EventSpellCastAt(oEater, GetSpellId(), TRUE));
+
+            // Fire the ray
+            ApplyEffectToObject(DURATION_TYPE_TEMPORARY, EffectBeam(VFX_BEAM_EVIL, oEater, BODY_NODE_HAND), oTarget, 3.0f);
+
+            // Roll damage and do Reflex save
+            int nDamage = d6(nClassLevel);
+            nDamage = PRCGetReflexAdjustedDamage(nDamage, oTarget, nDC, SAVING_THROW_TYPE_NONE);
+
+            if(nDamage > 0) // Didn't evade
+            {
+                effect eImpact = EffectVisualEffect(VFX_IMP_PULSE_NEGATIVE);
+                effect eDamage = EffectDamage(nDamage, DAMAGE_TYPE_MAGICAL);
+
+                SPApplyEffectToObject(DURATION_TYPE_INSTANT, EffectLinkEffects(eDamage, eImpact), oTarget);
+            }
+        }
+        // Refund unused feat use, whine
+        else
+        {
+            FloatingTextStrRefOnCreature(16832114, oEater, FALSE); // "Target is immune to negative levels"
+            IncrementRemainingFeatUses(oEater, FEAT_SLEAT_SBLAST);
+        }
+    }
+    // Refund unused feat use
+    else
+        IncrementRemainingFeatUses(oEater, FEAT_SLEAT_SBLAST);
+}
Index: scripts/prc_sleat_sradia.nss
===================================================================
RCS file: scripts/prc_sleat_sradia.nss
diff -N scripts/prc_sleat_sradia.nss
--- /dev/null	1 Jan 1970 00:00:00 -0000
+++ scripts/prc_sleat_sradia.nss	4 Dec 2006 22:15:45 -0000	1.1
@@ -0,0 +1,30 @@
+//::///////////////////////////////////////////////
+//:: Soul Eater: Soul Radiance toggle
+//:: prc_sleat_sradia
+//:://////////////////////////////////////////////
+/** @file
+    Soul Radiance (Su): If a 6th-level soul eater completely drains a creature
+     of energy, it may adopt the creature's soul radiance, taking the victim's
+     form, appearance, and abilities for 24 hours.
+
+
+    This script just toggles a switch local that determines
+    whether to apply Soul Radiance effects upon killing something
+    with Energy Drain
+
+    @author Ornedan
+    @date   Created - 04.12.2006
+*/
+//:://////////////////////////////////////////////
+//:://////////////////////////////////////////////
+
+
+const string sVarName = "PRC_SoulEater_SoulRadianceActive";
+
+void main()
+{
+    object oPC = OBJECT_SELF;
+
+    SetLocalInt(oPC, sVarName, !GetLocalInt(oPC, sVarName));
+    FloatingTextStringOnCreature(GetStringByStrRef(16832123/*Soul Radiance*/) + " " + (GetLocalInt(oPC, sVarName) ? GetStringByStrRef(63798/*Activated*/):GetStringByStrRef(63799/*Deactivated*/)), oPC, FALSE);
+}
\ No newline at end of file
Index: scripts/soul_blast.nss
===================================================================
RCS file: scripts/soul_blast.nss
diff -N scripts/soul_blast.nss
--- scripts/soul_blast.nss	5 Sep 2005 21:10:46 -0000	1.3
+++ /dev/null	1 Jan 1970 00:00:00 -0000
@@ -1,45 +0,0 @@
-//::///////////////////////////////////////////////
-//:: Fireball
-//:: NW_S0_Fireball
-//:: Copyright (c) 2001 Bioware Corp.
-//:://////////////////////////////////////////////
-/*
-// A fireball is a burst of flame that detonates with
-// a low roar and inflicts 1d6 points of damage per
-// caster level (maximum of 10d6) to all creatures
-// within the area. Unattended objects also take
-// damage. The explosion creates almost no pressure.
-*/
-//:://////////////////////////////////////////////
-//:: Created By: Noel Borstad
-//:: Created On: Oct 18 , 2000
-//:://////////////////////////////////////////////
-//:: Last Updated By: Preston Watamaniuk, On: April 6, 2001
-//:: Last Updated By: AidanScanlan, On: April 11, 2001
-//:: Last Updated By: Preston Watamaniuk, On: May 25, 2001
-
-//:: modified by mr_bumpkin Dec 4, 2003 for PRC stuff
-#include "prc_alterations"
-#include "prc_class_const"
-
-void main()
-{
-    //Declare major variables
-    object oCaster = OBJECT_SELF;
-    int nClassLevel = GetLevelByClass(CLASS_TYPE_SOUL_EATER, oCaster);
-    int nDC = 10 + nClassLevel + GetAbilityModifier(ABILITY_CHARISMA, oCaster);
-    effect eVis = EffectVisualEffect(VFX_IMP_PULSE_NEGATIVE);
-    object oTarget = PRCGetSpellTargetObject();
-
-    SignalEvent(oTarget, EventSpellCastAt(OBJECT_SELF, GetSpellId()));
-    int nDamage = d6(nClassLevel);
-    nDamage = PRCGetReflexAdjustedDamage(nDamage, oTarget, nDC, SAVING_THROW_TYPE_NONE);
-    effect eDam = EffectDamage(nDamage, DAMAGE_TYPE_MAGICAL);
-    if (nDamage > 0)
-    {
-        SPApplyEffectToObject(DURATION_TYPE_INSTANT, eVis, oTarget);
-        SPApplyEffectToObject(DURATION_TYPE_INSTANT, eDam, oTarget);
-    }
-
-}
-
Index: scripts/soul_chose01.nss
===================================================================
RCS file: scripts/soul_chose01.nss
diff -N scripts/soul_chose01.nss
--- scripts/soul_chose01.nss	12 Jul 2005 00:22:22 -0000	1.1
+++ /dev/null	1 Jan 1970 00:00:00 -0000
@@ -1,13 +0,0 @@
-// this script runs when the player selects the form 1 from the list to shift into
-
-#include "nw_i0_generic"
-#include "inc_soul_shift"
-
-void main()
-{
-    object oPC = GetPCSpeaker();
-    int nStartIndex = GetLocalInt(oPC,"ShifterListIndex");
-    // add index to the start
-    nStartIndex+=0;
-    ShiftFromKnownArray(nStartIndex,TRUE, oPC);
-}
Index: scripts/soul_chose02.nss
===================================================================
RCS file: scripts/soul_chose02.nss
diff -N scripts/soul_chose02.nss
--- scripts/soul_chose02.nss	12 Jul 2005 00:22:22 -0000	1.1
+++ /dev/null	1 Jan 1970 00:00:00 -0000
@@ -1,13 +0,0 @@
-// this script runs when the player selects the form 2 from the list to shift into
-
-#include "nw_i0_generic"
-#include "inc_soul_shift"
-
-void main()
-{
-    object oPC = GetPCSpeaker();
-    int nStartIndex = GetLocalInt(oPC,"ShifterListIndex");
-    // add index to the start
-    nStartIndex+=1;
-    ShiftFromKnownArray(nStartIndex,TRUE,oPC);
-}
Index: scripts/soul_chose03.nss
===================================================================
RCS file: scripts/soul_chose03.nss
diff -N scripts/soul_chose03.nss
--- scripts/soul_chose03.nss	12 Jul 2005 00:22:22 -0000	1.1
+++ /dev/null	1 Jan 1970 00:00:00 -0000
@@ -1,13 +0,0 @@
-// this script runs when the player selects the form 3 from the list to shift into
-
-#include "nw_i0_generic"
-#include "inc_soul_shift"
-
-void main()
-{
-    object oPC = GetPCSpeaker();
-    int nStartIndex = GetLocalInt(oPC,"ShifterListIndex");
-    // add index to the start
-    nStartIndex+=2;
-    ShiftFromKnownArray(nStartIndex,TRUE,oPC);
-}
Index: scripts/soul_chose04.nss
===================================================================
RCS file: scripts/soul_chose04.nss
diff -N scripts/soul_chose04.nss
--- scripts/soul_chose04.nss	12 Jul 2005 00:22:22 -0000	1.1
+++ /dev/null	1 Jan 1970 00:00:00 -0000
@@ -1,13 +0,0 @@
-// this script runs when the player selects the form 4 from the list to shift into
-
-#include "nw_i0_generic"
-#include "inc_soul_shift"
-
-void main()
-{
-    object oPC = GetPCSpeaker();
-    int nStartIndex = GetLocalInt(oPC,"ShifterListIndex");
-    // add index to the start
-    nStartIndex+=3;
-    ShiftFromKnownArray(nStartIndex,TRUE,oPC);
-}
Index: scripts/soul_chose05.nss
===================================================================
RCS file: scripts/soul_chose05.nss
diff -N scripts/soul_chose05.nss
--- scripts/soul_chose05.nss	12 Jul 2005 00:22:22 -0000	1.1
+++ /dev/null	1 Jan 1970 00:00:00 -0000
@@ -1,13 +0,0 @@
-// this script runs when the player selects the form 5 from the list to shift into
-
-#include "nw_i0_generic"
-#include "inc_soul_shift"
-
-void main()
-{
-    object oPC = GetPCSpeaker();
-    int nStartIndex = GetLocalInt(oPC,"ShifterListIndex");
-    // add index to the start
-    nStartIndex+=4;
-    ShiftFromKnownArray(nStartIndex,TRUE,oPC);
-}
Index: scripts/soul_chose06.nss
===================================================================
RCS file: scripts/soul_chose06.nss
diff -N scripts/soul_chose06.nss
--- scripts/soul_chose06.nss	12 Jul 2005 00:22:22 -0000	1.1
+++ /dev/null	1 Jan 1970 00:00:00 -0000
@@ -1,13 +0,0 @@
-// this script runs when the player selects the form 6 from the list to shift into
-
-#include "nw_i0_generic"
-#include "inc_soul_shift"
-
-void main()
-{
-    object oPC = GetPCSpeaker();
-    int nStartIndex = GetLocalInt(oPC,"ShifterListIndex");
-    // add index to the start
-    nStartIndex+=5;
-    ShiftFromKnownArray(nStartIndex,TRUE,oPC);
-}
Index: scripts/soul_chose07.nss
===================================================================
RCS file: scripts/soul_chose07.nss
diff -N scripts/soul_chose07.nss
--- scripts/soul_chose07.nss	12 Jul 2005 00:22:22 -0000	1.1
+++ /dev/null	1 Jan 1970 00:00:00 -0000
@@ -1,13 +0,0 @@
-// this script runs when the player selects the form 7 from the list to shift into
-
-#include "nw_i0_generic"
-#include "inc_soul_shift"
-
-void main()
-{
-    object oPC = GetPCSpeaker();
-    int nStartIndex = GetLocalInt(oPC,"ShifterListIndex");
-    // add index to the start
-    nStartIndex+=6;
-    ShiftFromKnownArray(nStartIndex,TRUE,oPC);
-}
Index: scripts/soul_chose08.nss
===================================================================
RCS file: scripts/soul_chose08.nss
diff -N scripts/soul_chose08.nss
--- scripts/soul_chose08.nss	12 Jul 2005 00:22:22 -0000	1.1
+++ /dev/null	1 Jan 1970 00:00:00 -0000
@@ -1,14 +0,0 @@
-// this script runs when the player selects the form 8 from the list to shift into
-
-#include "nw_i0_generic"
-#include "inc_soul_shift"
-
-void main()
-{
-    object oPC = GetPCSpeaker();
-    int nStartIndex = GetLocalInt(oPC,"ShifterListIndex");
-    // add index to the start
-    nStartIndex+=7;
-    ShiftFromKnownArray(nStartIndex,TRUE,oPC);
-
-}
Index: scripts/soul_chose09.nss
===================================================================
RCS file: scripts/soul_chose09.nss
diff -N scripts/soul_chose09.nss
--- scripts/soul_chose09.nss	12 Jul 2005 00:22:22 -0000	1.1
+++ /dev/null	1 Jan 1970 00:00:00 -0000
@@ -1,13 +0,0 @@
-// this script runs when the player selects the form 9 from the list to shift into
-
-#include "nw_i0_generic"
-#include "inc_soul_shift"
-
-void main()
-{
-    object oPC = GetPCSpeaker();
-    int nStartIndex = GetLocalInt(oPC,"ShifterListIndex");
-    // add index to the start
-    nStartIndex+=8;
-    ShiftFromKnownArray(nStartIndex,TRUE,oPC);
-}
Index: scripts/soul_chose10.nss
===================================================================
RCS file: scripts/soul_chose10.nss
diff -N scripts/soul_chose10.nss
--- scripts/soul_chose10.nss	12 Jul 2005 00:22:22 -0000	1.1
+++ /dev/null	1 Jan 1970 00:00:00 -0000
@@ -1,15 +0,0 @@
-// this script runs when the player selects the form 10 from the list to shift into
-
-#include "nw_i0_generic"
-#include "inc_soul_shift"
-
-// The user has selected index 1 from the starting condition to shift into
-
-void main()
-{
-    object oPC = GetPCSpeaker();
-    int nStartIndex = GetLocalInt(oPC,"ShifterListIndex");
-    // add index to the start
-    nStartIndex+=9;
-    ShiftFromKnownArray(nStartIndex,TRUE,oPC);
-}
Index: scripts/soul_del01.nss
===================================================================
RCS file: scripts/soul_del01.nss
diff -N scripts/soul_del01.nss
--- scripts/soul_del01.nss	12 Jul 2005 00:22:22 -0000	1.1
+++ /dev/null	1 Jan 1970 00:00:00 -0000
@@ -1,13 +0,0 @@
-//for the form selected from the list and confermed, delete from known forms array
-
-#include "nw_i0_generic"
-#include "inc_soul_shift"
-
-void main()
-{
-    object oPC = GetPCSpeaker();
-    int nStartIndex = GetLocalInt(oPC,"ShifterListIndex");
-    // add index to the start
-    nStartIndex+=0;
-    DeleteFromKnownArray(nStartIndex,oPC);
-}
Index: scripts/soul_del02.nss
===================================================================
RCS file: scripts/soul_del02.nss
diff -N scripts/soul_del02.nss
--- scripts/soul_del02.nss	12 Jul 2005 00:22:22 -0000	1.1
+++ /dev/null	1 Jan 1970 00:00:00 -0000
@@ -1,13 +0,0 @@
-//for the form selected from the list and confermed, delete from known forms array
-
-#include "nw_i0_generic"
-#include "inc_soul_shift"
-
-void main()
-{
-    object oPC = GetPCSpeaker();
-    int nStartIndex = GetLocalInt(oPC,"ShifterListIndex");
-    // add index to the start
-    nStartIndex+=1;
-    DeleteFromKnownArray(nStartIndex,oPC);
-}
Index: scripts/soul_del03.nss
===================================================================
RCS file: scripts/soul_del03.nss
diff -N scripts/soul_del03.nss
--- scripts/soul_del03.nss	12 Jul 2005 00:22:22 -0000	1.1
+++ /dev/null	1 Jan 1970 00:00:00 -0000
@@ -1,13 +0,0 @@
-//for the form selected from the list and confermed, delete from known forms array
-
-#include "nw_i0_generic"
-#include "inc_soul_shift"
-
-void main()
-{
-    object oPC = GetPCSpeaker();
-    int nStartIndex = GetLocalInt(oPC,"ShifterListIndex");
-    // add index to the start
-    nStartIndex+=2;
-    DeleteFromKnownArray(nStartIndex,oPC);
-}
Index: scripts/soul_del04.nss
===================================================================
RCS file: scripts/soul_del04.nss
diff -N scripts/soul_del04.nss
--- scripts/soul_del04.nss	12 Jul 2005 00:22:22 -0000	1.1
+++ /dev/null	1 Jan 1970 00:00:00 -0000
@@ -1,13 +0,0 @@
-//for the form selected from the list and confermed, delete from known forms array
-
-#include "nw_i0_generic"
-#include "inc_soul_shift"
-
-void main()
-{
-    object oPC = GetPCSpeaker();
-    int nStartIndex = GetLocalInt(oPC,"ShifterListIndex");
-    // add index to the start
-    nStartIndex+=3;
-    DeleteFromKnownArray(nStartIndex,oPC);
-}
Index: scripts/soul_del05.nss
===================================================================
RCS file: scripts/soul_del05.nss
diff -N scripts/soul_del05.nss
--- scripts/soul_del05.nss	12 Jul 2005 00:22:22 -0000	1.1
+++ /dev/null	1 Jan 1970 00:00:00 -0000
@@ -1,13 +0,0 @@
-//for the form selected from the list and confermed, delete from known forms array
-
-#include "nw_i0_generic"
-#include "inc_soul_shift"
-
-void main()
-{
-    object oPC = GetPCSpeaker();
-    int nStartIndex = GetLocalInt(oPC,"ShifterListIndex");
-    // add index to the start
-    nStartIndex+=4;
-    DeleteFromKnownArray(nStartIndex,oPC);
-}
Index: scripts/soul_del06.nss
===================================================================
RCS file: scripts/soul_del06.nss
diff -N scripts/soul_del06.nss
--- scripts/soul_del06.nss	12 Jul 2005 00:22:22 -0000	1.1
+++ /dev/null	1 Jan 1970 00:00:00 -0000
@@ -1,13 +0,0 @@
-//for the form selected from the list and confermed, delete from known forms array
-
-#include "nw_i0_generic"
-#include "inc_soul_shift"
-
-void main()
-{
-    object oPC = GetPCSpeaker();
-    int nStartIndex = GetLocalInt(oPC,"ShifterListIndex");
-    // add index to the start
-    nStartIndex+=5;
-    DeleteFromKnownArray(nStartIndex,oPC);
-}
Index: scripts/soul_del07.nss
===================================================================
RCS file: scripts/soul_del07.nss
diff -N scripts/soul_del07.nss
--- scripts/soul_del07.nss	12 Jul 2005 00:22:22 -0000	1.1
+++ /dev/null	1 Jan 1970 00:00:00 -0000
@@ -1,13 +0,0 @@
-//for the form selected from the list and confermed, delete from known forms array
-
-#include "nw_i0_generic"
-#include "inc_soul_shift"
-
-void main()
-{
-    object oPC = GetPCSpeaker();
-    int nStartIndex = GetLocalInt(oPC,"ShifterListIndex");
-    // add index to the start
-    nStartIndex+=6;
-    DeleteFromKnownArray(nStartIndex,oPC);
-}
Index: scripts/soul_del08.nss
===================================================================
RCS file: scripts/soul_del08.nss
diff -N scripts/soul_del08.nss
--- scripts/soul_del08.nss	12 Jul 2005 00:22:22 -0000	1.1
+++ /dev/null	1 Jan 1970 00:00:00 -0000
@@ -1,13 +0,0 @@
-//for the form selected from the list and confermed, delete from known forms array
-
-#include "nw_i0_generic"
-#include "inc_soul_shift"
-
-void main()
-{
-    object oPC = GetPCSpeaker();
-    int nStartIndex = GetLocalInt(oPC,"ShifterListIndex");
-    // add index to the start
-    nStartIndex+=7;
-    DeleteFromKnownArray(nStartIndex,oPC);
-}
Index: scripts/soul_del09.nss
===================================================================
RCS file: scripts/soul_del09.nss
diff -N scripts/soul_del09.nss
--- scripts/soul_del09.nss	12 Jul 2005 00:22:22 -0000	1.1
+++ /dev/null	1 Jan 1970 00:00:00 -0000
@@ -1,13 +0,0 @@
-//for the form selected from the list and confermed, delete from known forms array
-
-#include "nw_i0_generic"
-#include "inc_soul_shift"
-
-void main()
-{
-    object oPC = GetPCSpeaker();
-    int nStartIndex = GetLocalInt(oPC,"ShifterListIndex");
-    // add index to the start
-    nStartIndex+=8;
-    DeleteFromKnownArray(nStartIndex,oPC);
-}
Index: scripts/soul_del10.nss
===================================================================
RCS file: scripts/soul_del10.nss
diff -N scripts/soul_del10.nss
--- scripts/soul_del10.nss	12 Jul 2005 00:22:22 -0000	1.1
+++ /dev/null	1 Jan 1970 00:00:00 -0000
@@ -1,13 +0,0 @@
-//for the form selected from the list and confermed, delete from known forms array
-
-#include "nw_i0_generic"
-#include "inc_soul_shift"
-
-void main()
-{
-    object oPC = GetPCSpeaker();
-    int nStartIndex = GetLocalInt(oPC,"ShifterListIndex");
-    // add index to the start
-    nStartIndex+=9;
-    DeleteFromKnownArray(nStartIndex,oPC);
-}
Index: scripts/soul_dsply01.nss
===================================================================
RCS file: scripts/soul_dsply01.nss
diff -N scripts/soul_dsply01.nss
--- scripts/soul_dsply01.nss	12 Jul 2005 00:22:22 -0000	1.1
+++ /dev/null	1 Jan 1970 00:00:00 -0000
@@ -1,17 +0,0 @@
-//script for deciding if the entry in the forms list should be shown
-
-int StartingConditional()
-{
-    object oPC = GetPCSpeaker();
-    object oMimicForms = GetItemPossessedBy( oPC, "soul_prism" );
-    int num_creatures = GetLocalInt( oMimicForms, "num_creatures" );
-    int nStartIndex = GetLocalInt(oPC,"ShifterListIndex");
-    if (nStartIndex+1>num_creatures) //if the entry is past the total number of known forms dont show
-    {
-        return FALSE;
-    }
-    else
-    {
-        return TRUE;
-    }
-}
Index: scripts/soul_dsply02.nss
===================================================================
RCS file: scripts/soul_dsply02.nss
diff -N scripts/soul_dsply02.nss
--- scripts/soul_dsply02.nss	12 Jul 2005 00:22:22 -0000	1.1
+++ /dev/null	1 Jan 1970 00:00:00 -0000
@@ -1,17 +0,0 @@
-//script for deciding if the entry in the forms list should be shown
-
-int StartingConditional()
-{
-    object oPC = GetPCSpeaker();
-    object oMimicForms = GetItemPossessedBy( oPC, "soul_prism" );
-    int num_creatures = GetLocalInt( oMimicForms, "num_creatures" );
-    int nStartIndex = GetLocalInt(oPC,"ShifterListIndex");
-    if (nStartIndex+2>num_creatures) //if the entry is past the total number of known forms dont show
-    {
-        return FALSE;
-    }
-    else
-    {
-        return TRUE;
-    }
-}
Index: scripts/soul_dsply03.nss
===================================================================
RCS file: scripts/soul_dsply03.nss
diff -N scripts/soul_dsply03.nss
--- scripts/soul_dsply03.nss	12 Jul 2005 00:22:22 -0000	1.1
+++ /dev/null	1 Jan 1970 00:00:00 -0000
@@ -1,17 +0,0 @@
-//script for deciding if the entry in the forms list should be shown
-
-int StartingConditional()
-{
-    object oPC = GetPCSpeaker();
-    object oMimicForms = GetItemPossessedBy( oPC, "soul_prism" );
-    int num_creatures = GetLocalInt( oMimicForms, "num_creatures" );
-    int nStartIndex = GetLocalInt(oPC,"ShifterListIndex");
-    if (nStartIndex+3>num_creatures) //if the entry is past the total number of known forms dont show
-    {
-        return FALSE;
-    }
-    else
-    {
-        return TRUE;
-    }
-}
Index: scripts/soul_dsply04.nss
===================================================================
RCS file: scripts/soul_dsply04.nss
diff -N scripts/soul_dsply04.nss
--- scripts/soul_dsply04.nss	12 Jul 2005 00:22:22 -0000	1.1
+++ /dev/null	1 Jan 1970 00:00:00 -0000
@@ -1,17 +0,0 @@
-//script for deciding if the entry in the forms list should be shown
-
-int StartingConditional()
-{
-    object oPC = GetPCSpeaker();
-    object oMimicForms = GetItemPossessedBy( oPC, "soul_prism" );
-    int num_creatures = GetLocalInt( oMimicForms, "num_creatures" );
-    int nStartIndex = GetLocalInt(oPC,"ShifterListIndex");
-    if (nStartIndex+4>num_creatures) //if the entry is past the total number of known forms dont show
-    {
-        return FALSE;
-    }
-    else
-    {
-        return TRUE;
-    }
-}
Index: scripts/soul_dsply05.nss
===================================================================
RCS file: scripts/soul_dsply05.nss
diff -N scripts/soul_dsply05.nss
--- scripts/soul_dsply05.nss	12 Jul 2005 00:22:22 -0000	1.1
+++ /dev/null	1 Jan 1970 00:00:00 -0000
@@ -1,17 +0,0 @@
-//script for deciding if the entry in the forms list should be shown
-
-int StartingConditional()
-{
-    object oPC = GetPCSpeaker();
-    object oMimicForms = GetItemPossessedBy( oPC, "soul_prism" );
-    int num_creatures = GetLocalInt( oMimicForms, "num_creatures" );
-    int nStartIndex = GetLocalInt(oPC,"ShifterListIndex");
-    if (nStartIndex+5>num_creatures) //if the entry is past the total number of known forms dont show
-    {
-        return FALSE;
-    }
-    else
-    {
-        return TRUE;
-    }
-}
Index: scripts/soul_dsply06.nss
===================================================================
RCS file: scripts/soul_dsply06.nss
diff -N scripts/soul_dsply06.nss
--- scripts/soul_dsply06.nss	12 Jul 2005 00:22:22 -0000	1.1
+++ /dev/null	1 Jan 1970 00:00:00 -0000
@@ -1,17 +0,0 @@
-//script for deciding if the entry in the forms list should be shown
-
-int StartingConditional()
-{
-    object oPC = GetPCSpeaker();
-    object oMimicForms = GetItemPossessedBy( oPC, "soul_prism" );
-    int num_creatures = GetLocalInt( oMimicForms, "num_creatures" );
-    int nStartIndex = GetLocalInt(oPC,"ShifterListIndex");
-    if (nStartIndex+6>num_creatures) //if the entry is past the total number of known forms dont show
-    {
-        return FALSE;
-    }
-    else
-    {
-        return TRUE;
-    }
-}
Index: scripts/soul_dsply07.nss
===================================================================
RCS file: scripts/soul_dsply07.nss
diff -N scripts/soul_dsply07.nss
--- scripts/soul_dsply07.nss	12 Jul 2005 00:22:22 -0000	1.1
+++ /dev/null	1 Jan 1970 00:00:00 -0000
@@ -1,17 +0,0 @@
-//script for deciding if the entry in the forms list should be shown
-
-int StartingConditional()
-{
-    object oPC = GetPCSpeaker();
-    object oMimicForms = GetItemPossessedBy( oPC, "soul_prism" );
-    int num_creatures = GetLocalInt( oMimicForms, "num_creatures" );
-    int nStartIndex = GetLocalInt(oPC,"ShifterListIndex");
-    if (nStartIndex+7>num_creatures) //if the entry is past the total number of known forms dont show
-    {
-        return FALSE;
-    }
-    else
-    {
-        return TRUE;
-    }
-}
Index: scripts/soul_dsply08.nss
===================================================================
RCS file: scripts/soul_dsply08.nss
diff -N scripts/soul_dsply08.nss
--- scripts/soul_dsply08.nss	12 Jul 2005 00:22:22 -0000	1.1
+++ /dev/null	1 Jan 1970 00:00:00 -0000
@@ -1,17 +0,0 @@
-//script for deciding if the entry in the forms list should be shown
-
-int StartingConditional()
-{
-    object oPC = GetPCSpeaker();
-    object oMimicForms = GetItemPossessedBy( oPC, "soul_prism" );
-    int num_creatures = GetLocalInt( oMimicForms, "num_creatures" );
-    int nStartIndex = GetLocalInt(oPC,"ShifterListIndex");
-    if (nStartIndex+8>num_creatures) //if the entry is past the total number of known forms dont show
-    {
-        return FALSE;
-    }
-    else
-    {
-        return TRUE;
-    }
-}
Index: scripts/soul_dsply09.nss
===================================================================
RCS file: scripts/soul_dsply09.nss
diff -N scripts/soul_dsply09.nss
--- scripts/soul_dsply09.nss	12 Jul 2005 00:22:22 -0000	1.1
+++ /dev/null	1 Jan 1970 00:00:00 -0000
@@ -1,17 +0,0 @@
-//script for deciding if the entry in the forms list should be shown
-
-int StartingConditional()
-{
-    object oPC = GetPCSpeaker();
-    object oMimicForms = GetItemPossessedBy( oPC, "soul_prism" );
-    int num_creatures = GetLocalInt( oMimicForms, "num_creatures" );
-    int nStartIndex = GetLocalInt(oPC,"ShifterListIndex");
-    if (nStartIndex+9>num_creatures) //if the entry is past the total number of known forms dont show
-    {
-        return FALSE;
-    }
-    else
-    {
-        return TRUE;
-    }
-}
Index: scripts/soul_dsply10.nss
===================================================================
RCS file: scripts/soul_dsply10.nss
diff -N scripts/soul_dsply10.nss
--- scripts/soul_dsply10.nss	12 Jul 2005 00:22:22 -0000	1.1
+++ /dev/null	1 Jan 1970 00:00:00 -0000
@@ -1,17 +0,0 @@
-//script for deciding if the entry in the forms list should be shown
-
-int StartingConditional()
-{
-    object oPC = GetPCSpeaker();
-    object oMimicForms = GetItemPossessedBy( oPC, "soul_prism" );
-    int num_creatures = GetLocalInt( oMimicForms, "num_creatures" );
-    int nStartIndex = GetLocalInt(oPC,"ShifterListIndex");
-    if (nStartIndex+10>num_creatures) //if the entry is past the total number of known forms dont show
-    {
-        return FALSE;
-    }
-    else
-    {
-        return TRUE;
-    }
-}
Index: scripts/soul_edrain.nss
===================================================================
RCS file: scripts/soul_edrain.nss
diff -N scripts/soul_edrain.nss
--- scripts/soul_edrain.nss	4 Oct 2005 19:28:56 -0000	1.7
+++ /dev/null	1 Jan 1970 00:00:00 -0000
@@ -1,182 +0,0 @@
-#include "prc_alterations"
-#include "inc_soul_shift"
-
-void DeathDelay(object oTarget, string sTarget, string sName);
-
-void DoEnergyDrain(object oTarget,int nDamage)
-{
-	if (GetIsImmune(oTarget, IMMUNITY_TYPE_NEGATIVE_LEVEL))
-	{
-		SendMessageToPC(OBJECT_SELF, "Cannot drain " + GetName(oTarget) +" is immune.");
-	}
-	else if (GetIsDead(oTarget))
-	{
-		SendMessageToPC(OBJECT_SELF, "Cannot drain: " + GetName(oTarget) +" is dead.");
-	}
-	else if (oTarget == OBJECT_SELF)
-	{
-		SendMessageToPC(OBJECT_SELF, "Cannot drain yourself.");
-	}
-	else
-	{
-		int nLevelMod = GetLocalInt(oTarget, "TargetLevel");
-		nLevelMod = nLevelMod - nDamage;
-		effect eDrain = EffectNegativeLevel(nDamage);
-		eDrain = ExtraordinaryEffect(eDrain);
-
-		ApplyEffectToObject(DURATION_TYPE_PERMANENT,eDrain,oTarget);
-		SetLocalInt(oTarget, "TargetLevel", nLevelMod);
-
-		/*SendMessageToPC(OBJECT_SELF,"You have drained "+ IntToString(nDamage) +
-			" from " + GetName(oTarget) + ", It has " +
-			 IntToString(GetLocalInt(oTarget, "TargetLevel")) + " levels left.");*/
-
-
-		// Soul Strength
-
-		if (GetLevelByClass(CLASS_TYPE_SOUL_EATER, OBJECT_SELF) >= 2)
-	        {
-	        	ApplyEffectToObject(DURATION_TYPE_TEMPORARY,
-	        	EffectAbilityIncrease(ABILITY_STRENGTH, 4), OBJECT_SELF,
-	        	HoursToSeconds(24));
-	        }
-
-		// Soul Endurance
-
-		if (GetLevelByClass(CLASS_TYPE_SOUL_EATER, OBJECT_SELF) >= 5)
-	        {
-	        	ApplyEffectToObject(DURATION_TYPE_TEMPORARY,
-	        	EffectAbilityIncrease(ABILITY_CONSTITUTION, 4), OBJECT_SELF,
-	        	HoursToSeconds(24));
-	        }
-
-		// Soul Agililty
-
-		if (GetLevelByClass(CLASS_TYPE_SOUL_EATER, OBJECT_SELF) >= 8)
-	        {
-	        	ApplyEffectToObject(DURATION_TYPE_TEMPORARY,
-	        	EffectAbilityIncrease(ABILITY_DEXTERITY, 4), OBJECT_SELF,
-	        	HoursToSeconds(24));
-	        }
-
-		// Soul Enchancement
-
-		if (GetLevelByClass(CLASS_TYPE_SOUL_EATER, OBJECT_SELF) >= 4)
-        	{
-        		ApplyEffectToObject(DURATION_TYPE_TEMPORARY,
-        		EffectSavingThrowIncrease(SAVING_THROW_TYPE_ALL, 2), OBJECT_SELF,
-	        	HoursToSeconds(24));
-
-        		ApplyEffectToObject(DURATION_TYPE_TEMPORARY,
-        		EffectSkillIncrease(SKILL_ALL_SKILLS, 2), OBJECT_SELF,
-        		HoursToSeconds(24));
-	        }
-	        string sTarget = GetResRef(oTarget);
-		string sName = GetName(oTarget);
-	        DelayCommand(0.5, DeathDelay(oTarget, sTarget, sName));
-	}
-}
-
-void LevelUpWight(int nLevel, object oCreature)
-{
-	int n;
-	for(n=1;n<nLevel;n++)
-	{
-		LevelUpHenchman(oCreature, CLASS_TYPE_INVALID, TRUE);
-		//FloatingTextStringOnCreature("Leveled up Henchmen", OBJECT_SELF, FALSE);
-	}
-}
-
-// This function is here because the commands in it need to be delayed for GetIsDead to return true.
-void DeathDelay(object oTarget, string sTarget, string sName)
-{
-
-	if (GetIsDead(oTarget))	RecognizeCreature(OBJECT_SELF, sTarget, sName);
-
-	// Soul Slave Feat
-	if (GetLevelByClass(CLASS_TYPE_SOUL_EATER, OBJECT_SELF) > 8)
-	{
-		if (DEBUG) FloatingTextStringOnCreature("Class level is greater than 8", OBJECT_SELF, FALSE);
-		// Make sure its dead before raising it as a henchman
-		if (GetIsDead(oTarget))
-		{
-			//FloatingTextStringOnCreature("Target is Dead", OBJECT_SELF, FALSE);
-
-    			int nMax = GetMaxHenchmen();
-       			int i = 1;
-    			object oHench = GetAssociate(ASSOCIATE_TYPE_HENCHMAN, OBJECT_SELF, i);
-    			effect eVis = EffectVisualEffect(VFX_FNF_SUMMON_UNDEAD);
-
-    			// Count the number of henchmen
-    			while (GetIsObjectValid(oHench))
-    			{
-    				i += 1;
-    				oHench = GetAssociate(ASSOCIATE_TYPE_HENCHMAN, OBJECT_SELF, i);
-    			}
-    			//FloatingTextStringOnCreature("Henchmen total: " + IntToString(i), OBJECT_SELF, FALSE);
-
-			// Cap the number of henchies he can have at 4
-    			if (4 >= i) SetMaxHenchmen(nMax + 4);
-
-			object oCreature = CreateObject(OBJECT_TYPE_CREATURE, "soul_wight_test", PRCGetSpellTargetLocation());
-			ApplyEffectAtLocation(DURATION_TYPE_INSTANT, eVis, PRCGetSpellTargetLocation());
-
-			AddHenchman(OBJECT_SELF, oCreature);
-			int nTargetLevelUp = GetHitDice(OBJECT_SELF) - 3;
-
-			// Needs to be delayed because it was firing before creature spawned
-			DelayCommand(1.0, LevelUpWight(nTargetLevelUp, oCreature));
-			// Reset henchmen to the module max
-			SetMaxHenchmen(nMax);
-		}
-	}
-}
-
-void main()
-{
-
-
-	object oTarget = PRCGetSpellTargetObject();
-	string sTarget = GetResRef(oTarget);
-	string sName = GetName(oTarget);
-	int nDamage = 1;
-	int nBaseLevel = GetLevelByPosition(1, oTarget) + GetLevelByPosition(2, oTarget)
-					    + GetLevelByPosition(3, oTarget);
-
-	effect eBlood = EffectVisualEffect(VFX_DUR_GHOSTLY_PULSE);
-
-
-
-	if (!GetLocalInt(oTarget, "TargetLevel"))
-	{
-		SetLocalInt(oTarget, "TargetLevel", nBaseLevel);
-	}
-
-	int nLevel = GetLocalInt(oTarget, "TargetLevel");
-
-
-
-	if (GetLevelByClass(CLASS_TYPE_SOUL_EATER, OBJECT_SELF) < 7)
-	{
-		nDamage = 1;
-	}
-	else
-	{
-		nDamage = 2;
-	}
-
-
-	SignalEvent(oTarget, EventSpellCastAt(OBJECT_SELF, GetSpellId()));
-
-
-	// Do a melee touch attack.
-	int bHit = (TouchAttackMelee(oTarget,TRUE)>0) ;
-	if (!bHit)
-	{
-		return;
-	}
-
-	// Only apply the VFX if you hit
-	ApplyEffectToObject(DURATION_TYPE_INSTANT,eBlood, oTarget);
-	DoEnergyDrain(oTarget, nDamage);
-}
\ No newline at end of file
Index: scripts/soul_lname.nss
===================================================================
RCS file: scripts/soul_lname.nss
diff -N scripts/soul_lname.nss
--- scripts/soul_lname.nss	12 Jul 2005 00:22:22 -0000	1.1
+++ /dev/null	1 Jan 1970 00:00:00 -0000
@@ -1,44 +0,0 @@
-//this script is like pnp_shifter_listfm but it uses the name of the form not the resref for display
-
-#include "inc_soul_shift"
-
-// We will be setting the custom tokens so the dlg will display
-// 10 forms at a time.
-
-void main()
-{
-    object oPC = GetPCSpeaker();
-    object oMimicForms = GetItemPossessedBy( oPC, "soul_prism" );
-    if ( !GetIsObjectValid(oMimicForms) )
-        oMimicForms = CreateItemOnObject( "soul_prism", oPC );
-
-    SetPlotFlag(oMimicForms, TRUE);
-    SetDroppableFlag(oMimicForms, FALSE);
-    SetItemCursedFlag(oMimicForms, FALSE);
-
-    int num_creatures = GetLocalInt( oMimicForms, "num_creatures" );
-    int nStartIndex = GetLocalInt(oPC,"ShifterListIndex");
-    int i;
-    int j = 0;
-
-    //SendMessageToPC(oPC,"sid "+IntToString(nStartIndex)+" num "+IntToString(num_creatures));
-    // cycle back to the start
-    if (nStartIndex > num_creatures)
-        nStartIndex = 0;
-
-    for ( i=nStartIndex; i<nStartIndex+10; i++ )
-    {
-        if (i>num_creatures)
-        {
-            SetCustomToken(100+j,"");
-        }
-        else
-        {
-            SetCustomToken(100+j,GetLocalArrayString( oMimicForms, "shift_choice_name", i )); //here we get the name instead of the resref for display
-        }
-        j++;
-        //SendMessageToPC(oPC,GetLocalArrayString( oMimicForms, "shift_choice", i ));
-    }
-
-
-}
Index: scripts/soul_nextlst.nss
===================================================================
RCS file: scripts/soul_nextlst.nss
diff -N scripts/soul_nextlst.nss
--- scripts/soul_nextlst.nss	12 Jul 2005 00:22:22 -0000	1.1
+++ /dev/null	1 Jan 1970 00:00:00 -0000
@@ -1,30 +0,0 @@
-//::///////////////////////////////////////////////
-//:: FileName pnp_shift_nextfm
-//:://////////////////////////////////////////////
-//:://////////////////////////////////////////////
-//:: Created By: Script Wizard
-//:: Created On: 2/22/2004 6:13:10 PM
-//:://////////////////////////////////////////////
-// Move to the starting point in the list of critters by 10
-void main()
-{
-    object oPC = GetPCSpeaker();
-    int nStartIndex = GetLocalInt(oPC,"ShifterListIndex");
-    object oMimicForms = GetItemPossessedBy( oPC, "soul_prism" );
-    if ( !GetIsObjectValid(oMimicForms) )
-        oMimicForms = CreateItemOnObject( "soul_prism", oPC );
-
-    SetPlotFlag(oMimicForms, TRUE);
-    SetDroppableFlag(oMimicForms, FALSE);
-    SetItemCursedFlag(oMimicForms, FALSE);
-
-    int num_creatures = GetLocalInt( oMimicForms, "num_creatures" );
-
-    nStartIndex+=10;
-    // Make sure we dont go beyond the end of the list
-    if (nStartIndex > num_creatures)
-        nStartIndex = 0;
-    // Set the variable
-    SetLocalInt(oPC, "ShifterListIndex", nStartIndex);
-
-}
Index: scripts/soul_options.nss
===================================================================
RCS file: scripts/soul_options.nss
diff -N scripts/soul_options.nss
--- scripts/soul_options.nss	12 Jul 2005 00:22:22 -0000	1.1
+++ /dev/null	1 Jan 1970 00:00:00 -0000
@@ -1,5 +0,0 @@
-void main()
-{
-	AssignCommand(OBJECT_SELF, ActionStartConversation(OBJECT_SELF,
-		      "soul_options", TRUE, FALSE));
-}
Index: scripts/soul_qclr.nss
===================================================================
RCS file: scripts/soul_qclr.nss
diff -N scripts/soul_qclr.nss
--- scripts/soul_qclr.nss	12 Jul 2005 00:22:22 -0000	1.1
+++ /dev/null	1 Jan 1970 00:00:00 -0000
@@ -1,63 +0,0 @@
-//::///////////////////////////////////////////////
-//:: FileName pnp_shft_qclr
-//:://////////////////////////////////////////////
-//:://////////////////////////////////////////////
-//:: Created By: Script Wizard
-//:: Created On: 31/08/2004 6:31:18 PM
-//:://////////////////////////////////////////////
-#include "inc_soul_shift"
-
-void main()
-{
-    // Set the variables
-    SetLocalInt(GetPCSpeaker(), "pnp_shft_qs", 0);
-    object oPC = GetPCSpeaker();
-    object oMimicForms = GetItemPossessedBy( oPC, "soul_prism" );
-    if ( !GetIsObjectValid(oMimicForms) )
-        oMimicForms = CreateItemOnObject( "soul_prism", oPC );
-
-    SetPlotFlag(oMimicForms, TRUE);
-    SetDroppableFlag(oMimicForms, FALSE);
-    SetItemCursedFlag(oMimicForms, FALSE);
-
-    int iMaxIndex = GetLocalInt( oMimicForms, "num_creatures" );
-    int i;
-    string sTemp;
-    int iIndex;
-    int iEpic;
-
-    for ( i=1; i<11; i++ )
-    {
-        iIndex = GetLocalArrayInt(oMimicForms,"QuickSlotIndex",i);
-        iEpic  = GetLocalArrayInt(oMimicForms,"QuickSlotEpic",i);
-        if(!(iIndex>iMaxIndex))
-        {
-            if (iMaxIndex==0)
-            {
-                sTemp = "Empty";
-                SetCustomToken(99+i, sTemp);
-            }
-            else
-            {
-                if(iEpic==TRUE)
-                    sTemp="Epic: ";
-                else
-                    sTemp = "";
-                sTemp += GetLocalArrayString( oMimicForms, "shift_choice_name", iIndex );
-                SetCustomToken(99+i, sTemp);
-            }
-        }
-        else
-        {
-            sTemp = "Empty";
-            SetCustomToken(99+i, sTemp);
-        }
-    }
-
-
-}
-
-
-
-
-
Index: scripts/soul_qs1.nss
===================================================================
RCS file: scripts/soul_qs1.nss
diff -N scripts/soul_qs1.nss
--- scripts/soul_qs1.nss	12 Jul 2005 00:22:22 -0000	1.1
+++ /dev/null	1 Jan 1970 00:00:00 -0000
@@ -1,6 +0,0 @@
-#include "inc_soul_shift"
-
-void main()
-{
-    QuickShift(OBJECT_SELF, 1);
-}
Index: scripts/soul_qs10.nss
===================================================================
RCS file: scripts/soul_qs10.nss
diff -N scripts/soul_qs10.nss
--- scripts/soul_qs10.nss	12 Jul 2005 00:22:22 -0000	1.1
+++ /dev/null	1 Jan 1970 00:00:00 -0000
@@ -1,6 +0,0 @@
-#include "inc_soul_shift"
-
-void main()
-{
-    QuickShift(OBJECT_SELF, 10);
-}
Index: scripts/soul_qs2.nss
===================================================================
RCS file: scripts/soul_qs2.nss
diff -N scripts/soul_qs2.nss
--- scripts/soul_qs2.nss	12 Jul 2005 00:22:22 -0000	1.1
+++ /dev/null	1 Jan 1970 00:00:00 -0000
@@ -1,6 +0,0 @@
-#include "inc_soul_shift"
-
-void main()
-{
-    QuickShift(OBJECT_SELF, 2);
-}
Index: scripts/soul_qs3.nss
===================================================================
RCS file: scripts/soul_qs3.nss
diff -N scripts/soul_qs3.nss
--- scripts/soul_qs3.nss	12 Jul 2005 00:22:22 -0000	1.1
+++ /dev/null	1 Jan 1970 00:00:00 -0000
@@ -1,6 +0,0 @@
-#include "inc_soul_shift"
-
-void main()
-{
-    QuickShift(OBJECT_SELF, 3);
-}
Index: scripts/soul_qs4.nss
===================================================================
RCS file: scripts/soul_qs4.nss
diff -N scripts/soul_qs4.nss
--- scripts/soul_qs4.nss	12 Jul 2005 00:22:22 -0000	1.1
+++ /dev/null	1 Jan 1970 00:00:00 -0000
@@ -1,6 +0,0 @@
-#include "inc_soul_shift"
-
-void main()
-{
-    QuickShift(OBJECT_SELF, 4);
-}
Index: scripts/soul_qs5.nss
===================================================================
RCS file: scripts/soul_qs5.nss
diff -N scripts/soul_qs5.nss
--- scripts/soul_qs5.nss	12 Jul 2005 00:22:22 -0000	1.1
+++ /dev/null	1 Jan 1970 00:00:00 -0000
@@ -1,6 +0,0 @@
-#include "inc_soul_shift"
-
-void main()
-{
-    QuickShift(OBJECT_SELF, 5);
-}
Index: scripts/soul_qs6.nss
===================================================================
RCS file: scripts/soul_qs6.nss
diff -N scripts/soul_qs6.nss
--- scripts/soul_qs6.nss	12 Jul 2005 00:22:22 -0000	1.1
+++ /dev/null	1 Jan 1970 00:00:00 -0000
@@ -1,6 +0,0 @@
-#include "inc_soul_shift"
-
-void main()
-{
-    QuickShift(OBJECT_SELF, 6);
-}
Index: scripts/soul_qs7.nss
===================================================================
RCS file: scripts/soul_qs7.nss
diff -N scripts/soul_qs7.nss
--- scripts/soul_qs7.nss	12 Jul 2005 00:22:22 -0000	1.1
+++ /dev/null	1 Jan 1970 00:00:00 -0000
@@ -1,6 +0,0 @@
-#include "inc_soul_shift"
-
-void main()
-{
-    QuickShift(OBJECT_SELF, 7);
-}
Index: scripts/soul_qs8.nss
===================================================================
RCS file: scripts/soul_qs8.nss
diff -N scripts/soul_qs8.nss
--- scripts/soul_qs8.nss	12 Jul 2005 00:22:22 -0000	1.1
+++ /dev/null	1 Jan 1970 00:00:00 -0000
@@ -1,6 +0,0 @@
-#include "inc_soul_shift"
-
-void main()
-{
-    QuickShift(OBJECT_SELF, 8);
-}
Index: scripts/soul_qs9.nss
===================================================================
RCS file: scripts/soul_qs9.nss
diff -N scripts/soul_qs9.nss
--- scripts/soul_qs9.nss	12 Jul 2005 00:22:22 -0000	1.1
+++ /dev/null	1 Jan 1970 00:00:00 -0000
@@ -1,6 +0,0 @@
-#include "inc_soul_shift"
-
-void main()
-{
-    QuickShift(OBJECT_SELF, 9);
-}
Index: scripts/soul_qsc1.nss
===================================================================
RCS file: scripts/soul_qsc1.nss
diff -N scripts/soul_qsc1.nss
--- scripts/soul_qsc1.nss	12 Jul 2005 00:22:22 -0000	1.1
+++ /dev/null	1 Jan 1970 00:00:00 -0000
@@ -1,15 +0,0 @@
-// this script runs when the player selects the form 1 from the list to shift into
-
-#include "nw_i0_generic"
-#include "inc_soul_shift"
-
-void main()
-{
-    object oPC = GetPCSpeaker();
-    int iIndex = GetLocalInt(oPC,"ShifterListIndex");
-    int iQuickSlot = GetLocalInt(oPC,"pnp_shft_qs");
-    int iEpic = GetLocalInt(oPC,"pnp_shft_qse");
-    // add index to the start
-    iIndex+=0;
-    SetQuickSlot(oPC,iIndex,iQuickSlot,iEpic);
-}
Index: scripts/soul_qsc10.nss
===================================================================
RCS file: scripts/soul_qsc10.nss
diff -N scripts/soul_qsc10.nss
--- scripts/soul_qsc10.nss	12 Jul 2005 00:22:22 -0000	1.1
+++ /dev/null	1 Jan 1970 00:00:00 -0000
@@ -1,15 +0,0 @@
-// this script runs when the player selects the form 1 from the list to shift into
-
-#include "nw_i0_generic"
-#include "inc_soul_shift"
-
-void main()
-{
-    object oPC = GetPCSpeaker();
-    int iIndex = GetLocalInt(oPC,"ShifterListIndex");
-    int iQuickSlot = GetLocalInt(oPC,"pnp_shft_qs");
-    int iEpic = GetLocalInt(oPC,"pnp_shft_qse");
-    // add index to the start
-    iIndex+=9;
-    SetQuickSlot(oPC,iIndex,iQuickSlot,iEpic);
-}
Index: scripts/soul_qsc2.nss
===================================================================
RCS file: scripts/soul_qsc2.nss
diff -N scripts/soul_qsc2.nss
--- scripts/soul_qsc2.nss	12 Jul 2005 00:22:22 -0000	1.1
+++ /dev/null	1 Jan 1970 00:00:00 -0000
@@ -1,15 +0,0 @@
-// this script runs when the player selects the form 1 from the list to shift into
-
-#include "nw_i0_generic"
-#include "inc_soul_shift"
-
-void main()
-{
-    object oPC = GetPCSpeaker();
-    int iIndex = GetLocalInt(oPC,"ShifterListIndex");
-    int iQuickSlot = GetLocalInt(oPC,"pnp_shft_qs");
-    int iEpic = GetLocalInt(oPC,"pnp_shft_qse");
-    // add index to the start
-    iIndex+=1;
-    SetQuickSlot(oPC,iIndex,iQuickSlot,iEpic);
-}
Index: scripts/soul_qsc3.nss
===================================================================
RCS file: scripts/soul_qsc3.nss
diff -N scripts/soul_qsc3.nss
--- scripts/soul_qsc3.nss	12 Jul 2005 00:22:22 -0000	1.1
+++ /dev/null	1 Jan 1970 00:00:00 -0000
@@ -1,15 +0,0 @@
-// this script runs when the player selects the form 1 from the list to shift into
-
-#include "nw_i0_generic"
-#include "inc_soul_shift"
-
-void main()
-{
-    object oPC = GetPCSpeaker();
-    int iIndex = GetLocalInt(oPC,"ShifterListIndex");
-    int iQuickSlot = GetLocalInt(oPC,"pnp_shft_qs");
-    int iEpic = GetLocalInt(oPC,"pnp_shft_qse");
-    // add index to the start
-    iIndex+=2;
-    SetQuickSlot(oPC,iIndex,iQuickSlot,iEpic);
-}
Index: scripts/soul_qsc4.nss
===================================================================
RCS file: scripts/soul_qsc4.nss
diff -N scripts/soul_qsc4.nss
--- scripts/soul_qsc4.nss	12 Jul 2005 00:22:22 -0000	1.1
+++ /dev/null	1 Jan 1970 00:00:00 -0000
@@ -1,15 +0,0 @@
-// this script runs when the player selects the form 1 from the list to shift into
-
-#include "nw_i0_generic"
-#include "inc_soul_shift"
-
-void main()
-{
-    object oPC = GetPCSpeaker();
-    int iIndex = GetLocalInt(oPC,"ShifterListIndex");
-    int iQuickSlot = GetLocalInt(oPC,"pnp_shft_qs");
-    int iEpic = GetLocalInt(oPC,"pnp_shft_qse");
-    // add index to the start
-    iIndex+=3;
-    SetQuickSlot(oPC,iIndex,iQuickSlot,iEpic);
-}
Index: scripts/soul_qsc5.nss
===================================================================
RCS file: scripts/soul_qsc5.nss
diff -N scripts/soul_qsc5.nss
--- scripts/soul_qsc5.nss	12 Jul 2005 00:22:23 -0000	1.1
+++ /dev/null	1 Jan 1970 00:00:00 -0000
@@ -1,15 +0,0 @@
-// this script runs when the player selects the form 1 from the list to shift into
-
-#include "nw_i0_generic"
-#include "inc_soul_shift"
-
-void main()
-{
-    object oPC = GetPCSpeaker();
-    int iIndex = GetLocalInt(oPC,"ShifterListIndex");
-    int iQuickSlot = GetLocalInt(oPC,"pnp_shft_qs");
-    int iEpic = GetLocalInt(oPC,"pnp_shft_qse");
-    // add index to the start
-    iIndex+=4;
-    SetQuickSlot(oPC,iIndex,iQuickSlot,iEpic);
-}
Index: scripts/soul_qsc6.nss
===================================================================
RCS file: scripts/soul_qsc6.nss
diff -N scripts/soul_qsc6.nss
--- scripts/soul_qsc6.nss	12 Jul 2005 00:22:23 -0000	1.1
+++ /dev/null	1 Jan 1970 00:00:00 -0000
@@ -1,15 +0,0 @@
-// this script runs when the player selects the form 1 from the list to shift into
-
-#include "nw_i0_generic"
-#include "inc_soul_shift"
-
-void main()
-{
-    object oPC = GetPCSpeaker();
-    int iIndex = GetLocalInt(oPC,"ShifterListIndex");
-    int iQuickSlot = GetLocalInt(oPC,"pnp_shft_qs");
-    int iEpic = GetLocalInt(oPC,"pnp_shft_qse");
-    // add index to the start
-    iIndex+=5;
-    SetQuickSlot(oPC,iIndex,iQuickSlot,iEpic);
-}
Index: scripts/soul_qsc7.nss
===================================================================
RCS file: scripts/soul_qsc7.nss
diff -N scripts/soul_qsc7.nss
--- scripts/soul_qsc7.nss	12 Jul 2005 00:22:23 -0000	1.1
+++ /dev/null	1 Jan 1970 00:00:00 -0000
@@ -1,15 +0,0 @@
-// this script runs when the player selects the form 1 from the list to shift into
-
-#include "nw_i0_generic"
-#include "inc_soul_shift"
-
-void main()
-{
-    object oPC = GetPCSpeaker();
-    int iIndex = GetLocalInt(oPC,"ShifterListIndex");
-    int iQuickSlot = GetLocalInt(oPC,"pnp_shft_qs");
-    int iEpic = GetLocalInt(oPC,"pnp_shft_qse");
-    // add index to the start
-    iIndex+=6;
-    SetQuickSlot(oPC,iIndex,iQuickSlot,iEpic);
-}
Index: scripts/soul_qsc8.nss
===================================================================
RCS file: scripts/soul_qsc8.nss
diff -N scripts/soul_qsc8.nss
--- scripts/soul_qsc8.nss	12 Jul 2005 00:22:23 -0000	1.1
+++ /dev/null	1 Jan 1970 00:00:00 -0000
@@ -1,15 +0,0 @@
-// this script runs when the player selects the form 1 from the list to shift into
-
-#include "nw_i0_generic"
-#include "inc_soul_shift"
-
-void main()
-{
-    object oPC = GetPCSpeaker();
-    int iIndex = GetLocalInt(oPC,"ShifterListIndex");
-    int iQuickSlot = GetLocalInt(oPC,"pnp_shft_qs");
-    int iEpic = GetLocalInt(oPC,"pnp_shft_qse");
-    // add index to the start
-    iIndex+=7;
-    SetQuickSlot(oPC,iIndex,iQuickSlot,iEpic);
-}
Index: scripts/soul_qsc9.nss
===================================================================
RCS file: scripts/soul_qsc9.nss
diff -N scripts/soul_qsc9.nss
--- scripts/soul_qsc9.nss	12 Jul 2005 00:22:23 -0000	1.1
+++ /dev/null	1 Jan 1970 00:00:00 -0000
@@ -1,15 +0,0 @@
-// this script runs when the player selects the form 1 from the list to shift into
-
-#include "nw_i0_generic"
-#include "inc_soul_shift"
-
-void main()
-{
-    object oPC = GetPCSpeaker();
-    int iIndex = GetLocalInt(oPC,"ShifterListIndex");
-    int iQuickSlot = GetLocalInt(oPC,"pnp_shft_qs");
-    int iEpic = GetLocalInt(oPC,"pnp_shft_qse");
-    // add index to the start
-    iIndex+=8;
-    SetQuickSlot(oPC,iIndex,iQuickSlot,iEpic);
-}
Index: scripts/soul_qss1.nss
===================================================================
RCS file: scripts/soul_qss1.nss
diff -N scripts/soul_qss1.nss
--- scripts/soul_qss1.nss	12 Jul 2005 00:22:23 -0000	1.1
+++ /dev/null	1 Jan 1970 00:00:00 -0000
@@ -1,13 +0,0 @@
-//::///////////////////////////////////////////////
-//:: FileName pnp_shft_qss1
-//:://////////////////////////////////////////////
-//:://////////////////////////////////////////////
-//:: Created By: Script Wizard
-//:: Created On: 31/08/2004 6:32:41 PM
-//:://////////////////////////////////////////////
-void main()
-{
-	// Set the variables
-	SetLocalInt(GetPCSpeaker(), "pnp_shft_qs", 1);
-
-}
Index: scripts/soul_qss10.nss
===================================================================
RCS file: scripts/soul_qss10.nss
diff -N scripts/soul_qss10.nss
--- scripts/soul_qss10.nss	12 Jul 2005 00:22:23 -0000	1.1
+++ /dev/null	1 Jan 1970 00:00:00 -0000
@@ -1,13 +0,0 @@
-//::///////////////////////////////////////////////
-//:: FileName pnp_shft_qss10
-//:://////////////////////////////////////////////
-//:://////////////////////////////////////////////
-//:: Created By: Script Wizard
-//:: Created On: 31/08/2004 6:38:34 PM
-//:://////////////////////////////////////////////
-void main()
-{
-	// Set the variables
-	SetLocalInt(GetPCSpeaker(), "pnp_shft_qs", 10);
-
-}
Index: scripts/soul_qss2.nss
===================================================================
RCS file: scripts/soul_qss2.nss
diff -N scripts/soul_qss2.nss
--- scripts/soul_qss2.nss	12 Jul 2005 00:22:23 -0000	1.1
+++ /dev/null	1 Jan 1970 00:00:00 -0000
@@ -1,13 +0,0 @@
-//::///////////////////////////////////////////////
-//:: FileName pnp_shft_qss2
-//:://////////////////////////////////////////////
-//:://////////////////////////////////////////////
-//:: Created By: Script Wizard
-//:: Created On: 31/08/2004 6:34:47 PM
-//:://////////////////////////////////////////////
-void main()
-{
-	// Set the variables
-	SetLocalInt(GetPCSpeaker(), "pnp_shft_qs", 2);
-
-}
Index: scripts/soul_qss3.nss
===================================================================
RCS file: scripts/soul_qss3.nss
diff -N scripts/soul_qss3.nss
--- scripts/soul_qss3.nss	12 Jul 2005 00:22:23 -0000	1.1
+++ /dev/null	1 Jan 1970 00:00:00 -0000
@@ -1,13 +0,0 @@
-//::///////////////////////////////////////////////
-//:: FileName pnp_shft_qss3
-//:://////////////////////////////////////////////
-//:://////////////////////////////////////////////
-//:: Created By: Script Wizard
-//:: Created On: 31/08/2004 6:35:48 PM
-//:://////////////////////////////////////////////
-void main()
-{
-	// Set the variables
-	SetLocalInt(GetPCSpeaker(), "pnp_shft_qs", 3);
-
-}
Index: scripts/soul_qss4.nss
===================================================================
RCS file: scripts/soul_qss4.nss
diff -N scripts/soul_qss4.nss
--- scripts/soul_qss4.nss	12 Jul 2005 00:22:23 -0000	1.1
+++ /dev/null	1 Jan 1970 00:00:00 -0000
@@ -1,13 +0,0 @@
-//::///////////////////////////////////////////////
-//:: FileName pnp_shft_qss4
-//:://////////////////////////////////////////////
-//:://////////////////////////////////////////////
-//:: Created By: Script Wizard
-//:: Created On: 31/08/2004 6:36:07 PM
-//:://////////////////////////////////////////////
-void main()
-{
-	// Set the variables
-	SetLocalInt(GetPCSpeaker(), "pnp_shft_qs", 4);
-
-}
Index: scripts/soul_qss5.nss
===================================================================
RCS file: scripts/soul_qss5.nss
diff -N scripts/soul_qss5.nss
--- scripts/soul_qss5.nss	12 Jul 2005 00:22:23 -0000	1.1
+++ /dev/null	1 Jan 1970 00:00:00 -0000
@@ -1,13 +0,0 @@
-//::///////////////////////////////////////////////
-//:: FileName pnp_shft_qss5
-//:://////////////////////////////////////////////
-//:://////////////////////////////////////////////
-//:: Created By: Script Wizard
-//:: Created On: 31/08/2004 6:36:55 PM
-//:://////////////////////////////////////////////
-void main()
-{
-	// Set the variables
-	SetLocalInt(GetPCSpeaker(), "pnp_shft_qs", 5);
-
-}
Index: scripts/soul_qss6.nss
===================================================================
RCS file: scripts/soul_qss6.nss
diff -N scripts/soul_qss6.nss
--- scripts/soul_qss6.nss	12 Jul 2005 00:22:23 -0000	1.1
+++ /dev/null	1 Jan 1970 00:00:00 -0000
@@ -1,13 +0,0 @@
-//::///////////////////////////////////////////////
-//:: FileName pnp_shft_qss6
-//:://////////////////////////////////////////////
-//:://////////////////////////////////////////////
-//:: Created By: Script Wizard
-//:: Created On: 31/08/2004 6:37:13 PM
-//:://////////////////////////////////////////////
-void main()
-{
-	// Set the variables
-	SetLocalInt(GetPCSpeaker(), "pnp_shft_qs", 6);
-
-}
Index: scripts/soul_qss7.nss
===================================================================
RCS file: scripts/soul_qss7.nss
diff -N scripts/soul_qss7.nss
--- scripts/soul_qss7.nss	12 Jul 2005 00:22:23 -0000	1.1
+++ /dev/null	1 Jan 1970 00:00:00 -0000
@@ -1,13 +0,0 @@
-//::///////////////////////////////////////////////
-//:: FileName pnp_shft_qss7
-//:://////////////////////////////////////////////
-//:://////////////////////////////////////////////
-//:: Created By: Script Wizard
-//:: Created On: 31/08/2004 6:37:36 PM
-//:://////////////////////////////////////////////
-void main()
-{
-	// Set the variables
-	SetLocalInt(GetPCSpeaker(), "pnp_shft_qs", 7);
-
-}
Index: scripts/soul_qss8.nss
===================================================================
RCS file: scripts/soul_qss8.nss
diff -N scripts/soul_qss8.nss
--- scripts/soul_qss8.nss	12 Jul 2005 00:22:23 -0000	1.1
+++ /dev/null	1 Jan 1970 00:00:00 -0000
@@ -1,13 +0,0 @@
-//::///////////////////////////////////////////////
-//:: FileName pnp_shft_qss8
-//:://////////////////////////////////////////////
-//:://////////////////////////////////////////////
-//:: Created By: Script Wizard
-//:: Created On: 31/08/2004 6:37:54 PM
-//:://////////////////////////////////////////////
-void main()
-{
-	// Set the variables
-	SetLocalInt(GetPCSpeaker(), "pnp_shft_qs", 8);
-
-}
Index: scripts/soul_qss9.nss
===================================================================
RCS file: scripts/soul_qss9.nss
diff -N scripts/soul_qss9.nss
--- scripts/soul_qss9.nss	12 Jul 2005 00:22:23 -0000	1.1
+++ /dev/null	1 Jan 1970 00:00:00 -0000
@@ -1,13 +0,0 @@
-//::///////////////////////////////////////////////
-//:: FileName pnp_shft_qss9
-//:://////////////////////////////////////////////
-//:://////////////////////////////////////////////
-//:: Created By: Script Wizard
-//:: Created On: 31/08/2004 6:38:16 PM
-//:://////////////////////////////////////////////
-void main()
-{
-	// Set the variables
-	SetLocalInt(GetPCSpeaker(), "pnp_shft_qs", 9);
-
-}
Index: tlk/prc_consortium.tlk.xml
===================================================================
RCS file: /cvsroot/nwnprc/nwnprc/tlk/prc_consortium.tlk.xml,v
retrieving revision 1.268
retrieving revision 1.269
diff -u -r1.268 -r1.269
--- tlk/prc_consortium.tlk.xml	3 Dec 2006 17:50:47 -0000	1.268
+++ tlk/prc_consortium.tlk.xml	4 Dec 2006 22:15:44 -0000	1.269
@@ -30567,6 +30567,8 @@

 This spell does not function underwater.</entry>
   <entry id="54861" lang="en" sex="m">Obscuring Mist (1)</entry>
+  <entry id="54898" lang="en" sex="m">You have not drained levels in the last 24 hours, Soul Blast does not work.</entry>
+  <entry id="54899" lang="en" sex="m">Target is immune to negative levels.</entry>
   <entry id="54900" lang="en" sex="m">Soul Eater</entry>
   <entry id="54901" lang="en" sex="m">Soul Eaters</entry>
   <entry id="54902" lang="en" sex="m">soul eater</entry>
@@ -30582,36 +30584,56 @@
 Race: Living Non-Humanoid (No dwarves, elves, humans, gnomes, halflings, or half orcs)
 Base Attack Bonus: +5.
 Skills: Lore 2 ranks.
-Feats:  Alertness
+Feats: Alertness, Weapon Focus(creature or unarmed strike)

 ABILITIES:

 Level
-1: Energy Drain 1 - Bestow 1 negative level with a touch.
-2: Soul Strength - When a soul eater uses energy drain, it gets +4 Strength for 24 hours
-3: Soul Blast - 1d6 damage per soul eater level to one target, once per day
-4: Soul Enhancement - When a soul eater uses energy drain, it gets a +2 bonus to Saves and Skills
-5: Soul Endurance - When a soul eater uses energy drain, it gets +4 Constitution for 24 hours
-6: Soul Radiance - If a soul eater kills a creature with energy drain, it may shift into that creatures form, taking on its appearance and abilities for 24 hours.
-7: Energy Drain 2 - Bestow 2 negative levels with a touch.
-8: Soul Agility - When a soul eater uses energy drain, it gets +4 Dexterity
-9: Soul Slave - If a soul eater kills a creature with energy drain, it returns as a wight under the command of the soul eater.
-10: Soul Power - When a soul eater uses energy drain, it gets +2 to all spell like and supernatural ability DCs. </entry>
+1:  Energy Drain 1
+2:  Soul Strength
+3:  Soul Blast
+4:  Soul Enhancement
+5:  Soul Endurance
+6:  Soul Radiance
+7:  Energy Drain 2
+8:  Soul Agility
+9:  Soul Slave
+10: Soul Power
+
+
+Energy Drain (Su): A soul eater gains the ability to drain energy, bestowing negative levels upon it's victims. Beginning at 1st level, the touch of a soul eater bestows one negative level on it's target. At 7th level, the soul eater bestows two negative levels with a touch.
+
+Soul Strength (Su): When a 2nd-level soul eater uses it's energy drain ability, it gains a +4 bonus to Strenth for 24 hours.
+
+Soul Blast (Su): A 3rd-level may project a 100-foot ray of force that deals 1d6 points of damage per soul eater level against one target. The target is allowed a Reflex saving throw to avoid the damage (DC 10 + class level + Cha bonus). This supernatural ability can be used once per day, and only on a day when the soul eater has drained levels.
+
+Soul Enhancement (Su): When a 4th-level soul eater uses it's energy drain ability, it gains a +2 enhancement bonus on all saving throws and skill checks for 24 hours.
+
+Soul Endurance (Su): When a 5nd-level soul eater uses it's energy drain ability, it gains a +4 bonus to Constitution for 24 hours.
+
+Soul Radiance (Su): If a 6th-level soul eater completely drains a creature of energy, it may adopt the creature's soul radiance, taking the victim's form, appearance, and abilities for 24 hours.
+
+Soul Agility (Su): When a 8th-level soul eater uses it's energy drain ability, it gains a +4 bonus to Dexterity for 24 hours.
+
+Soul Slave (Su): If a 9th-level soul eater completely drains a creature of energy, the victim becomes a wight under the command of the soul eater.
+
+Soul Power (Su): After a 10th-level soul eater has drained energy, all spell-like and supernatural abilities gains a +2 profane bonus to their saving throw DC for 24 hours. Further, it may use it's Soul Blast ability up to two times instead of one during that 24-hour period.
+(Further, any and all spell-like or supernatural abilities the soul eater possesses may be used twice as often as normal during that 24-hour period.)</entry>
   <entry id="54904" lang="en" sex="m">Energy Drain</entry>
   <entry id="54905" lang="en" sex="m">Type of Feat: Class Specific
 Prerequisite: Soul Eater level 1.
 Specifics: Attempt a touch attack to drain 1 negative level from a target. At level 7 this increases to 2 levels.
-Use: Selected. </entry>
+Use: Selected.</entry>
   <entry id="54906" lang="en" sex="m">&lt;Custom0&gt; Drains Energy</entry>
   <entry id="54907" lang="en" sex="m">Soul Radiance</entry>
   <entry id="54908" lang="en" sex="m">Type of Feat: Class Specific
 Prerequisite: Soul Eater level 6.
-Specifics: Allows the soul eater to change into the form of a creature it has killed.
-Use: Selected.</entry>
+Specifics: If a 6th-level soul eater completely drains a creature of energy, it may adopt the creature's soul radiance, taking the victim's form, appearance, and abilities for 24 hours.
+Use: Switched on/off. While on, upon killing a creature with energy drain, the soul eater will shift into that creature.</entry>
   <entry id="54909" lang="en" sex="m">Soul Blast</entry>
   <entry id="54910" lang="en" sex="m">Type of Feat: Class Specific
 Prerequisite: Soul Eater level 3.
-Specifics: The soul eater projects a ray of force that deals 1d6 damage per soul eater level against one target. The target is allowed a reflex save vs 10 + Class Level + Soul Eater's Cha modifier. This can be used one a day.
+Specifics: A 3rd-level may project a 100-foot ray of force that deals 1d6 points of damage per soul eater level against one target. The target is allowed a Reflex saving throw to avoid the damage (DC 10 + class level + Cha bonus). This supernatural ability can be used once per day, and only on a day when the soul eater has drained levels.
 Use: Selected.</entry>
   <entry id="54911" lang="en" sex="m">Dragon Disciple</entry>
   <entry id="54912" lang="en" sex="m">Dragon Disciples</entry>
