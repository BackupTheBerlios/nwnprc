
//nBase is BASE_ITEM_*
//nType     = 1 Overwhelming Crit
//          = 2 Epic Weapon Focus
//          = 3 Epic Weapon Specialization
//          = 4 Improved Critical
//          = 5 Weapon Focus
//          = 6 Weapon of Choice
//          = 7 Weapon Specialization
int GetFeatForBaseItem(int nBase, int nType);

int GetFeatForBaseItem(int nBase, int nType)
{
switch(nBase)
{
case BASE_ITEM_BASTARDSWORD:   if(nType == 1) return FEAT_EPIC_OVERWHELMING_CRITICAL_BASTARDSWORD;     if(nType == 2) return FEAT_EPIC_WEAPON_FOCUS_BASTARDSWORD;  if(nType == 3) return FEAT_EPIC_WEAPON_SPECIALIZATION_BASTARDSWORD;     if(nType == 4) return FEAT_IMPROVED_CRITICAL_BASTARD_SWORD;  if(nType == 5) return FEAT_WEAPON_FOCUS_BASTARD_SWORD;   if(nType == 6) return FEAT_WEAPON_OF_CHOICE_BASTARDSWORD;   if(nType == 7) return FEAT_WEAPON_SPECIALIZATION_BASTARD_SWORD;  break;
case BASE_ITEM_BATTLEAXE:  if(nType == 1) return FEAT_EPIC_OVERWHELMING_CRITICAL_BATTLEAXE;    if(nType == 2) return FEAT_EPIC_WEAPON_FOCUS_BATTLEAXE;     if(nType == 3) return FEAT_EPIC_WEAPON_SPECIALIZATION_BATTLEAXE;    if(nType == 4) return FEAT_IMPROVED_CRITICAL_BATTLE_AXE;     if(nType == 5) return FEAT_WEAPON_FOCUS_BATTLE_AXE;  if(nType == 6) return FEAT_WEAPON_OF_CHOICE_BATTLEAXE;  if(nType == 7) return FEAT_WEAPON_SPECIALIZATION_BATTLE_AXE;     break;
case BASE_ITEM_CLUB:   if(nType == 1) return FEAT_EPIC_OVERWHELMING_CRITICAL_CLUB;     if(nType == 2) return FEAT_EPIC_WEAPON_FOCUS_CLUB;  if(nType == 3) return FEAT_EPIC_WEAPON_SPECIALIZATION_CLUB;     if(nType == 4) return FEAT_IMPROVED_CRITICAL_CLUB;  if(nType == 5) return FEAT_WEAPON_FOCUS_CLUB;   if(nType == 6) return FEAT_WEAPON_OF_CHOICE_CLUB;   if(nType == 7) return FEAT_WEAPON_SPECIALIZATION_CLUB;  break;
case BASE_ITEM_DAGGER:     if(nType == 1) return FEAT_EPIC_OVERWHELMING_CRITICAL_DAGGER;   if(nType == 2) return FEAT_EPIC_WEAPON_FOCUS_DAGGER;    if(nType == 3) return FEAT_EPIC_WEAPON_SPECIALIZATION_DAGGER;   if(nType == 4) return FEAT_IMPROVED_CRITICAL_DAGGER;    if(nType == 5) return FEAT_WEAPON_FOCUS_DAGGER;     if(nType == 6) return FEAT_WEAPON_OF_CHOICE_DAGGER;     if(nType == 7) return FEAT_WEAPON_SPECIALIZATION_DAGGER;    break;
case BASE_ITEM_DART:   if(nType == 1) return FEAT_EPIC_OVERWHELMING_CRITICAL_DART;     if(nType == 2) return FEAT_EPIC_WEAPON_FOCUS_DART;  if(nType == 3) return FEAT_EPIC_WEAPON_SPECIALIZATION_DART;     if(nType == 4) return FEAT_IMPROVED_CRITICAL_DART;  if(nType == 5) return FEAT_WEAPON_FOCUS_DART;   if(nType == 6) return -1;   if(nType == 7) return FEAT_WEAPON_SPECIALIZATION_DART;  break;
case BASE_ITEM_DIREMACE:   if(nType == 1) return FEAT_EPIC_OVERWHELMING_CRITICAL_DIREMACE;     if(nType == 2) return FEAT_EPIC_WEAPON_FOCUS_DIREMACE;  if(nType == 3) return FEAT_EPIC_WEAPON_SPECIALIZATION_DIREMACE;     if(nType == 4) return FEAT_IMPROVED_CRITICAL_DIRE_MACE;  if(nType == 5) return FEAT_WEAPON_FOCUS_DIRE_MACE;   if(nType == 6) return FEAT_WEAPON_OF_CHOICE_DIREMACE;   if(nType == 7) return FEAT_WEAPON_SPECIALIZATION_DIRE_MACE;  break;
case BASE_ITEM_DOUBLEAXE:  if(nType == 1) return FEAT_EPIC_OVERWHELMING_CRITICAL_DOUBLEAXE;    if(nType == 2) return FEAT_EPIC_WEAPON_FOCUS_DOUBLEAXE;     if(nType == 3) return FEAT_EPIC_WEAPON_SPECIALIZATION_DOUBLEAXE;    if(nType == 4) return FEAT_IMPROVED_CRITICAL_DOUBLE_AXE;     if(nType == 5) return FEAT_WEAPON_FOCUS_DOUBLE_AXE;  if(nType == 6) return FEAT_WEAPON_OF_CHOICE_DOUBLEAXE;  if(nType == 7) return FEAT_WEAPON_SPECIALIZATION_DOUBLE_AXE;     break;
case BASE_ITEM_DWARVENWARAXE:  if(nType == 1) return FEAT_EPIC_OVERWHELMING_CRITICAL_DWAXE;    if(nType == 2) return FEAT_EPIC_WEAPON_FOCUS_DWAXE;     if(nType == 3) return FEAT_EPIC_WEAPON_SPECIALIZATION_DWAXE;    if(nType == 4) return FEAT_IMPROVED_CRITICAL_DWAXE;     if(nType == 5) return FEAT_WEAPON_FOCUS_DWAXE;  if(nType == 6) return FEAT_WEAPON_OF_CHOICE_DWAXE;  if(nType == 7) return FEAT_WEAPON_SPECIALIZATION_DWAXE;     break;
case BASE_ITEM_GREATAXE:   if(nType == 1) return FEAT_EPIC_OVERWHELMING_CRITICAL_GREATAXE;     if(nType == 2) return FEAT_EPIC_WEAPON_FOCUS_GREATAXE;  if(nType == 3) return FEAT_EPIC_WEAPON_SPECIALIZATION_GREATAXE;     if(nType == 4) return FEAT_IMPROVED_CRITICAL_GREAT_AXE;  if(nType == 5) return FEAT_WEAPON_FOCUS_GREAT_AXE;   if(nType == 6) return FEAT_WEAPON_OF_CHOICE_GREATAXE;   if(nType == 7) return FEAT_WEAPON_SPECIALIZATION_GREAT_AXE;  break;
case BASE_ITEM_GREATSWORD:     if(nType == 1) return FEAT_EPIC_OVERWHELMING_CRITICAL_GREATSWORD;   if(nType == 2) return FEAT_EPIC_WEAPON_FOCUS_GREATSWORD;    if(nType == 3) return FEAT_EPIC_WEAPON_SPECIALIZATION_GREATSWORD;   if(nType == 4) return FEAT_IMPROVED_CRITICAL_GREAT_SWORD;    if(nType == 5) return FEAT_WEAPON_FOCUS_GREAT_SWORD;     if(nType == 6) return FEAT_WEAPON_OF_CHOICE_GREATSWORD;     if(nType == 7) return FEAT_WEAPON_SPECIALIZATION_GREAT_SWORD;    break;
case BASE_ITEM_HALBERD:    if(nType == 1) return FEAT_EPIC_OVERWHELMING_CRITICAL_HALBERD;  if(nType == 2) return FEAT_EPIC_WEAPON_FOCUS_HALBERD;   if(nType == 3) return FEAT_EPIC_WEAPON_SPECIALIZATION_HALBERD;  if(nType == 4) return FEAT_IMPROVED_CRITICAL_HALBERD;   if(nType == 5) return FEAT_WEAPON_FOCUS_HALBERD;    if(nType == 6) return FEAT_WEAPON_OF_CHOICE_HALBERD;    if(nType == 7) return FEAT_WEAPON_SPECIALIZATION_HALBERD;   break;
case BASE_ITEM_HANDAXE:    if(nType == 1) return FEAT_EPIC_OVERWHELMING_CRITICAL_HANDAXE;  if(nType == 2) return FEAT_EPIC_WEAPON_FOCUS_HANDAXE;   if(nType == 3) return FEAT_EPIC_WEAPON_SPECIALIZATION_HANDAXE;  if(nType == 4) return FEAT_IMPROVED_CRITICAL_HAND_AXE;   if(nType == 5) return FEAT_WEAPON_FOCUS_HAND_AXE;    if(nType == 6) return FEAT_WEAPON_OF_CHOICE_HANDAXE;    if(nType == 7) return FEAT_WEAPON_SPECIALIZATION_HAND_AXE;   break;
case BASE_ITEM_HEAVYCROSSBOW:  if(nType == 1) return FEAT_EPIC_OVERWHELMING_CRITICAL_HEAVYCROSSBOW;    if(nType == 2) return FEAT_EPIC_WEAPON_FOCUS_HEAVYCROSSBOW;     if(nType == 3) return FEAT_EPIC_WEAPON_SPECIALIZATION_HEAVYCROSSBOW;    if(nType == 4) return FEAT_IMPROVED_CRITICAL_HEAVY_CROSSBOW;     if(nType == 5) return FEAT_WEAPON_FOCUS_HEAVY_CROSSBOW;  if(nType == 6) return -1;  if(nType == 7) return FEAT_WEAPON_SPECIALIZATION_HEAVY_CROSSBOW;     break;
case BASE_ITEM_HEAVYFLAIL:     if(nType == 1) return FEAT_EPIC_OVERWHELMING_CRITICAL_HEAVYFLAIL;   if(nType == 2) return FEAT_EPIC_WEAPON_FOCUS_HEAVYFLAIL;    if(nType == 3) return FEAT_EPIC_WEAPON_SPECIALIZATION_HEAVYFLAIL;   if(nType == 4) return FEAT_IMPROVED_CRITICAL_HEAVY_FLAIL;    if(nType == 5) return FEAT_WEAPON_FOCUS_HEAVY_FLAIL;     if(nType == 6) return FEAT_WEAPON_OF_CHOICE_HEAVYFLAIL;     if(nType == 7) return FEAT_WEAPON_SPECIALIZATION_HEAVY_FLAIL;    break;
case BASE_ITEM_KAMA:   if(nType == 1) return FEAT_EPIC_OVERWHELMING_CRITICAL_KAMA;     if(nType == 2) return FEAT_EPIC_WEAPON_FOCUS_KAMA;  if(nType == 3) return FEAT_EPIC_WEAPON_SPECIALIZATION_KAMA;     if(nType == 4) return FEAT_IMPROVED_CRITICAL_KAMA;  if(nType == 5) return FEAT_WEAPON_FOCUS_KAMA;   if(nType == 6) return FEAT_WEAPON_OF_CHOICE_KAMA;   if(nType == 7) return FEAT_WEAPON_SPECIALIZATION_KAMA;  break;
case BASE_ITEM_KATANA:     if(nType == 1) return FEAT_EPIC_OVERWHELMING_CRITICAL_KATANA;   if(nType == 2) return FEAT_EPIC_WEAPON_FOCUS_KATANA;    if(nType == 3) return FEAT_EPIC_WEAPON_SPECIALIZATION_KATANA;   if(nType == 4) return FEAT_IMPROVED_CRITICAL_KATANA;    if(nType == 5) return FEAT_WEAPON_FOCUS_KATANA;     if(nType == 6) return FEAT_WEAPON_OF_CHOICE_KATANA;     if(nType == 7) return FEAT_WEAPON_SPECIALIZATION_KATANA;    break;
case BASE_ITEM_KUKRI:  if(nType == 1) return FEAT_EPIC_OVERWHELMING_CRITICAL_KUKRI;    if(nType == 2) return FEAT_EPIC_WEAPON_FOCUS_KUKRI;     if(nType == 3) return FEAT_EPIC_WEAPON_SPECIALIZATION_KUKRI;    if(nType == 4) return FEAT_IMPROVED_CRITICAL_KUKRI;     if(nType == 5) return FEAT_WEAPON_FOCUS_KUKRI;  if(nType == 6) return FEAT_WEAPON_OF_CHOICE_KUKRI;  if(nType == 7) return FEAT_WEAPON_SPECIALIZATION_KUKRI;     break;
case BASE_ITEM_LIGHTCROSSBOW:  if(nType == 1) return FEAT_EPIC_OVERWHELMING_CRITICAL_LIGHTCROSSBOW;    if(nType == 2) return FEAT_EPIC_WEAPON_FOCUS_LIGHTCROSSBOW;     if(nType == 3) return FEAT_EPIC_WEAPON_SPECIALIZATION_LIGHTCROSSBOW;    if(nType == 4) return FEAT_IMPROVED_CRITICAL_LIGHT_CROSSBOW;     if(nType == 5) return FEAT_WEAPON_FOCUS_LIGHT_CROSSBOW;  if(nType == 6) return -1;  if(nType == 7) return FEAT_WEAPON_SPECIALIZATION_LIGHT_CROSSBOW;     break;
case BASE_ITEM_LIGHTFLAIL:     if(nType == 1) return FEAT_EPIC_OVERWHELMING_CRITICAL_LIGHTFLAIL;   if(nType == 2) return FEAT_EPIC_WEAPON_FOCUS_LIGHTFLAIL;    if(nType == 3) return FEAT_EPIC_WEAPON_SPECIALIZATION_LIGHTFLAIL;   if(nType == 4) return FEAT_IMPROVED_CRITICAL_LIGHT_FLAIL;    if(nType == 5) return FEAT_WEAPON_FOCUS_LIGHT_FLAIL;     if(nType == 6) return FEAT_WEAPON_OF_CHOICE_LIGHTFLAIL;     if(nType == 7) return FEAT_WEAPON_SPECIALIZATION_LIGHT_FLAIL;    break;
case BASE_ITEM_LIGHTHAMMER:    if(nType == 1) return FEAT_EPIC_OVERWHELMING_CRITICAL_LIGHTHAMMER;  if(nType == 2) return FEAT_EPIC_WEAPON_FOCUS_LIGHTHAMMER;   if(nType == 3) return FEAT_EPIC_WEAPON_SPECIALIZATION_LIGHTHAMMER;  if(nType == 4) return FEAT_IMPROVED_CRITICAL_LIGHT_HAMMER;   if(nType == 5) return FEAT_WEAPON_FOCUS_LIGHT_HAMMER;    if(nType == 6) return FEAT_WEAPON_OF_CHOICE_LIGHTHAMMER;    if(nType == 7) return FEAT_WEAPON_SPECIALIZATION_LIGHT_HAMMER;   break;
case BASE_ITEM_LIGHTMACE:  if(nType == 1) return FEAT_EPIC_OVERWHELMING_CRITICAL_LIGHTMACE;    if(nType == 2) return FEAT_EPIC_WEAPON_FOCUS_LIGHTMACE;     if(nType == 3) return FEAT_EPIC_WEAPON_SPECIALIZATION_LIGHTMACE;    if(nType == 4) return FEAT_IMPROVED_CRITICAL_LIGHT_MACE;     if(nType == 5) return FEAT_WEAPON_FOCUS_LIGHT_MACE;  if(nType == 6) return FEAT_WEAPON_OF_CHOICE_LIGHTMACE;  if(nType == 7) return FEAT_WEAPON_SPECIALIZATION_LIGHT_MACE;     break;
case BASE_ITEM_LONGBOW:    if(nType == 1) return FEAT_EPIC_OVERWHELMING_CRITICAL_LONGBOW;  if(nType == 2) return FEAT_EPIC_WEAPON_FOCUS_LONGBOW;   if(nType == 3) return FEAT_EPIC_WEAPON_SPECIALIZATION_LONGBOW;  if(nType == 4) return FEAT_IMPROVED_CRITICAL_LONGBOW;   if(nType == 5) return FEAT_WEAPON_FOCUS_LONGBOW;    if(nType == 6) return -1;    if(nType == 7) return FEAT_WEAPON_SPECIALIZATION_LONGBOW;   break;
case BASE_ITEM_LONGSWORD:  if(nType == 1) return FEAT_EPIC_OVERWHELMING_CRITICAL_LONGSWORD;    if(nType == 2) return FEAT_EPIC_WEAPON_FOCUS_LONGSWORD;     if(nType == 3) return FEAT_EPIC_WEAPON_SPECIALIZATION_LONGSWORD;    if(nType == 4) return FEAT_IMPROVED_CRITICAL_LONG_SWORD;     if(nType == 5) return FEAT_WEAPON_FOCUS_LONG_SWORD;  if(nType == 6) return FEAT_WEAPON_OF_CHOICE_LONGSWORD;  if(nType == 7) return FEAT_WEAPON_SPECIALIZATION_LONG_SWORD;     break;
case BASE_ITEM_MORNINGSTAR:    if(nType == 1) return FEAT_EPIC_OVERWHELMING_CRITICAL_MORNINGSTAR;  if(nType == 2) return FEAT_EPIC_WEAPON_FOCUS_MORNINGSTAR;   if(nType == 3) return FEAT_EPIC_WEAPON_SPECIALIZATION_MORNINGSTAR;  if(nType == 4) return FEAT_IMPROVED_CRITICAL_MORNING_STAR;   if(nType == 5) return FEAT_WEAPON_FOCUS_MORNING_STAR;    if(nType == 6) return FEAT_WEAPON_OF_CHOICE_MORNINGSTAR;    if(nType == 7) return FEAT_WEAPON_SPECIALIZATION_MORNING_STAR;   break;
case BASE_ITEM_QUARTERSTAFF:   if(nType == 1) return FEAT_EPIC_OVERWHELMING_CRITICAL_QUARTERSTAFF;     if(nType == 2) return FEAT_EPIC_WEAPON_FOCUS_QUARTERSTAFF;  if(nType == 3) return FEAT_EPIC_WEAPON_SPECIALIZATION_QUARTERSTAFF;     if(nType == 4) return FEAT_IMPROVED_CRITICAL_STAFF;  if(nType == 5) return FEAT_WEAPON_FOCUS_STAFF;   if(nType == 6) return FEAT_WEAPON_OF_CHOICE_QUARTERSTAFF;   if(nType == 7) return FEAT_WEAPON_SPECIALIZATION_STAFF;  break;
case BASE_ITEM_RAPIER:     if(nType == 1) return FEAT_EPIC_OVERWHELMING_CRITICAL_RAPIER;   if(nType == 2) return FEAT_EPIC_WEAPON_FOCUS_RAPIER;    if(nType == 3) return FEAT_EPIC_WEAPON_SPECIALIZATION_RAPIER;   if(nType == 4) return FEAT_IMPROVED_CRITICAL_RAPIER;    if(nType == 5) return FEAT_WEAPON_FOCUS_RAPIER;     if(nType == 6) return FEAT_WEAPON_OF_CHOICE_RAPIER;     if(nType == 7) return FEAT_WEAPON_SPECIALIZATION_RAPIER;    break;
case BASE_ITEM_SCIMITAR:   if(nType == 1) return FEAT_EPIC_OVERWHELMING_CRITICAL_SCIMITAR;     if(nType == 2) return FEAT_EPIC_WEAPON_FOCUS_SCIMITAR;  if(nType == 3) return FEAT_EPIC_WEAPON_SPECIALIZATION_SCIMITAR;     if(nType == 4) return FEAT_IMPROVED_CRITICAL_SCIMITAR;  if(nType == 5) return FEAT_WEAPON_FOCUS_SCIMITAR;   if(nType == 6) return FEAT_WEAPON_OF_CHOICE_SCIMITAR;   if(nType == 7) return FEAT_WEAPON_SPECIALIZATION_SCIMITAR;  break;
case BASE_ITEM_SCYTHE:     if(nType == 1) return FEAT_EPIC_OVERWHELMING_CRITICAL_SCYTHE;   if(nType == 2) return FEAT_EPIC_WEAPON_FOCUS_SCYTHE;    if(nType == 3) return FEAT_EPIC_WEAPON_SPECIALIZATION_SCYTHE;   if(nType == 4) return FEAT_IMPROVED_CRITICAL_SCYTHE;    if(nType == 5) return FEAT_WEAPON_FOCUS_SCYTHE;     if(nType == 6) return FEAT_WEAPON_OF_CHOICE_SCYTHE;     if(nType == 7) return FEAT_WEAPON_SPECIALIZATION_SCYTHE;    break;
case BASE_ITEM_SHORTBOW:   if(nType == 1) return FEAT_EPIC_OVERWHELMING_CRITICAL_SHORTBOW;     if(nType == 2) return FEAT_EPIC_WEAPON_FOCUS_SHORTBOW;  if(nType == 3) return FEAT_EPIC_WEAPON_SPECIALIZATION_SHORTBOW;     if(nType == 4) return FEAT_IMPROVED_CRITICAL_SHORTBOW;  if(nType == 5) return FEAT_WEAPON_FOCUS_SHORTBOW;   if(nType == 6) return -1;   if(nType == 7) return FEAT_WEAPON_SPECIALIZATION_SHORTBOW;  break;
case BASE_ITEM_SHORTSPEAR:     if(nType == 1) return FEAT_EPIC_OVERWHELMING_CRITICAL_SHORTSPEAR;   if(nType == 2) return FEAT_EPIC_WEAPON_FOCUS_SHORTSPEAR;    if(nType == 3) return FEAT_EPIC_WEAPON_SPECIALIZATION_SHORTSPEAR;   if(nType == 4) return FEAT_IMPROVED_CRITICAL_SPEAR;    if(nType == 5) return FEAT_WEAPON_FOCUS_SPEAR;     if(nType == 6) return FEAT_WEAPON_OF_CHOICE_SHORTSPEAR;     if(nType == 7) return FEAT_WEAPON_SPECIALIZATION_SPEAR;    break;
case BASE_ITEM_SHORTSWORD:     if(nType == 1) return FEAT_EPIC_OVERWHELMING_CRITICAL_SHORTSWORD;   if(nType == 2) return FEAT_EPIC_WEAPON_FOCUS_SHORTSWORD;    if(nType == 3) return FEAT_EPIC_WEAPON_SPECIALIZATION_SHORTSWORD;   if(nType == 4) return FEAT_IMPROVED_CRITICAL_SHORT_SWORD;    if(nType == 5) return FEAT_WEAPON_FOCUS_SHORT_SWORD;     if(nType == 6) return FEAT_WEAPON_OF_CHOICE_SHORTSWORD;     if(nType == 7) return FEAT_WEAPON_SPECIALIZATION_SHORT_SWORD;    break;
case BASE_ITEM_SHURIKEN:   if(nType == 1) return FEAT_EPIC_OVERWHELMING_CRITICAL_SHURIKEN;     if(nType == 2) return FEAT_EPIC_WEAPON_FOCUS_SHURIKEN;  if(nType == 3) return FEAT_EPIC_WEAPON_SPECIALIZATION_SHURIKEN;     if(nType == 4) return FEAT_IMPROVED_CRITICAL_SHURIKEN;  if(nType == 5) return FEAT_WEAPON_FOCUS_SHURIKEN;   if(nType == 6) return -1;   if(nType == 7) return FEAT_WEAPON_SPECIALIZATION_SHURIKEN;  break;
case BASE_ITEM_SICKLE:     if(nType == 1) return FEAT_EPIC_OVERWHELMING_CRITICAL_SICKLE;   if(nType == 2) return FEAT_EPIC_WEAPON_FOCUS_SICKLE;    if(nType == 3) return FEAT_EPIC_WEAPON_SPECIALIZATION_SICKLE;   if(nType == 4) return FEAT_IMPROVED_CRITICAL_SICKLE;    if(nType == 5) return FEAT_WEAPON_FOCUS_SICKLE;     if(nType == 6) return FEAT_WEAPON_OF_CHOICE_SICKLE;     if(nType == 7) return FEAT_WEAPON_SPECIALIZATION_SICKLE;    break;
case BASE_ITEM_SLING:  if(nType == 1) return FEAT_EPIC_OVERWHELMING_CRITICAL_SLING;    if(nType == 2) return FEAT_EPIC_WEAPON_FOCUS_SLING;     if(nType == 3) return FEAT_EPIC_WEAPON_SPECIALIZATION_SLING;    if(nType == 4) return FEAT_IMPROVED_CRITICAL_SLING;     if(nType == 5) return FEAT_WEAPON_FOCUS_SLING;  if(nType == 6) return -1;  if(nType == 7) return FEAT_WEAPON_SPECIALIZATION_SLING;     break;
case BASE_ITEM_THROWINGAXE:    if(nType == 1) return FEAT_EPIC_OVERWHELMING_CRITICAL_THROWINGAXE;  if(nType == 2) return FEAT_EPIC_WEAPON_FOCUS_THROWINGAXE;   if(nType == 3) return FEAT_EPIC_WEAPON_SPECIALIZATION_THROWINGAXE;  if(nType == 4) return FEAT_IMPROVED_CRITICAL_THROWING_AXE;   if(nType == 5) return FEAT_WEAPON_FOCUS_THROWING_AXE;    if(nType == 6) return -1;    if(nType == 7) return FEAT_WEAPON_SPECIALIZATION_THROWING_AXE;   break;
case BASE_ITEM_TWOBLADEDSWORD:     if(nType == 1) return FEAT_EPIC_OVERWHELMING_CRITICAL_TWOBLADEDSWORD;   if(nType == 2) return FEAT_EPIC_WEAPON_FOCUS_TWOBLADEDSWORD;    if(nType == 3) return FEAT_EPIC_WEAPON_SPECIALIZATION_TWOBLADEDSWORD;   if(nType == 4) return FEAT_IMPROVED_CRITICAL_TWO_BLADED_SWORD;    if(nType == 5) return FEAT_WEAPON_FOCUS_TWO_BLADED_SWORD;     if(nType == 6) return FEAT_WEAPON_OF_CHOICE_TWOBLADEDSWORD;     if(nType == 7) return FEAT_WEAPON_SPECIALIZATION_TWO_BLADED_SWORD;    break;
case BASE_ITEM_INVALID:    if(nType == 1) return FEAT_EPIC_OVERWHELMING_CRITICAL_UNARMED;  if(nType == 2) return FEAT_EPIC_WEAPON_FOCUS_UNARMED;   if(nType == 3) return FEAT_EPIC_WEAPON_SPECIALIZATION_UNARMED;  if(nType == 4) return FEAT_IMPROVED_CRITICAL_UNARMED_STRIKE;   if(nType == 5) return FEAT_WEAPON_FOCUS_UNARMED_STRIKE;    if(nType == 6) return -1;    if(nType == 7) return FEAT_WEAPON_SPECIALIZATION_UNARMED_STRIKE;   break;
case BASE_ITEM_WARHAMMER:  if(nType == 1) return FEAT_EPIC_OVERWHELMING_CRITICAL_WARHAMMER;    if(nType == 2) return FEAT_EPIC_WEAPON_FOCUS_WARHAMMER;     if(nType == 3) return FEAT_EPIC_WEAPON_SPECIALIZATION_WARHAMMER;    if(nType == 4) return FEAT_IMPROVED_CRITICAL_WAR_HAMMER;     if(nType == 5) return FEAT_WEAPON_FOCUS_WAR_HAMMER;  if(nType == 6) return FEAT_WEAPON_OF_CHOICE_WARHAMMER;  if(nType == 7) return FEAT_WEAPON_SPECIALIZATION_WAR_HAMMER;     break;
case BASE_ITEM_WHIP:   if(nType == 1) return FEAT_EPIC_OVERWHELMING_CRITICAL_WHIP;     if(nType == 2) return FEAT_EPIC_WEAPON_FOCUS_WHIP;  if(nType == 3) return FEAT_EPIC_WEAPON_SPECIALIZATION_WHIP;     if(nType == 4) return FEAT_IMPROVED_CRITICAL_WHIP;  if(nType == 5) return FEAT_WEAPON_FOCUS_WHIP;   if(nType == 6) return FEAT_WEAPON_OF_CHOICE_WHIP;   if(nType == 7) return FEAT_WEAPON_SPECIALIZATION_WHIP;  break;

}
    return -1;
}
