

      ___           ___           ___     
     /\  \         /\__\         /\  \    
    /::\  \       /::|  |       /::\  \   
   /:/\:\  \     /:|:|  |      /:/\:\  \  
  /::\~\:\  \   /:/|:|__|__   /:/  \:\  \ 
 /:/\:\ \:\__\ /:/ |::::\__\ /:/__/_\:\__\
 \/_|::\/:/  / \/__/~~/:/  / \:\  /\ \/__/
    |:|::/  /        /:/  /   \:\ \:\__\  
    |:|\/__/        /:/  /     \:\/:/  /  
    |:|  |         /:/  /       \::/  /   
     \|__|         \/__/         \/__/    



 _                   
|_) _.._  _| _ ._ _   
| \(_|| |(_|(_)| | | 
                   
|\/| _  _|   | _   
|  |(_)(_||_||(/_  
 __                        
/__ _ ._  _ ._ _._|_ _ ._ 
\_|(/_| |(/_| (_| |_(_)|   



Outline

Introduction
    Overall design aims
Component systems
    RIG (Random Item Generator)
    RAG (Random Area Generator)
    RWG (Random World Generator)

Introduction
============

The aim of this project is to design and create a system that will allow for a hybrid of rogue-like and PnP gameplay in NWN.
For a description of rogue-like, http://en.wikipedia.org/wiki/Roguelike Basically it means unpredictable & replayable. The best known commercial rogue-like is Diablo, though in some aspects that is far from the original concept.
For a description of NWN (Neverwinter Nights), see http://en.wikipedia.org/wiki/Neverwinter_Nights or www.nwn.bioware.com
PnP means "Pen and Paper" and refers to the rules and stype of the original D&D (Dungeons and Dragons) game.

The key design princinple that makes this different from other modules is that rather than designing a world around the player and what they can and cant do, the world is designed first and how the player interacts with it is up to the player. This is similar to games such as Elite or SimCity where there is no overall "plot" as such, other than what the player makes for themselves.

The method to achieve this is by using external applications to generate much of the content before the module is loaded. The module itself is single player, though multiplayer conflcits will be avoided. To use the power of Letoscript & SQL, the module must be run via NWNX.

The background is fairly simplistic. The player has been recruited into a mercenary group known as SEED, but as part of the recruitment process has had their previous memories erased. The player is in command of a small cell of other merceneries within SEED. SEED itself is a secretive organization, and each team is not able to reveal its associate with SEED due to cartain high-powered complsions. The exact nature of SEEDs organisation is unknown, but it has rapidly spread all over the planes providing protection services and has replaced most civilised standing armies as tools of war. Instead the two sides in conflict both pay SEED to provide them with forces, and the two accounts are compared against each other with highest bidder recieving mercenaries to the value of the difference. SEED also offers services for individuals on a wide range of budgets, ranging from isolated farmers who need some help fending off kobold raids to powerful multinational corporations looking to retrieve powerful artifacts. SEED has officies in thousands of locations throughout the planes, though they all appear identical and some speculate they are really portals to a single demi-plane.


Overall design aims
-------------------

One of the key requirements to make it unpredictable is a wide variety of everything. This means both the creatures that can be played and those that can be encountered. It includes what items are avaliable to be discovered and places to go to.

The range of creatures in the game is provided by the PRC (Player Resource Consortium www.nwn-prc.com ). This adds a vast selection of races, classes, feats, spells, and other content as well as a number of core systems that can be used. By mixing the races and classes, vast numbers of combinations can be achieved. This is both the hardest and the easiest part to design; on the one hand its already done for the players and can be slotted in without much trouble, on the other hand there is no AI to allow NPCs to use it. Eventually, it would be ideal to have an evolving population for each race that selected both AI behaviour and class/feat selections.

The required large number of items is provided by the RIG (Random Item Generator). This uses a combination system similar to Diablo of a root plus an optional prefix and suffix. This should easily allow for millions of diferent items. This is a java application which produces all the items as blueprints in advance of the module being loaded. (NOTE: This approach is not practical due  to the total size of all the required blueprints)

The places to go to are divided into two scales. On the large scale there are the D&D "planes", each of which can be thought of as a parallel universe. These areas are generated by the RWG (Random World Generator) as a "world map" which binds together the individual places of interest. On the smaller scale, the areas are generated by the RAG (Random Area Generator). Rather than creating new models as the RWG does, the RAG uses the existing tile system to create new areas for the player to explore. As with the RIG, both the RWG and the RAG are run in advance of the module being loaded. Unlike the RIG however, the output from the RAG & RWG varies each time it is run.


Some other basic design features:

Persistance. Each installation is its own persistant world, and as such maintains its own economy, ecosystem, and overall designs. See also Economy and Ecosystem below, as wel as Random Design.

Economy. Each "town" on the world map has a certain economy, which means different items have different prices in different locations. Generally, players will buy for 150% of market value and sell for 50% of market value because they don't have the local knowedge or the time to get the best deal. Over time, the towns will automatically trade with each other and thus market value will fluctuate based on supply and demand. Players can influence this both directly, by hiring caravans and transporting good themselves as well as setting up shops and manufacturing bases, and indirectly, by where they sell and spend their loot. In order to stop "hyperinflation" that normally plagues PW settings, all towns will charge an tax when a character leaves based on character value, local economy, and duration of stay. As an additional measure to stop players becoming ultra-wealthy and to encourage crafting, a system of equipment damage and repair may be used based on decay over time with equiped items decaying faster than items in inventory.

Ecosystem. Each "town" has a certain population, and over time that will change depending on racial makeup and food avaliability. "town" also includes traditionally hostile places, such as a cave of kobolds. Over time "town" makeup will change as they conflict with each other, reproduce, migrate, starve, etc. Certain other characteristics, such as economy, influence the "town" as well as what is happening to neighboring "towns". "towns" fall into 3 types of civilization: "hunter gatherer" (tribes, raiders, etc), "farming" (small to medium "civilized towns"), or "industrial" (rely on importing food from nearby towns). Players can have a significant effect on the Ecosystem either directly through quests (Destroy a cave of kobolds near a village, the village will have more spare food, village will grow faster), or indirectly by influencing the economy (By selling items to an outlying village the vilage gets richer. This encourages people to migrate from the city, which makes the village grow).

Random Design. As part of the installation process, the RAG and RWG are run. These then generate a set of areas that are unique to that installation. This ensures that each players experience is unique, which also means they can't trade notes on what's where.

Perma-death. When a character dies, they cannot respawn though Ressurect and Raise Dead spells work as normal. While this may be seen by some as very agressive, it is needed in the more free-form style of play of a rogue-like in order to maintain a sense of danger and therefore excitement. The effects of perma-death are lessened by Party Play, detailed below.

Party Play. Rather than the player maintaining a single character in the world, they have a stable of multiple characters (up to 8) which can be arranged into a 4 character party, similar to having the main player plus 3 henchmen. Within the party, the played character can be swapped any time the player rests. If the player wishes to change the characters in the party, they can only do so at SEED offices. When a character dies permanently, they can be replaced by a fresh character. When characters are not in the active party, they gradually accumulate experience from "training". This is accelerated for low level characters training with higher level characters, so new characters can catch up. Also, characters can only gain levels whilst at SEED officies, and only in classes they have "unlocked" (see Race and Class Unlocking below).

Multiple Planes. Following the traditional D&D cosmology, there are 27 major planes, each of which may be composed of multiple layers. Each layer is a single world map, with its own towns and other locations. Depending on the current party composition, some world maps may be more or less hostile; for example, if you have a party of evil plane-touched creatures, you may be treated as a "neutral" in the Hells, whereas good characters would be attacked on sight.

Race and Class Unlocking. This is another controversial topic, but one that helps promote a sense of achievement and goals. It operates on two levels, firstly as per PnP certain classes have additional entry requirements usually relating to a specific deed or society. For example, a character wishing to become a Champion of Torm would have to perform a service to the church of Torm before they could take levels in that class. On the other level, SEED restricts the avaliability of new recruits and training to those groups who have proven they deserve them. For example, if a player wishes to have an Ogre character, they must have at least 3 characters of ECL 7 or higher. Additionally, there may be costs for specific races or classes, such as paying 10,000 GP before you can take the Psion class. The two levels of these restrictions are distinguished because the first is on a per-character basis, wheras the second is on a per-team basis.

Mission-based play. At any one time, a party can always select a SEED mission avaliable from the nearest SEED offices. These are all time-limited. There is a range of mission types, for example courier/escort jobs, defense, assassination. Within each type, there is a lot of randomisation for example, you may have to courier a small package very quickly over a long distance, or a large shipment a short distance against opposition.


Component systems
=================


RIG (Random Item Generator)

This is now entirely scripted thanks to biowares release of SetName in v1.67 :)

RAG (Random Area Generator)



RWG (Random World Generator)

For each terrain{
	Make a heightmap
		Either read from a specified file
		Or read from a series of instructions to generate one
	Make a texturemap
		Either read from a specified file
		Or read from a series of instructions to generate one
	For each section that represents 1 tile{
		Generate a list of Vertexs from the heightmap
		Generate a list of Faces from the heightmap
		[Some sort of reduction of faces, however, outermost row must be the same to avoid seams]
		Generate a list of Texturevertexs from the texturemap & vertex lst.
		Output MDL file
		Output WOK file
		Output TGA file
		Output TGA file for mini-map
		Add data to SET list
	}
}
Output SET fle

Credits
	Primogenitor for most of the work
	Stratovarius, Ornedan, GaiaWereworlf and the rest of the PRC team for the PRC
	http://www.network-science.de/ascii/ for the ASCII art at the top